.. index:: pair: group; Library initialization and termination
.. _doxid-group__apr__library:

Library initialization and termination
======================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

String and memory functions :ref:`More...<details-group__apr__library>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_initialize<doxid-group__apr__library_1ga4a91a6b9ff457ead13e670950127761a>`(void);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_app_initialize<doxid-group__apr__library_1gaa1c4fc2e1c814cc5d4cd3d8719288fc9>`(
		int* argc,
		char const*const** argv,
		char const*const** env
	);

	void
	:ref:`apr_terminate<doxid-group__apr__library_1ga8e96d45ee09fc7e7eb3646efef1424a3>`(void);

	void
	:ref:`apr_terminate2<doxid-group__apr__library_1ga18667a60ff34d6209e519b4a4ce8cad1>`(void);

.. _details-group__apr__library:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

String and memory functions

Global Functions
----------------

.. index:: pair: function; apr_initialize
.. _doxid-group__apr__library_1ga4a91a6b9ff457ead13e670950127761a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_initialize(void)

Setup any APR internal data structures. This MUST be the first function called for any APR library. It is safe to call apr_initialize several times as long as apr_terminate is called the same number of times. See apr_app_initialize if this is an application, rather than a library consumer of apr.

.. index:: pair: function; apr_app_initialize
.. _doxid-group__apr__library_1gaa1c4fc2e1c814cc5d4cd3d8719288fc9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_app_initialize(
		int* argc,
		char const*const** argv,
		char const*const** env
	)

Set up an application with normalized argc, argv (and optionally env) in order to deal with platform-specific oddities, such as Win32 services, code pages and signals. This must be the first function called for any APR program. See apr_initialize if this is a library consumer of apr. Otherwise, this call is identical to apr_initialize, and must be closed with a call to apr_terminate at the end of program execution.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- argc

		- Pointer to the argc that may be corrected

	*
		- argv

		- Pointer to the argv that may be corrected

	*
		- env

		- Pointer to the env that may be corrected, may be NULL

.. index:: pair: function; apr_terminate
.. _doxid-group__apr__library_1ga8e96d45ee09fc7e7eb3646efef1424a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	apr_terminate(void)

Tear down any APR internal data structures which aren't torn down automatically. apr_terminate must be called once for every call to :ref:`apr_initialize() <doxid-group__apr__library_1ga4a91a6b9ff457ead13e670950127761a>` or :ref:`apr_app_initialize() <doxid-group__apr__library_1gaa1c4fc2e1c814cc5d4cd3d8719288fc9>`. An APR program must call this function at termination once it has stopped using APR services. The APR developers suggest using atexit to ensure this is called. When using APR from a language other than C that has problems with the calling convention, use :ref:`apr_terminate2() <doxid-group__apr__library_1ga18667a60ff34d6209e519b4a4ce8cad1>` instead.

.. index:: pair: function; apr_terminate2
.. _doxid-group__apr__library_1ga18667a60ff34d6209e519b4a4ce8cad1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	apr_terminate2(void)

Tear down any APR internal data structures which aren't torn down automatically, same as apr_terminate An APR program must call either the apr_terminate or apr_terminate2 function once it it has finished using APR services. The APR developers suggest using atexit(apr_terminate) to ensure this is done. apr_terminate2 exists to allow non-c language apps to tear down apr, while apr_terminate is recommended from c language applications.

