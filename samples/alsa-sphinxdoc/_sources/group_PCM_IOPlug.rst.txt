.. index:: pair: group; External I/O plugin SDK
.. _doxid-group___p_c_m___i_o_plug:

External I/O plugin SDK
=======================

.. toctree::
	:hidden:

	struct_snd_pcm_ioplug.rst
	struct_snd_pcm_ioplug_callback.rst

Overview
~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details. :ref:`More...<details-group___p_c_m___i_o_plug>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef :ref:`snd_pcm_ioplug<doxid-structsnd__pcm__ioplug>` :ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`;
	typedef :ref:`snd_pcm_ioplug_callback<doxid-structsnd__pcm__ioplug__callback>` :ref:`snd_pcm_ioplug_callback_t<doxid-group___p_c_m___i_o_plug_1ga9bbf2927f689c96faa7b6c5c89286355>`;

	// enums

	enum {
	    :ref:`@6::SND_PCM_IOPLUG_HW_ACCESS<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635adf64bb9d9a7f95f878e8bb22e003c357>`       = 0,
	    :ref:`@6::SND_PCM_IOPLUG_HW_FORMAT<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635aa7186fa6ab3791611363c83f725f1a57>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_CHANNELS<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a5cb59832a513d2b87166000d3f4035e2>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_RATE<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a43827c9773bc5c40a1643bd8f930c8d1>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_PERIOD_BYTES<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635aafe12ebbe6f618aa75cc7c5d64d45eda>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_BUFFER_BYTES<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a004f7b7af23b37d30d520777158e8277>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_PERIODS<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a1f68c89ac11ae9fe28710cee044a0b94>`,
	    :ref:`@6::SND_PCM_IOPLUG_HW_PARAMS<doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635ab024a119736127e7a606c75e57d34585>`,
	};

	// structs

	struct :ref:`snd_pcm_ioplug<doxid-structsnd__pcm__ioplug>`;
	struct :ref:`snd_pcm_ioplug_callback<doxid-structsnd__pcm__ioplug__callback>`;

	// global functions

	int
	:ref:`snd_pcm_ioplug_create<doxid-group___p_c_m___i_o_plug_1ga7fb5213a5e776246e2b4dc53ec8d7604>`(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		const char* name,
		:ref:`snd_pcm_stream_t<doxid-group___p_c_m_1gac23b43ff55add78638e503b9cc892c24>` stream,
		int mode
	);

	int
	:ref:`snd_pcm_ioplug_delete<doxid-group___p_c_m___i_o_plug_1ga286ec116983166de889f0268a2c666ef>`(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io);

	int
	:ref:`snd_pcm_ioplug_reinit_status<doxid-group___p_c_m___i_o_plug_1gab223893226ecf78f675c89959a8c421a>`(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug);

	const :ref:`snd_pcm_channel_area_t<doxid-structsnd__pcm__channel__area__t>`*
	:ref:`snd_pcm_ioplug_mmap_areas<doxid-group___p_c_m___i_o_plug_1gac3b666ff286745c9eb24de3e3930970a>`(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug);

	void
	:ref:`snd_pcm_ioplug_params_reset<doxid-group___p_c_m___i_o_plug_1gad74355dfaa56fae80d49181c83eeecc4>`(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io);

	int
	:ref:`snd_pcm_ioplug_set_param_minmax<doxid-group___p_c_m___i_o_plug_1gab62d470b02661214319196394b55fb37>`(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		int type,
		unsigned int min,
		unsigned int max
	);

	int
	:ref:`snd_pcm_ioplug_set_param_list<doxid-group___p_c_m___i_o_plug_1ga7d713552fb846ccdf4b7ec6a9fc1b562>`(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		int type,
		unsigned int num_list,
		const unsigned int* list
	);

	int
	:ref:`snd_pcm_ioplug_set_state<doxid-group___p_c_m___i_o_plug_1ga65feed7caf26f07aad0c722fc61fe751>`(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug,
		:ref:`snd_pcm_state_t<doxid-group___p_c_m_1ga61ac499cb3701ce536d4d83725908860>` state
	);

	// macros

	#define :ref:`SND_PCM_IOPLUG_FLAG_LISTED<doxid-group___p_c_m___i_o_plug_1ga435c57838f97c24b7274a9596ccbe3b6>`
	#define :ref:`SND_PCM_IOPLUG_FLAG_MONOTONIC<doxid-group___p_c_m___i_o_plug_1gad5c0b67e4d9b7be96f1083179e95f38a>`
	#define :ref:`SND_PCM_IOPLUG_VERSION<doxid-group___p_c_m___i_o_plug_1ga81a2273c4df9be29d91e6e2a0860d991>`
	#define :ref:`SND_PCM_IOPLUG_VERSION_MAJOR<doxid-group___p_c_m___i_o_plug_1ga46f4111ec394e6c4209a4e1b5f99a9f7>`
	#define :ref:`SND_PCM_IOPLUG_VERSION_MINOR<doxid-group___p_c_m___i_o_plug_1ga49ea8946ea0c9b2655b70afb03ed79bd>`
	#define :ref:`SND_PCM_IOPLUG_VERSION_TINY<doxid-group___p_c_m___i_o_plug_1gabe46103216aa58afc3c4bc314dd1bbc6>`

.. _details-group___p_c_m___i_o_plug:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details.

Enum Values
-----------

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_ACCESS
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635adf64bb9d9a7f95f878e8bb22e003c357:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_ACCESS

access type

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_FORMAT
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635aa7186fa6ab3791611363c83f725f1a57:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_FORMAT

format

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_CHANNELS
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a5cb59832a513d2b87166000d3f4035e2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_CHANNELS

channels

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_RATE
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a43827c9773bc5c40a1643bd8f930c8d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_RATE

rate

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_PERIOD_BYTES
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635aafe12ebbe6f618aa75cc7c5d64d45eda:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_PERIOD_BYTES

period bytes

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_BUFFER_BYTES
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a004f7b7af23b37d30d520777158e8277:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_BUFFER_BYTES

buffer bytes

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_PERIODS
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635a1f68c89ac11ae9fe28710cee044a0b94:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_PERIODS

number of periods

.. index:: pair: enumvalue; SND_PCM_IOPLUG_HW_PARAMS
.. _doxid-group___p_c_m___i_o_plug_1gga726ca809ffd3d67ab4b8476646f26635ab024a119736127e7a606c75e57d34585:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SND_PCM_IOPLUG_HW_PARAMS

max number of hw constraints

Typedefs
--------

.. index:: pair: typedef; snd_pcm_ioplug_t
.. _doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`snd_pcm_ioplug<doxid-structsnd__pcm__ioplug>` snd_pcm_ioplug_t

I/O plugin handle

.. index:: pair: typedef; snd_pcm_ioplug_callback_t
.. _doxid-group___p_c_m___i_o_plug_1ga9bbf2927f689c96faa7b6c5c89286355:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`snd_pcm_ioplug_callback<doxid-structsnd__pcm__ioplug__callback>` snd_pcm_ioplug_callback_t

Callback table of ioplug

Global Functions
----------------

.. index:: pair: function; snd_pcm_ioplug_create
.. _doxid-group___p_c_m___i_o_plug_1ga7fb5213a5e776246e2b4dc53ec8d7604:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_create(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		const char* name,
		:ref:`snd_pcm_stream_t<doxid-group___p_c_m_1gac23b43ff55add78638e503b9cc892c24>` stream,
		int mode
	)

Create an ioplug instance.

Creates the ioplug instance.

The callback is the mandatory field of ioplug handle. At least, start, stop and pointer callbacks must be set before calling this function.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle

	*
		- name

		- name of PCM

	*
		- stream

		- stream direction

	*
		- mode

		- PCM open mode



.. rubric:: Returns:

0 if successful, or a negative error code

.. index:: pair: function; snd_pcm_ioplug_delete
.. _doxid-group___p_c_m___i_o_plug_1ga286ec116983166de889f0268a2c666ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_delete(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io)

Delete the ioplug instance.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle



.. rubric:: Returns:

0 if successful, or a negative error code

.. index:: pair: function; snd_pcm_ioplug_reinit_status
.. _doxid-group___p_c_m___i_o_plug_1gab223893226ecf78f675c89959a8c421a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_reinit_status(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug)

Reinitialize the poll and mmap status.

Reinitializes the poll and the mmap status of the PCM. Call this function to propagate the status change in the ioplug instance to its PCM internals.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle



.. rubric:: Returns:

0 if successful, or a negative error code

.. index:: pair: function; snd_pcm_ioplug_mmap_areas
.. _doxid-group___p_c_m___i_o_plug_1gac3b666ff286745c9eb24de3e3930970a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`snd_pcm_channel_area_t<doxid-structsnd__pcm__channel__area__t>`*
	snd_pcm_ioplug_mmap_areas(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug)

Get mmap area of ioplug.

Returns the mmap channel areas if available. When mmap_rw field is not set, this function always returns NULL.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle



.. rubric:: Returns:

the mmap channel areas if available, or NULL

.. index:: pair: function; snd_pcm_ioplug_params_reset
.. _doxid-group___p_c_m___i_o_plug_1gad74355dfaa56fae80d49181c83eeecc4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_ioplug_params_reset(:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io)

Reset ioplug parameters.

Resets the all parameters for the given ioplug handle.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle

.. index:: pair: function; snd_pcm_ioplug_set_param_minmax
.. _doxid-group___p_c_m___i_o_plug_1gab62d470b02661214319196394b55fb37:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_set_param_minmax(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		int type,
		unsigned int min,
		unsigned int max
	)

Set parameter as the min/max values.

Sets the parameter as the min/max values. The available values of the given parameter type is restricted between the given minimum and maximum values.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle

	*
		- type

		- parameter type

	*
		- min

		- the minimum value

	*
		- max

		- the maximum value



.. rubric:: Returns:

0 if successful, or a negative error code

.. index:: pair: function; snd_pcm_ioplug_set_param_list
.. _doxid-group___p_c_m___i_o_plug_1ga7d713552fb846ccdf4b7ec6a9fc1b562:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_set_param_list(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* io,
		int type,
		unsigned int num_list,
		const unsigned int* list
	)

Set parameter as the list.

Sets the parameter as the list. The available values of the given parameter type is restricted to the ones of the given list.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle

	*
		- type

		- parameter type

	*
		- num_list

		- number of available values

	*
		- list

		- the list of available values



.. rubric:: Returns:

0 if successful, or a negative error code

.. index:: pair: function; snd_pcm_ioplug_set_state
.. _doxid-group___p_c_m___i_o_plug_1ga65feed7caf26f07aad0c722fc61fe751:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_ioplug_set_state(
		:ref:`snd_pcm_ioplug_t<doxid-group___p_c_m___i_o_plug_1ga1038655a4ca74f3aef060282d6df739b>`* ioplug,
		:ref:`snd_pcm_state_t<doxid-group___p_c_m_1ga61ac499cb3701ce536d4d83725908860>` state
	)

Change the ioplug PCM status.

Changes the PCM status of the ioplug to the given value. This function can be used for external plugins to notify the status change, e.g. XRUN.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ioplug

		- the ioplug handle

	*
		- state

		- the PCM status



.. rubric:: Returns:

zero if successful or a negative error code

Macros
------

.. index:: pair: define; SND_PCM_IOPLUG_FLAG_LISTED
.. _doxid-group___p_c_m___i_o_plug_1ga435c57838f97c24b7274a9596ccbe3b6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_FLAG_LISTED

list up this PCM

.. index:: pair: define; SND_PCM_IOPLUG_FLAG_MONOTONIC
.. _doxid-group___p_c_m___i_o_plug_1gad5c0b67e4d9b7be96f1083179e95f38a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_FLAG_MONOTONIC

monotonic timestamps

.. index:: pair: define; SND_PCM_IOPLUG_VERSION
.. _doxid-group___p_c_m___i_o_plug_1ga81a2273c4df9be29d91e6e2a0860d991:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_VERSION

IO-plugin protocol version

.. index:: pair: define; SND_PCM_IOPLUG_VERSION_MAJOR
.. _doxid-group___p_c_m___i_o_plug_1ga46f4111ec394e6c4209a4e1b5f99a9f7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_VERSION_MAJOR

Protocol major version

.. index:: pair: define; SND_PCM_IOPLUG_VERSION_MINOR
.. _doxid-group___p_c_m___i_o_plug_1ga49ea8946ea0c9b2655b70afb03ed79bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_VERSION_MINOR

Protocol minor version

.. index:: pair: define; SND_PCM_IOPLUG_VERSION_TINY
.. _doxid-group___p_c_m___i_o_plug_1gabe46103216aa58afc3c4bc314dd1bbc6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_PCM_IOPLUG_VERSION_TINY

Protocol tiny version

