.. index:: pair: page; Timer interface
.. _doxid-timer:

Timer interface
===============

Timer interface is designed to use internal timers in sound hardware, but it can be driven with any timer.



.. _doxid-timer_1timer_general_overview:

General overview
~~~~~~~~~~~~~~~~

The timer implementation uses ring buffer to store information about timing events. In this buffer is recorded count of ticks and current tick resolution in nanoseconds.





.. _doxid-timer_1timer_open:

Opening
~~~~~~~

Timer devices can be opened in two ways. When :ref:`SND_TIMER_OPEN_NONBLOCK <doxid-group___timer_1gac2c50bf6045560bc13aab81f25b2b740>` flag is used, then the open functions return immediately with -EBUSY error code when resources are occupied with another application. When :ref:`SND_TIMER_OPEN_NONBLOCK <doxid-group___timer_1gac2c50bf6045560bc13aab81f25b2b740>` is not used (by default) the open functions block the application requesting device until resources are not free.





.. _doxid-timer_1timer_events:

Events
~~~~~~

Events are read via :ref:`snd_timer_read() <doxid-group___timer_1ga724ada94d0bc3564ad77973c0a084682>` function.





.. _doxid-timer_1timer_examples:

Examples
~~~~~~~~

The full featured examples with cross-links:

:ref:`example code <doxid-/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/timer/timer.c_1example_test_timer>`

This example shows opening a timer device and reading of timer events.

