.. index:: pair: group; Sequencer Middle Level Interface
.. _doxid-group___seq_middle:

Sequencer Middle Level Interface
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Sequencer Middle Level Interface :ref:`More...<details-group___seq_middle>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	int
	:ref:`snd_seq_control_queue<doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		int type,
		int value,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	);

	int
	:ref:`snd_seq_create_simple_port<doxid-group___seq_middle_1ga9368266bde7b5c0f8d5ddeaf64914719>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name,
		unsigned int caps,
		unsigned int type
	);

	int
	:ref:`snd_seq_delete_simple_port<doxid-group___seq_middle_1ga8ac4c3a85750550f2978ca720a6329ca>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int port
	);

	int
	:ref:`snd_seq_connect_from<doxid-group___seq_middle_1ga1382029795fa101a3b8cc0af7b83b639>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int src_client,
		int src_port
	);

	int
	:ref:`snd_seq_connect_to<doxid-group___seq_middle_1gab39e210c5d93e96c241644f334c6c9ca>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int dest_client,
		int dest_port
	);

	int
	:ref:`snd_seq_disconnect_from<doxid-group___seq_middle_1ga931d199c780be30524aa24e58c59f6b9>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int src_client,
		int src_port
	);

	int
	:ref:`snd_seq_disconnect_to<doxid-group___seq_middle_1gafe5756afcd471b2d6bbd457c7abc5e89>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int dest_client,
		int dest_port
	);

	int
	:ref:`snd_seq_set_client_name<doxid-group___seq_middle_1gaec3acab3bfb3df3f0c9ccc4903570b9d>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	);

	int
	:ref:`snd_seq_set_client_event_filter<doxid-group___seq_middle_1ga888bf17bbc8141d1624f7bbef52dddce>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int event_type
	);

	int
	:ref:`snd_seq_set_client_pool_output<doxid-group___seq_middle_1ga38e40d84154122798c9fad8e56c60a0f>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	);

	int
	:ref:`snd_seq_set_client_pool_output_room<doxid-group___seq_middle_1ga597d2417e0fd512f56d31464cc2ea7d7>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	);

	int
	:ref:`snd_seq_set_client_pool_input<doxid-group___seq_middle_1ga1344c7aadb847bd409093c179557732d>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	);

	int
	:ref:`snd_seq_sync_output_queue<doxid-group___seq_middle_1ga732ad887b457771b7db47908186e8cce>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq);

	int
	:ref:`snd_seq_parse_address<doxid-group___seq_middle_1ga692043bd9cb709b15513b06cea5bf0e8>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		:ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`* addr,
		const char* str
	);

	int
	:ref:`snd_seq_reset_pool_output<doxid-group___seq_middle_1ga49d2acf57c4493a95eaaa19d8199f6f2>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq);

	int
	:ref:`snd_seq_reset_pool_input<doxid-group___seq_middle_1gae90243ea4d4e534bbca2b3965ff8efe9>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq);

	// macros

	#define :ref:`snd_seq_change_queue_tempo<doxid-group___seq_middle_1gab77f13c0b39dec12ef983eb706925d00>`( \
		seq, \
		q, \
		tempo, \
		ev \
	)

	#define :ref:`snd_seq_continue_queue<doxid-group___seq_middle_1gad6b0c90be37eeb583318c9077f095b86>`( \
		seq, \
		q, \
		ev \
	)

	#define :ref:`snd_seq_ev_clear<doxid-group___seq_middle_1gafa496482a21b231621b385d1f1675b58>`(ev)

	#define :ref:`snd_seq_ev_schedule_real<doxid-group___seq_middle_1ga713370bf29736477532e791b4ad92530>`( \
		ev, \
		q, \
		relative, \
		rtime \
	)

	#define :ref:`snd_seq_ev_schedule_tick<doxid-group___seq_middle_1ga589469c27715bfae205ce26d5801d8b1>`( \
		ev, \
		q, \
		relative, \
		ttick \
	)

	#define :ref:`snd_seq_ev_set_broadcast<doxid-group___seq_middle_1gab06bf27dd5d0c94d78d935311fec1124>`(ev)

	#define :ref:`snd_seq_ev_set_chanpress<doxid-group___seq_middle_1gaa475a6778116256734e7da45f4eb7af8>`( \
		ev, \
		ch, \
		val \
	)

	#define :ref:`snd_seq_ev_set_controller<doxid-group___seq_middle_1ga1658bb76bb89c8bac1e7b0140d72c23c>`( \
		ev, \
		ch, \
		cc, \
		val \
	)

	#define :ref:`snd_seq_ev_set_dest<doxid-group___seq_middle_1gaff2d03c7db0d6d5cfeec429d160d9459>`( \
		ev, \
		c, \
		p \
	)

	#define :ref:`snd_seq_ev_set_direct<doxid-group___seq_middle_1gae2674210b5601e8aa3e787c1ddbdcb62>`(ev)
	#define :ref:`snd_seq_ev_set_fixed<doxid-group___seq_middle_1ga8c949038f36fd3e27de8b8e419978793>`(ev)

	#define :ref:`snd_seq_ev_set_keypress<doxid-group___seq_middle_1ga09c562a0d1745dc1a73e7347d51af913>`( \
		ev, \
		ch, \
		key, \
		vel \
	)

	#define :ref:`snd_seq_ev_set_note<doxid-group___seq_middle_1ga544adc6b2a43edab107962754a772778>`( \
		ev, \
		ch, \
		key, \
		vel, \
		dur \
	)

	#define :ref:`snd_seq_ev_set_noteoff<doxid-group___seq_middle_1gab9b466031485504fd5b4300def95de7c>`( \
		ev, \
		ch, \
		key, \
		vel \
	)

	#define :ref:`snd_seq_ev_set_noteon<doxid-group___seq_middle_1ga61fbd95aadd4a80f4ff8db5f8f28172f>`( \
		ev, \
		ch, \
		key, \
		vel \
	)

	#define :ref:`snd_seq_ev_set_pgmchange<doxid-group___seq_middle_1gab74005fe3b04460687f88ba79695d631>`( \
		ev, \
		ch, \
		val \
	)

	#define :ref:`snd_seq_ev_set_pitchbend<doxid-group___seq_middle_1ga8da40bfd56e00ebec775e5241d86a3e3>`( \
		ev, \
		ch, \
		val \
	)

	#define :ref:`snd_seq_ev_set_priority<doxid-group___seq_middle_1ga9b6fba99052fb11977559f15192581d4>`( \
		ev, \
		high_prior \
	)

	#define :ref:`snd_seq_ev_set_queue_continue<doxid-group___seq_middle_1ga32b0ff4c40ffde6e08a7df624193ae40>`( \
		ev, \
		q \
	)

	#define :ref:`snd_seq_ev_set_queue_control<doxid-group___seq_middle_1gacef573eba71eb2238758f1c178efd1d3>`( \
		ev, \
		typ, \
		q, \
		val \
	)

	#define :ref:`snd_seq_ev_set_queue_pos_real<doxid-group___seq_middle_1gae7cb527a1efa854ba487bb26cfa62c77>`( \
		ev, \
		q, \
		rtime \
	)

	#define :ref:`snd_seq_ev_set_queue_pos_tick<doxid-group___seq_middle_1ga8b6057651e037e0df565784f629b5fb8>`( \
		ev, \
		q, \
		ttime \
	)

	#define :ref:`snd_seq_ev_set_queue_start<doxid-group___seq_middle_1ga4fcbcb1f9e1967a1ec77b569be735d7a>`( \
		ev, \
		q \
	)

	#define :ref:`snd_seq_ev_set_queue_stop<doxid-group___seq_middle_1ga342554415f9536077408dc1c7331ab36>`( \
		ev, \
		q \
	)

	#define :ref:`snd_seq_ev_set_queue_tempo<doxid-group___seq_middle_1ga3d2a17d5034eb296af311b56374f2b19>`( \
		ev, \
		q, \
		val \
	)

	#define :ref:`snd_seq_ev_set_source<doxid-group___seq_middle_1ga457525dcca4a8a7e8cdb599a8ad6e8ff>`( \
		ev, \
		p \
	)

	#define :ref:`snd_seq_ev_set_subs<doxid-group___seq_middle_1ga1eb546b3a1a23044d0ba7818731ed6d7>`(ev)

	#define :ref:`snd_seq_ev_set_sysex<doxid-group___seq_middle_1ga104862c436dcc8f23892be44f50bc90f>`( \
		ev, \
		datalen, \
		dataptr \
	)

	#define :ref:`snd_seq_ev_set_tag<doxid-group___seq_middle_1ga2d78011c3d4618ff47f7f60e3553ea02>`( \
		ev, \
		t \
	)

	#define :ref:`snd_seq_ev_set_variable<doxid-group___seq_middle_1ga12ac15c961d96d3122f7c2f6a0849fb1>`( \
		ev, \
		datalen, \
		dataptr \
	)

	#define :ref:`snd_seq_ev_set_varusr<doxid-group___seq_middle_1ga993e1f46d8122a227fa0072a73af813e>`( \
		ev, \
		datalen, \
		dataptr \
	)

	#define :ref:`snd_seq_start_queue<doxid-group___seq_middle_1ga0c7a86bb19188a00c5a3b4907d558058>`( \
		seq, \
		q, \
		ev \
	)

	#define :ref:`snd_seq_stop_queue<doxid-group___seq_middle_1gab62a2e964135fdff96d21835d4cddad6>`( \
		seq, \
		q, \
		ev \
	)

.. _details-group___seq_middle:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Sequencer Middle Level Interface

Global Functions
----------------

.. index:: pair: function; snd_seq_control_queue
.. _doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_control_queue(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		int type,
		int value,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	)

queue controls - start/stop/continue

This function sets up general queue control event and sends it. To send at scheduled time, set the schedule in *ev*. If *ev* is NULL, the event is composed locally and sent immediately to the specified queue. In any cases, you need to call :ref:`snd_seq_drain_output() <doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>` appropriately to feed the event.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to control

	*
		- type

		- event type

	*
		- value

		- event value

	*
		- ev

		- event instance



.. rubric:: See also:

:ref:`snd_seq_alloc_queue() <doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`

.. index:: pair: function; snd_seq_create_simple_port
.. _doxid-group___seq_middle_1ga9368266bde7b5c0f8d5ddeaf64914719:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_create_simple_port(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name,
		unsigned int caps,
		unsigned int type
	)

create a port - simple version

Creates a port with the given capability and type bits.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- name

		- the name of the port

	*
		- caps

		- capability bits

	*
		- type

		- type bits



.. rubric:: Returns:

the created port number or negative error code



.. rubric:: See also:

:ref:`snd_seq_create_port() <doxid-group___seq_port_1gab40867ed02d9d6e40a75f929b5adf24d>`, :ref:`snd_seq_delete_simple_port() <doxid-group___seq_middle_1ga8ac4c3a85750550f2978ca720a6329ca>`

.. index:: pair: function; snd_seq_delete_simple_port
.. _doxid-group___seq_middle_1ga8ac4c3a85750550f2978ca720a6329ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_delete_simple_port(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int port
	)

delete the port



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- port

		- port id



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_delete_port() <doxid-group___seq_port_1gaa79a02d8fc3d6668b0a68d5d8b172603>`, :ref:`snd_seq_create_simple_port() <doxid-group___seq_middle_1ga9368266bde7b5c0f8d5ddeaf64914719>`

.. index:: pair: function; snd_seq_connect_from
.. _doxid-group___seq_middle_1ga1382029795fa101a3b8cc0af7b83b639:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_connect_from(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int src_client,
		int src_port
	)

simple subscription (w/o exclusive & time conversion)

Connect from the given sender client:port to the given destination port in the current client.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- myport

		- the port id as receiver

	*
		- src_client

		- sender client id

	*
		- src_port

		- sender port id



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_subscribe_port() <doxid-group___seq_subscribe_1ga2b216ec66cd724af31d376398e7b4863>`, :ref:`snd_seq_disconnect_from() <doxid-group___seq_middle_1ga931d199c780be30524aa24e58c59f6b9>`

.. index:: pair: function; snd_seq_connect_to
.. _doxid-group___seq_middle_1gab39e210c5d93e96c241644f334c6c9ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_connect_to(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int dest_client,
		int dest_port
	)

simple subscription (w/o exclusive & time conversion)

Connect from the given receiver port in the current client to the given destination client:port.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- myport

		- the port id as sender

	*
		- dest_client

		- destination client id

	*
		- dest_port

		- destination port id



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_subscribe_port() <doxid-group___seq_subscribe_1ga2b216ec66cd724af31d376398e7b4863>`, :ref:`snd_seq_disconnect_to() <doxid-group___seq_middle_1gafe5756afcd471b2d6bbd457c7abc5e89>`

.. index:: pair: function; snd_seq_disconnect_from
.. _doxid-group___seq_middle_1ga931d199c780be30524aa24e58c59f6b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_disconnect_from(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int src_client,
		int src_port
	)

simple disconnection

Remove connection from the given sender client:port to the given destination port in the current client.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- myport

		- the port id as receiver

	*
		- src_client

		- sender client id

	*
		- src_port

		- sender port id



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_unsubscribe_port() <doxid-group___seq_subscribe_1ga962385329f27f4024276756019e8a615>`, :ref:`snd_seq_connect_from() <doxid-group___seq_middle_1ga1382029795fa101a3b8cc0af7b83b639>`

.. index:: pair: function; snd_seq_disconnect_to
.. _doxid-group___seq_middle_1gafe5756afcd471b2d6bbd457c7abc5e89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_disconnect_to(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int my_port,
		int dest_client,
		int dest_port
	)

simple disconnection

Remove connection from the given sender client:port to the given destination port in the current client.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- myport

		- the port id as sender

	*
		- dest_client

		- destination client id

	*
		- dest_port

		- destination port id



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_unsubscribe_port() <doxid-group___seq_subscribe_1ga962385329f27f4024276756019e8a615>`, :ref:`snd_seq_connect_to() <doxid-group___seq_middle_1gab39e210c5d93e96c241644f334c6c9ca>`

.. index:: pair: function; snd_seq_set_client_name
.. _doxid-group___seq_middle_1gaec3acab3bfb3df3f0c9ccc4903570b9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_name(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	)

set client name



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- name

		- name string



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`

.. index:: pair: function; snd_seq_set_client_event_filter
.. _doxid-group___seq_middle_1ga888bf17bbc8141d1624f7bbef52dddce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_event_filter(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int event_type
	)

add client event filter



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- event_type

		- event type to be added



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`

.. index:: pair: function; snd_seq_set_client_pool_output
.. _doxid-group___seq_middle_1ga38e40d84154122798c9fad8e56c60a0f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_pool_output(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	)

change the output pool size of the given client



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- size

		- output pool size



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_set_client_pool() <doxid-group___seq_client_1ga076635492cecbf740302c97a4a84ea07>`

.. index:: pair: function; snd_seq_set_client_pool_output_room
.. _doxid-group___seq_middle_1ga597d2417e0fd512f56d31464cc2ea7d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_pool_output_room(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	)

change the output room size of the given client



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- size

		- output room size



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_set_client_pool() <doxid-group___seq_client_1ga076635492cecbf740302c97a4a84ea07>`

.. index:: pair: function; snd_seq_set_client_pool_input
.. _doxid-group___seq_middle_1ga1344c7aadb847bd409093c179557732d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_pool_input(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		size_t size
	)

change the input pool size of the given client



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- size

		- input pool size



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_set_client_pool() <doxid-group___seq_client_1ga076635492cecbf740302c97a4a84ea07>`

.. index:: pair: function; snd_seq_sync_output_queue
.. _doxid-group___seq_middle_1ga732ad887b457771b7db47908186e8cce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_sync_output_queue(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq)

wait until all events are processed

This function waits until all events of this client are processed.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

0 on success or negative error code



.. rubric:: See also:

:ref:`snd_seq_drain_output() <doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>`

.. index:: pair: function; snd_seq_parse_address
.. _doxid-group___seq_middle_1ga692043bd9cb709b15513b06cea5bf0e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_parse_address(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		:ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`* addr,
		const char* str
	)

parse the given string and get the sequencer address

This function parses the sequencer client and port numbers from the given string. The client and port tokens are separated by either colon or period, e.g. 128:1. When *seq* is not NULL, the function accepts also a client name not only digit numbers. Actually *arg* need to be only a prefix of the wanted client. That is, if a client named "Foobar XXL Master 2012" with number 128 is available, then parsing "Foobar" will return the address 128:0 if no other client is an exact match.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- addr

		- the address pointer to be returned

	*
		- arg

		- the string to be parsed



.. rubric:: Returns:

0 on success or negative error code

.. index:: pair: function; snd_seq_reset_pool_output
.. _doxid-group___seq_middle_1ga49d2acf57c4493a95eaaa19d8199f6f2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_reset_pool_output(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq)

reset client output pool

So far, this works identically like :ref:`snd_seq_drop_output() <doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

0 on success or negative error code

.. index:: pair: function; snd_seq_reset_pool_input
.. _doxid-group___seq_middle_1gae90243ea4d4e534bbca2b3965ff8efe9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_reset_pool_input(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq)

reset client input pool

So far, this works identically like :ref:`snd_seq_drop_input() <doxid-group___seq_event_1ga6f8a93aaa55cdbff67e264fd5357de0e>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

0 on success or negative error code

Macros
------

.. index:: pair: define; snd_seq_change_queue_tempo
.. _doxid-group___seq_middle_1gab77f13c0b39dec12ef983eb706925d00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_change_queue_tempo( \
		seq, \
		q, \
		tempo, \
		ev \
	)

change the tempo of the specified queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id

	*
		- tempo

		- the new tempo value

	*
		- ev

		- optional event record (see :ref:`snd_seq_control_queue <doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef>`)

.. index:: pair: define; snd_seq_continue_queue
.. _doxid-group___seq_middle_1gad6b0c90be37eeb583318c9077f095b86:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_continue_queue( \
		seq, \
		q, \
		ev \
	)

continue the specified queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to continue

	*
		- ev

		- optional event record (see :ref:`snd_seq_control_queue <doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef>`)

.. index:: pair: define; snd_seq_ev_clear
.. _doxid-group___seq_middle_1gafa496482a21b231621b385d1f1675b58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_clear(ev)

initialize event record

This macro clears the given event record pointer to the default status.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record pointer

.. index:: pair: define; snd_seq_ev_schedule_real
.. _doxid-group___seq_middle_1ga713370bf29736477532e791b4ad92530:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_schedule_real( \
		ev, \
		q, \
		relative, \
		rtime \
	)

set real-time-scheduling mode on queue

This macro sets the scheduling of the event in the realtime mode.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance

	*
		- q

		- queue id to schedule

	*
		- relative

		- relative time-stamp if non-zero

	*
		- rtime

		- time-stamp to be delivered



.. rubric:: See also:

:ref:`snd_seq_ev_schedule_tick() <doxid-group___seq_middle_1ga589469c27715bfae205ce26d5801d8b1>`, :ref:`snd_seq_ev_set_direct() <doxid-group___seq_middle_1gae2674210b5601e8aa3e787c1ddbdcb62>`

.. index:: pair: define; snd_seq_ev_schedule_tick
.. _doxid-group___seq_middle_1ga589469c27715bfae205ce26d5801d8b1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_schedule_tick( \
		ev, \
		q, \
		relative, \
		ttick \
	)

set tick-scheduling mode on queue

This macro sets the scheduling of the event in the MIDI tick mode.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance

	*
		- q

		- queue id to schedule

	*
		- relative

		- relative time-stamp if non-zero

	*
		- ttick

		- tick time-stamp to be delivered



.. rubric:: See also:

:ref:`snd_seq_ev_schedule_real() <doxid-group___seq_middle_1ga713370bf29736477532e791b4ad92530>`, :ref:`snd_seq_ev_set_direct() <doxid-group___seq_middle_1gae2674210b5601e8aa3e787c1ddbdcb62>`

.. index:: pair: define; snd_seq_ev_set_broadcast
.. _doxid-group___seq_middle_1gab06bf27dd5d0c94d78d935311fec1124:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_broadcast(ev)

set broadcasting to all clients/ports

This macro sets the destination as the broadcasting.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record



.. rubric:: See also:

:ref:`snd_seq_ev_set_dest() <doxid-group___seq_middle_1gaff2d03c7db0d6d5cfeec429d160d9459>`

.. index:: pair: define; snd_seq_ev_set_chanpress
.. _doxid-group___seq_middle_1gaa475a6778116256734e7da45f4eb7af8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_chanpress( \
		ev, \
		ch, \
		val \
	)

set channel pressure event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- val

		- channel pressure value

.. index:: pair: define; snd_seq_ev_set_controller
.. _doxid-group___seq_middle_1ga1658bb76bb89c8bac1e7b0140d72c23c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_controller( \
		ev, \
		ch, \
		cc, \
		val \
	)

set MIDI controller event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- cc

		- controller number

	*
		- val

		- control value

.. index:: pair: define; snd_seq_ev_set_dest
.. _doxid-group___seq_middle_1gaff2d03c7db0d6d5cfeec429d160d9459:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_dest( \
		ev, \
		c, \
		p \
	)

set the explicit destination

This macro sets the client and port id numbers to the given event record.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- c

		- destination client id

	*
		- p

		- destination port id



.. rubric:: See also:

:ref:`snd_seq_ev_set_subs() <doxid-group___seq_middle_1ga1eb546b3a1a23044d0ba7818731ed6d7>`

.. index:: pair: define; snd_seq_ev_set_direct
.. _doxid-group___seq_middle_1gae2674210b5601e8aa3e787c1ddbdcb62:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_direct(ev)

set direct passing mode (without queued)

This macro sets the event to the direct passing mode to be delivered immediately without queueing.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance



.. rubric:: See also:

:ref:`snd_seq_ev_schedule_tick() <doxid-group___seq_middle_1ga589469c27715bfae205ce26d5801d8b1>`, :ref:`snd_seq_ev_schedule_real() <doxid-group___seq_middle_1ga713370bf29736477532e791b4ad92530>`

.. index:: pair: define; snd_seq_ev_set_fixed
.. _doxid-group___seq_middle_1ga8c949038f36fd3e27de8b8e419978793:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_fixed(ev)

set fixed data

Sets the event length mode as fixed size.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance



.. rubric:: See also:

:ref:`snd_seq_ev_set_variable() <doxid-group___seq_middle_1ga12ac15c961d96d3122f7c2f6a0849fb1>`, :ref:`snd_seq_ev_set_varusr() <doxid-group___seq_middle_1ga993e1f46d8122a227fa0072a73af813e>`

.. index:: pair: define; snd_seq_ev_set_keypress
.. _doxid-group___seq_middle_1ga09c562a0d1745dc1a73e7347d51af913:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_keypress( \
		ev, \
		ch, \
		key, \
		vel \
	)

set key-pressure event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- key

		- note key

	*
		- vel

		- velocity

.. index:: pair: define; snd_seq_ev_set_note
.. _doxid-group___seq_middle_1ga544adc6b2a43edab107962754a772778:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_note( \
		ev, \
		ch, \
		key, \
		vel, \
		dur \
	)

set note event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- key

		- note key

	*
		- vel

		- velocity

	*
		- dur

		- duration (in tick or msec)

.. index:: pair: define; snd_seq_ev_set_noteoff
.. _doxid-group___seq_middle_1gab9b466031485504fd5b4300def95de7c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_noteoff( \
		ev, \
		ch, \
		key, \
		vel \
	)

set note-off event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- key

		- note key

	*
		- vel

		- velocity

.. index:: pair: define; snd_seq_ev_set_noteon
.. _doxid-group___seq_middle_1ga61fbd95aadd4a80f4ff8db5f8f28172f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_noteon( \
		ev, \
		ch, \
		key, \
		vel \
	)

set note-on event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- key

		- note key

	*
		- vel

		- velocity

.. index:: pair: define; snd_seq_ev_set_pgmchange
.. _doxid-group___seq_middle_1gab74005fe3b04460687f88ba79695d631:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_pgmchange( \
		ev, \
		ch, \
		val \
	)

set program change event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- val

		- program number

.. index:: pair: define; snd_seq_ev_set_pitchbend
.. _doxid-group___seq_middle_1ga8da40bfd56e00ebec775e5241d86a3e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_pitchbend( \
		ev, \
		ch, \
		val \
	)

set pitch-bend event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- ch

		- channel number

	*
		- val

		- pitch bend; zero centered from -8192 to 8191

.. index:: pair: define; snd_seq_ev_set_priority
.. _doxid-group___seq_middle_1ga9b6fba99052fb11977559f15192581d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_priority( \
		ev, \
		high_prior \
	)

set event priority



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance

	*
		- high_prior

		- 1 for high priority mode

.. index:: pair: define; snd_seq_ev_set_queue_continue
.. _doxid-group___seq_middle_1ga32b0ff4c40ffde6e08a7df624193ae40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_continue( \
		ev, \
		q \
	)

set the stop queue event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to continue



.. rubric:: See also:

:ref:`snd_seq_ev_set_queue_start() <doxid-group___seq_middle_1ga4fcbcb1f9e1967a1ec77b569be735d7a>`, :ref:`snd_seq_ev_set_queue_stop() <doxid-group___seq_middle_1ga342554415f9536077408dc1c7331ab36>`

.. index:: pair: define; snd_seq_ev_set_queue_control
.. _doxid-group___seq_middle_1gacef573eba71eb2238758f1c178efd1d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_control( \
		ev, \
		typ, \
		q, \
		val \
	)

set queue controls



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- typ

		- event type

	*
		- q

		- queue id

	*
		- val

		- control value

.. index:: pair: define; snd_seq_ev_set_queue_pos_real
.. _doxid-group___seq_middle_1gae7cb527a1efa854ba487bb26cfa62c77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_pos_real( \
		ev, \
		q, \
		rtime \
	)

set the real-time position of a queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to change tempo

	*
		- rtime

		- the new real-time pointer

.. index:: pair: define; snd_seq_ev_set_queue_pos_tick
.. _doxid-group___seq_middle_1ga8b6057651e037e0df565784f629b5fb8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_pos_tick( \
		ev, \
		q, \
		ttime \
	)

set the tick-time position of a queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to change tempo

	*
		- ttime

		- the new tick-time

.. index:: pair: define; snd_seq_ev_set_queue_start
.. _doxid-group___seq_middle_1ga4fcbcb1f9e1967a1ec77b569be735d7a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_start( \
		ev, \
		q \
	)

set the start queue event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to start



.. rubric:: See also:

:ref:`snd_seq_ev_set_queue_stop() <doxid-group___seq_middle_1ga342554415f9536077408dc1c7331ab36>`, :ref:`snd_seq_ev_set_queue_continue() <doxid-group___seq_middle_1ga32b0ff4c40ffde6e08a7df624193ae40>`

.. index:: pair: define; snd_seq_ev_set_queue_stop
.. _doxid-group___seq_middle_1ga342554415f9536077408dc1c7331ab36:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_stop( \
		ev, \
		q \
	)

set the stop queue event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to stop



.. rubric:: See also:

:ref:`snd_seq_ev_set_queue_start() <doxid-group___seq_middle_1ga4fcbcb1f9e1967a1ec77b569be735d7a>`, :ref:`snd_seq_ev_set_queue_continue() <doxid-group___seq_middle_1ga32b0ff4c40ffde6e08a7df624193ae40>`

.. index:: pair: define; snd_seq_ev_set_queue_tempo
.. _doxid-group___seq_middle_1ga3d2a17d5034eb296af311b56374f2b19:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_queue_tempo( \
		ev, \
		q, \
		val \
	)

set the stop queue event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- q

		- queue id to change tempo

	*
		- val

		- the new tempo value

.. index:: pair: define; snd_seq_ev_set_source
.. _doxid-group___seq_middle_1ga457525dcca4a8a7e8cdb599a8ad6e8ff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_source( \
		ev, \
		p \
	)

set the source port

This macro sets the source port id number.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- p

		- source port id

.. index:: pair: define; snd_seq_ev_set_subs
.. _doxid-group___seq_middle_1ga1eb546b3a1a23044d0ba7818731ed6d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_subs(ev)

set broadcasting to subscribers

This macro sets the destination as the subscribers.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record



.. rubric:: See also:

:ref:`snd_seq_ev_set_dest() <doxid-group___seq_middle_1gaff2d03c7db0d6d5cfeec429d160d9459>`

.. index:: pair: define; snd_seq_ev_set_sysex
.. _doxid-group___seq_middle_1ga104862c436dcc8f23892be44f50bc90f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_sysex( \
		ev, \
		datalen, \
		dataptr \
	)

set sysex event

the sysex data must contain the start byte 0xf0 and the end byte 0xf7.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- datalen

		- length of sysex data

	*
		- dataptr

		- sysex data pointer

.. index:: pair: define; snd_seq_ev_set_tag
.. _doxid-group___seq_middle_1ga2d78011c3d4618ff47f7f60e3553ea02:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_tag( \
		ev, \
		t \
	)

set the tag for given event

This macro sets the tag to the given event record.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event record

	*
		- t

		- event tag

.. index:: pair: define; snd_seq_ev_set_variable
.. _doxid-group___seq_middle_1ga12ac15c961d96d3122f7c2f6a0849fb1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_variable( \
		ev, \
		datalen, \
		dataptr \
	)

set variable data

Sets the event length mode as variable length and stores the data.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance

	*
		- datalen

		- length of the external data

	*
		- dataptr

		- pointer of the external data



.. rubric:: See also:

:ref:`snd_seq_ev_set_fixed() <doxid-group___seq_middle_1ga8c949038f36fd3e27de8b8e419978793>`, :ref:`snd_seq_ev_set_varusr() <doxid-group___seq_middle_1ga993e1f46d8122a227fa0072a73af813e>`

.. index:: pair: define; snd_seq_ev_set_varusr
.. _doxid-group___seq_middle_1ga993e1f46d8122a227fa0072a73af813e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_ev_set_varusr( \
		ev, \
		datalen, \
		dataptr \
	)

set varusr data

Sets the event length mode as variable user-space data and stores the data.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- event instance

	*
		- datalen

		- length of the external data

	*
		- dataptr

		- pointer of the external data



.. rubric:: See also:

:ref:`snd_seq_ev_set_fixed() <doxid-group___seq_middle_1ga8c949038f36fd3e27de8b8e419978793>`, :ref:`snd_seq_ev_set_variable() <doxid-group___seq_middle_1ga12ac15c961d96d3122f7c2f6a0849fb1>`

.. index:: pair: define; snd_seq_start_queue
.. _doxid-group___seq_middle_1ga0c7a86bb19188a00c5a3b4907d558058:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_start_queue( \
		seq, \
		q, \
		ev \
	)

start the specified queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to start

	*
		- ev

		- optional event record (see :ref:`snd_seq_control_queue <doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef>`)

.. index:: pair: define; snd_seq_stop_queue
.. _doxid-group___seq_middle_1gab62a2e964135fdff96d21835d4cddad6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_stop_queue( \
		seq, \
		q, \
		ev \
	)

stop the specified queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to stop

	*
		- ev

		- optional event record (see :ref:`snd_seq_control_queue <doxid-group___seq_middle_1ga36dee7982baa47ad22ab8437541ea5ef>`)

