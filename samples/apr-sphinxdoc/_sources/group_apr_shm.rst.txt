.. index:: pair: group; Shared Memory Routines
.. _doxid-group__apr__shm:

Shared Memory Routines
======================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>` :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`;

	// global functions

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_create<doxid-group__apr__shm_1gac370c4943c22505ce2b0d57c51805480>`(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		apr_size_t reqsize,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_create_ex<doxid-group__apr__shm_1ga21baaa66956641e06e072501f61882e7>`(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		apr_size_t reqsize,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool,
		apr_int32_t flags
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_remove<doxid-group__apr__shm_1gaee8b7d9b952ff6157ddbb00fabb477e0>`(
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_destroy<doxid-group__apr__shm_1ga7de5b65a9c7d9840bfa289854f8d59d4>`(:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_attach<doxid-group__apr__shm_1ga0e542941c280cb72b78e30d452464759>`(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_attach_ex<doxid-group__apr__shm_1ga088260723c96815610ff628f358d3630>`(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool,
		apr_int32_t flags
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_shm_detach<doxid-group__apr__shm_1ga900095a06d3fdb4cdd04ca4449a9d42a>`(:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m);

	void*
	:ref:`apr_shm_baseaddr_get<doxid-group__apr__shm_1gade739e1f5f4e88c93256a63ebfd47d4d>`(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m);

	apr_size_t
	:ref:`apr_shm_size_get<doxid-group__apr__shm_1ga557ae85d3f225620a77ad80caeaacac7>`(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m);

	:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`*
	:ref:`apr_shm_pool_get<doxid-group__apr__shm_1ga072c40df7643e697885935ae65545098>`(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* theshm);

	// macros

	#define :target:`APR_SHM_NS_GLOBAL<doxid-group__apr__shm_1ga0de8e4acab42e7ff8e35e5ac9620f667>`
	#define :ref:`APR_SHM_NS_LOCAL<doxid-group__apr__shm_1ga47cc28ddc5f32cf904383b9e4f82825b>`

.. _details-group__apr__shm:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. index:: pair: typedef; apr_shm_t
.. _doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>` apr_shm_t

Private, platform-specific data struture representing a shared memory segment.

Global Functions
----------------

.. index:: pair: function; apr_shm_create
.. _doxid-group__apr__shm_1gac370c4943c22505ce2b0d57c51805480:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_create(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		apr_size_t reqsize,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	)

Create and make accessible a shared memory segment with default properties. A note about Anonymous vs. Named shared memory segments: Not all plaforms support anonymous shared memory segments, but in some cases it is prefered over other types of shared memory implementations. Passing a NULL 'file' parameter to this function will cause the subsystem to use anonymous shared memory segments. If such a system is not available, APR_ENOTIMPL is returned.

A note about allocation sizes: On some platforms it is necessary to store some metainformation about the segment within the actual segment. In order to supply the caller with the requested size it may be necessary for the implementation to request a slightly greater segment length from the subsystem. In all cases, the :ref:`apr_shm_baseaddr_get() <doxid-group__apr__shm_1gade739e1f5f4e88c93256a63ebfd47d4d>` function will return the first usable byte of memory.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory structure to create.

	*
		- reqsize

		- The desired size of the segment.

	*
		- filename

		- The file to use for shared memory on platforms that require it.

	*
		- pool

		- the pool from which to allocate the shared memory structure.

.. index:: pair: function; apr_shm_create_ex
.. _doxid-group__apr__shm_1ga21baaa66956641e06e072501f61882e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_create_ex(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		apr_size_t reqsize,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool,
		apr_int32_t flags
	)

Create and make accessible a shared memory segment with platform- specific processing. A note about Anonymous vs. Named shared memory segments: Not all plaforms support anonymous shared memory segments, but in some cases it is prefered over other types of shared memory implementations. Passing a NULL 'file' parameter to this function will cause the subsystem to use anonymous shared memory segments. If such a system is not available, APR_ENOTIMPL is returned.

A note about allocation sizes: On some platforms it is necessary to store some metainformation about the segment within the actual segment. In order to supply the caller with the requested size it may be necessary for the implementation to request a slightly greater segment length from the subsystem. In all cases, the :ref:`apr_shm_baseaddr_get() <doxid-group__apr__shm_1gade739e1f5f4e88c93256a63ebfd47d4d>` function will return the first usable byte of memory.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory structure to create.

	*
		- reqsize

		- The desired size of the segment.

	*
		- filename

		- The file to use for shared memory on platforms that require it.

	*
		- pool

		- the pool from which to allocate the shared memory structure.

	*
		- flags

		- mask of APR_SHM\_\* (defined above)

.. index:: pair: function; apr_shm_remove
.. _doxid-group__apr__shm_1gaee8b7d9b952ff6157ddbb00fabb477e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_remove(
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	)

Remove named resource associated with a shared memory segment, preventing attachments to the resource, but not destroying it. This function is only supported on platforms which support name-based shared memory segments, and will return APR_ENOTIMPL on platforms without such support. Removing the file while the shm is in use is not entirely portable, caller may use this to enhance obscurity of the resource, but be prepared for the call to fail, and for concurrent attempts to create a resource of the same name to also fail. The pool cleanup of apr_shm_create (apr_shm_destroy) also removes the named resource.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- The filename associated with shared-memory segment which needs to be removed

	*
		- pool

		- The pool used for file operations

.. index:: pair: function; apr_shm_destroy
.. _doxid-group__apr__shm_1ga7de5b65a9c7d9840bfa289854f8d59d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_destroy(:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m)

Destroy a shared memory segment and associated memory.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory segment structure to destroy.

.. index:: pair: function; apr_shm_attach
.. _doxid-group__apr__shm_1ga0e542941c280cb72b78e30d452464759:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_attach(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool
	)

Attach to a shared memory segment that was created by another process.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory structure to create.

	*
		- filename

		- The file used to create the original segment. (This MUST match the original filename.)

	*
		- pool

		- the pool from which to allocate the shared memory structure for this process.

.. index:: pair: function; apr_shm_attach_ex
.. _doxid-group__apr__shm_1ga088260723c96815610ff628f358d3630:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_attach_ex(
		:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`** m,
		const char* filename,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* pool,
		apr_int32_t flags
	)

Attach to a shared memory segment that was created by another process, with platform-specific processing.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory structure to create.

	*
		- filename

		- The file used to create the original segment. (This MUST match the original filename.)

	*
		- pool

		- the pool from which to allocate the shared memory structure for this process.

	*
		- flags

		- mask of APR_SHM\_\* (defined above)

.. index:: pair: function; apr_shm_detach
.. _doxid-group__apr__shm_1ga900095a06d3fdb4cdd04ca4449a9d42a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_shm_detach(:ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m)

Detach from a shared memory segment without destroying it.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory structure representing the segment to detach from.

.. index:: pair: function; apr_shm_baseaddr_get
.. _doxid-group__apr__shm_1gade739e1f5f4e88c93256a63ebfd47d4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void*
	apr_shm_baseaddr_get(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m)

Retrieve the base address of the shared memory segment. NOTE: This address is only usable within the callers address space, since this API does not guarantee that other attaching processes will maintain the same address mapping.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory segment from which to retrieve the base address.



.. rubric:: Returns:

address, aligned by APR_ALIGN_DEFAULT.

.. index:: pair: function; apr_shm_size_get
.. _doxid-group__apr__shm_1ga557ae85d3f225620a77ad80caeaacac7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	apr_size_t
	apr_shm_size_get(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* m)

Retrieve the length of a shared memory segment in bytes.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- m

		- The shared memory segment from which to retrieve the segment length.

.. index:: pair: function; apr_shm_pool_get
.. _doxid-group__apr__shm_1ga072c40df7643e697885935ae65545098:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`*
	apr_shm_pool_get(const :ref:`apr_shm_t<doxid-group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f>`* theshm)

Get the pool used by this shared memory segment.

Macros
------

.. index:: pair: define; APR_SHM_NS_LOCAL
.. _doxid-group__apr__shm_1ga47cc28ddc5f32cf904383b9e4f82825b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define APR_SHM_NS_LOCAL

Special processing flags for :ref:`apr_shm_create_ex() <doxid-group__apr__shm_1ga21baaa66956641e06e072501f61882e7>` and :ref:`apr_shm_attach_ex() <doxid-group__apr__shm_1ga088260723c96815610ff628f358d3630>`.

