.. index:: pair: group; User and Group ID Services
.. _doxid-group__apr__user:

User and Group ID Services
==========================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef uid_t :ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>`;
	typedef gid_t :ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`;

	// global functions

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_uid_current<doxid-group__apr__user_1ga6583c5814fcf3924a2e391dac126f8a9>`(
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>`* userid,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_uid_name_get<doxid-group__apr__user_1gad56be7519e060a3c6698657f51ab6bc8>`(
		char** username,
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>` userid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_uid_get<doxid-group__apr__user_1ga4b82187f32db9350f2e02165bbce965b>`(
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>`* userid,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		const char* username,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_uid_homepath_get<doxid-group__apr__user_1ga0ad8087cf1c6257a286cf5215da8107e>`(
		char** dirname,
		const char* username,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_gid_name_get<doxid-group__apr__user_1gadda2c777f2e8d61c02be34305720e316>`(
		char** groupname,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>` groupid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	:ref:`apr_gid_get<doxid-group__apr__user_1gac65178a647d34387781dc8d7ade3cefc>`(
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		const char* groupname,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	);

	// macros

	#define :ref:`apr_gid_compare<doxid-group__apr__user_1gaa87aee2f533bed9dac33613fcf398713>`( \
		left, \
		right \
	)

	#define :ref:`apr_uid_compare<doxid-group__apr__user_1gafc0e18b67f8e3471848893cc4a052809>`( \
		left, \
		right \
	)

.. _details-group__apr__user:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. index:: pair: typedef; apr_uid_t
.. _doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef uid_t apr_uid_t

Structure for determining user ownership.

.. index:: pair: typedef; apr_gid_t
.. _doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef gid_t apr_gid_t

Structure for determining group ownership.

Global Functions
----------------

.. index:: pair: function; apr_uid_current
.. _doxid-group__apr__user_1ga6583c5814fcf3924a2e391dac126f8a9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_uid_current(
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>`* userid,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the userid (and groupid) of the calling process This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- userid

		- Returns the user id

	*
		- groupid

		- Returns the user's group id

	*
		- p

		- The pool from which to allocate working space

.. index:: pair: function; apr_uid_name_get
.. _doxid-group__apr__user_1gad56be7519e060a3c6698657f51ab6bc8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_uid_name_get(
		char** username,
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>` userid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the user name for a specified userid This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- username

		- Pointer to new string containing user name (on output)

	*
		- userid

		- The userid

	*
		- p

		- The pool from which to allocate the string

.. index:: pair: function; apr_uid_get
.. _doxid-group__apr__user_1ga4b82187f32db9350f2e02165bbce965b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_uid_get(
		:ref:`apr_uid_t<doxid-group__apr__user_1gad1aa508f584bc230acf4f68ba4fc4de7>`* userid,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		const char* username,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the userid (and groupid) for the specified username This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- userid

		- Returns the user id

	*
		- groupid

		- Returns the user's group id

	*
		- username

		- The username to look up

	*
		- p

		- The pool from which to allocate working space

.. index:: pair: function; apr_uid_homepath_get
.. _doxid-group__apr__user_1ga0ad8087cf1c6257a286cf5215da8107e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_uid_homepath_get(
		char** dirname,
		const char* username,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the home directory for the named user This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dirname

		- Pointer to new string containing directory name (on output)

	*
		- username

		- The named user

	*
		- p

		- The pool from which to allocate the string

.. index:: pair: function; apr_gid_name_get
.. _doxid-group__apr__user_1gadda2c777f2e8d61c02be34305720e316:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_gid_name_get(
		char** groupname,
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>` groupid,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the group name for a specified groupid This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- groupname

		- Pointer to new string containing group name (on output)

	*
		- groupid

		- The groupid

	*
		- p

		- The pool from which to allocate the string

.. index:: pair: function; apr_gid_get
.. _doxid-group__apr__user_1gac65178a647d34387781dc8d7ade3cefc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`apr_status_t<doxid-group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c>`
	apr_gid_get(
		:ref:`apr_gid_t<doxid-group__apr__user_1ga22e9e224e984f837f3e276833e2f3a55>`* groupid,
		const char* groupname,
		:ref:`apr_pool_t<doxid-group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb>`* p
	)

Get the groupid for a specified group name This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- groupid

		- Pointer to the group id (on output)

	*
		- groupname

		- The group name to look up

	*
		- p

		- The pool from which to allocate the string

Macros
------

.. index:: pair: define; apr_gid_compare
.. _doxid-group__apr__user_1gaa87aee2f533bed9dac33613fcf398713:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define apr_gid_compare( \
		left, \
		right \
	)

Compare two group identifiers for equality. This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- left

		- One gid to test

	*
		- right

		- Another gid to test



.. rubric:: Returns:

APR_SUCCESS if the apr_gid_t structures identify the same group, APR_EMISMATCH if not, APR_BADARG if an apr_gid_t is invalid.

.. index:: pair: define; apr_uid_compare
.. _doxid-group__apr__user_1gafc0e18b67f8e3471848893cc4a052809:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define apr_uid_compare( \
		left, \
		right \
	)

Compare two user identifiers for equality. This function is available only if APR_HAS_USER is defined.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- left

		- One uid to test

	*
		- right

		- Another uid to test



.. rubric:: Returns:

APR_SUCCESS if the apr_uid_t structures identify the same user, APR_EMISMATCH if not, APR_BADARG if an apr_uid_t is invalid.

