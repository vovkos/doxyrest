.. index:: pair: group; Sequencer Event API
.. _doxid-group___seq_event:

Sequencer Event API
===================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Sequencer Event API :ref:`More...<details-group___seq_event>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct _snd_seq_remove_events :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`;

	// global functions

	int
	:ref:`snd_seq_free_event<doxid-group___seq_event_1ga6a4edcdaec5d55e61c8db1a0fbb2daa9>`(:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev);

	ssize_t
	:ref:`snd_seq_event_length<doxid-group___seq_event_1gae807a81acfbb8e7147a186a02274b34b>`(:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev);

	int
	:ref:`snd_seq_event_output<doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	);

	int
	:ref:`snd_seq_event_output_buffer<doxid-group___seq_event_1ga41be1e09173957944352c50067a686ea>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	);

	int
	:ref:`snd_seq_event_output_direct<doxid-group___seq_event_1ga63986686b918abeff9902108638c5b2f>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	);

	int
	:ref:`snd_seq_event_input<doxid-group___seq_event_1ga6421feafcd6f116d34531d6b54177c17>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`** ev
	);

	int
	:ref:`snd_seq_event_input_pending<doxid-group___seq_event_1ga08d1c09716d6c04f8164539429a8659c>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int fetch_sequencer
	);

	int
	:ref:`snd_seq_drain_output<doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	int
	:ref:`snd_seq_event_output_pending<doxid-group___seq_event_1ga9ac143d4f0f826c9715424a8ec47339a>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq);

	int
	:ref:`snd_seq_extract_output<doxid-group___seq_event_1ga8a75dbcc2b51d0ea81d2538c0ae131f0>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`** ev
	);

	int
	:ref:`snd_seq_drop_output<doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	int
	:ref:`snd_seq_drop_output_buffer<doxid-group___seq_event_1ga12bcd6b29f0d5f13b00f2c55a2ca4556>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	int
	:ref:`snd_seq_drop_input<doxid-group___seq_event_1ga6f8a93aaa55cdbff67e264fd5357de0e>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	int
	:ref:`snd_seq_drop_input_buffer<doxid-group___seq_event_1ga7b1182e2df033f7813a28bded948cd5e>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	size_t
	:ref:`snd_seq_remove_events_sizeof<doxid-group___seq_event_1gaa5a0541a3f5e9b0536c8bc022c64dc04>`(void);

	int
	:ref:`snd_seq_remove_events_malloc<doxid-group___seq_event_1ga280e1b40b1cb608176d9f561038afb74>`(:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`** ptr);

	void
	:ref:`snd_seq_remove_events_free<doxid-group___seq_event_1ga14849dfc4b6f46c58aa8567a7ee5860e>`(:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* ptr);

	void
	:ref:`snd_seq_remove_events_copy<doxid-group___seq_event_1ga03bce50b05a4a7ae7236875a3e9d2949>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* dst,
		const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* src
	);

	unsigned int
	:ref:`snd_seq_remove_events_get_condition<doxid-group___seq_event_1ga448bdde3612be594f3651d591678770e>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	int
	:ref:`snd_seq_remove_events_get_queue<doxid-group___seq_event_1gaf1c86405bfc4ad14bfa7d6234545e4ae>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	const :ref:`snd_seq_timestamp_t<doxid-unionsnd__seq__timestamp__t>`*
	:ref:`snd_seq_remove_events_get_time<doxid-group___seq_event_1ga781d9bfba05346779a4d89b8720111f5>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	const :ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`*
	:ref:`snd_seq_remove_events_get_dest<doxid-group___seq_event_1ga2b26aa9977be1f96e42cc71a9075909a>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	int
	:ref:`snd_seq_remove_events_get_channel<doxid-group___seq_event_1ga474f7d65b54164c7b4066b2341680b69>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	int
	:ref:`snd_seq_remove_events_get_event_type<doxid-group___seq_event_1ga2bac6d50ae68c432441b6f86f8e51ec5>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	int
	:ref:`snd_seq_remove_events_get_tag<doxid-group___seq_event_1gaefe8772759971b008123512b5294fecb>`(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info);

	void
	:ref:`snd_seq_remove_events_set_condition<doxid-group___seq_event_1ga4efc426e73bd8ed2398ee8911c1a1fea>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		unsigned int flags
	);

	void
	:ref:`snd_seq_remove_events_set_queue<doxid-group___seq_event_1ga79e4eea77bf7639b314d0c6a2b858897>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int queue
	);

	void
	:ref:`snd_seq_remove_events_set_time<doxid-group___seq_event_1ga34502d7f197063e7e404039c06cd49f6>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		const :ref:`snd_seq_timestamp_t<doxid-unionsnd__seq__timestamp__t>`* time
	);

	void
	:ref:`snd_seq_remove_events_set_dest<doxid-group___seq_event_1gaaae3ddaad59def2395a9c3391ad3ea3c>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		const :ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`* addr
	);

	void
	:ref:`snd_seq_remove_events_set_channel<doxid-group___seq_event_1ga0611da2732cef4d8943489736e838cb5>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int channel
	);

	void
	:ref:`snd_seq_remove_events_set_event_type<doxid-group___seq_event_1ga4b3ac3780f5368118422b08a08ed8d43>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int type
	);

	void
	:ref:`snd_seq_remove_events_set_tag<doxid-group___seq_event_1ga4847f69287addc86dddf61a2ffca5089>`(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int tag
	);

	int
	:ref:`snd_seq_remove_events<doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info
	);

	// macros

	#define :ref:`SND_SEQ_REMOVE_DEST<doxid-group___seq_event_1ga2662f8f42259f5d61be4bfb66fc6f248>`
	#define :ref:`SND_SEQ_REMOVE_DEST_CHANNEL<doxid-group___seq_event_1ga639b7c33bf27b65ca14857bf5f1cee4a>`
	#define :ref:`SND_SEQ_REMOVE_EVENT_TYPE<doxid-group___seq_event_1gada13f98960143c3d24e6965c954d0fc4>`
	#define :ref:`SND_SEQ_REMOVE_IGNORE_OFF<doxid-group___seq_event_1ga43008e518e356084dbcea01b3e7d1909>`
	#define :ref:`SND_SEQ_REMOVE_INPUT<doxid-group___seq_event_1gac6a1b26c4551664f1647bc71001b5f88>`
	#define :ref:`SND_SEQ_REMOVE_OUTPUT<doxid-group___seq_event_1ga21236ad0af7c1f3d549c1b3e008b0c73>`
	#define :ref:`SND_SEQ_REMOVE_TAG_MATCH<doxid-group___seq_event_1ga19bc5ec1e09ad34af5cf5ae3b28ee434>`
	#define :ref:`SND_SEQ_REMOVE_TIME_AFTER<doxid-group___seq_event_1ga8213dbaeb33df14ec7a1e7fd501f8c5e>`
	#define :ref:`SND_SEQ_REMOVE_TIME_BEFORE<doxid-group___seq_event_1ga69279405cabd0127222b936dd6e45e49>`
	#define :ref:`SND_SEQ_REMOVE_TIME_TICK<doxid-group___seq_event_1gac4169f30c9c8c5dc462245f3a2dc5d76>`
	#define :ref:`snd_seq_remove_events_alloca<doxid-group___seq_event_1gaa961c5d6e931bb50c75d828c8470ab02>`(ptr)

.. _details-group___seq_event:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Sequencer Event API

Typedefs
--------

.. index:: pair: typedef; snd_seq_remove_events_t
.. _doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_remove_events snd_seq_remove_events_t

event removal conditionals

Global Functions
----------------

.. index:: pair: function; snd_seq_free_event
.. _doxid-group___seq_event_1ga6a4edcdaec5d55e61c8db1a0fbb2daa9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_free_event(:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev)

(DEPRECATED) free an event

In the former version, this function was used to release the event pointer which was allocated by :ref:`snd_seq_event_input() <doxid-group___seq_event_1ga6421feafcd6f116d34531d6b54177c17>`. In the current version, the event record is not allocated, so you don't have to call this function any more.

.. index:: pair: function; snd_seq_event_length
.. _doxid-group___seq_event_1gae807a81acfbb8e7147a186a02274b34b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ssize_t
	snd_seq_event_length(:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev)

calculates the (encoded) byte-stream size of the event



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ev

		- the event



.. rubric:: Returns:

the size of decoded bytes

.. index:: pair: function; snd_seq_event_output
.. _doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_output(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	)

output an event

An event is once expanded on the output buffer. The output buffer will be drained automatically if it becomes full.

If events remain unprocessed on output buffer before drained, the size of total byte data on output buffer is returned. If the output buffer is empty, this returns zero.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- ev

		- event to be output



.. rubric:: Returns:

the number of remaining events or a negative error code



.. rubric:: See also:

:ref:`snd_seq_event_output_direct() <doxid-group___seq_event_1ga63986686b918abeff9902108638c5b2f>`, :ref:`snd_seq_event_output_buffer() <doxid-group___seq_event_1ga41be1e09173957944352c50067a686ea>`, :ref:`snd_seq_event_output_pending() <doxid-group___seq_event_1ga9ac143d4f0f826c9715424a8ec47339a>`, :ref:`snd_seq_drain_output() <doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>`, :ref:`snd_seq_drop_output() <doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef>`, :ref:`snd_seq_extract_output() <doxid-group___seq_event_1ga8a75dbcc2b51d0ea81d2538c0ae131f0>`, :ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_event_output_buffer
.. _doxid-group___seq_event_1ga41be1e09173957944352c50067a686ea:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_output_buffer(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	)

output an event onto the lib buffer without draining buffer

This function doesn't drain buffer unlike :ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- ev

		- event to be output



.. rubric:: Returns:

the byte size of remaining events. ``-EAGAIN`` if the buffer becomes full.



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`

.. index:: pair: function; snd_seq_event_output_direct
.. _doxid-group___seq_event_1ga63986686b918abeff9902108638c5b2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_output_direct(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`* ev
	)

output an event directly to the sequencer NOT through output buffer

This function sends an event to the sequencer directly not through the output buffer. When the event is a variable length event, a temporary buffer is allocated inside alsa-lib and the data is copied there before actually sent.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- ev

		- event to be output



.. rubric:: Returns:

the byte size sent to sequencer or a negative error code



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`

.. index:: pair: function; snd_seq_event_input
.. _doxid-group___seq_event_1ga6421feafcd6f116d34531d6b54177c17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_input(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`** ev
	)

retrieve an event from sequencer

Obtains an input event from sequencer. The event is created via snd_seq_create_event(), and its pointer is stored on ev argument.

This function firstly receives the event byte-stream data from sequencer as much as possible at once. Then it retrieves the first event record and store the pointer on ev. By calling this function sequentially, events are extracted from the input buffer.

If there is no input from sequencer, function falls into sleep in blocking mode until an event is received, or returns ``-EAGAIN`` error in non-blocking mode. Occasionally, this function may return ``-ENOSPC`` error. This means that the input FIFO of sequencer overran, and some events are lost. Once this error is returned, the input FIFO is cleared automatically.

Function returns the byte size of remaining events on the input buffer if an event is successfully received. Application can determine from the returned value whether to call input once more or not.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- ev

		- event pointer to be stored



.. rubric:: Returns:



.. rubric:: See also:

:ref:`snd_seq_event_input_pending() <doxid-group___seq_event_1ga08d1c09716d6c04f8164539429a8659c>`, :ref:`snd_seq_drop_input() <doxid-group___seq_event_1ga6f8a93aaa55cdbff67e264fd5357de0e>`

.. index:: pair: function; snd_seq_event_input_pending
.. _doxid-group___seq_event_1ga08d1c09716d6c04f8164539429a8659c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_input_pending(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int fetch_sequencer
	)

check events in input buffer

If events remain on the input buffer of user-space, function returns the total byte size of events on it. If fetch_sequencer argument is non-zero, this function checks the presence of events on sequencer FIFO When events exist, they are transferred to the input buffer, and the number of received events are returned. If fetch_sequencer argument is zero and no events remain on the input buffer, function simply returns zero.



.. rubric:: Returns:

the byte size of remaining input events on input buffer.



.. rubric:: See also:

:ref:`snd_seq_event_input() <doxid-group___seq_event_1ga6421feafcd6f116d34531d6b54177c17>`

.. index:: pair: function; snd_seq_drain_output
.. _doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_drain_output(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

drain output buffer to sequencer

This function drains all pending events on the output buffer. The function returns immediately after the events are sent to the queues regardless whether the events are processed or not. To get synchronization with the all event processes, use :ref:`snd_seq_sync_output_queue() <doxid-group___seq_middle_1ga732ad887b457771b7db47908186e8cce>` after calling this function.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

0 when all events are drained and sent to sequencer. When events still remain on the buffer, the byte size of remaining events are returned. On error a negative error code is returned.



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`, :ref:`snd_seq_sync_output_queue() <doxid-group___seq_middle_1ga732ad887b457771b7db47908186e8cce>`

.. index:: pair: function; snd_seq_event_output_pending
.. _doxid-group___seq_event_1ga9ac143d4f0f826c9715424a8ec47339a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_event_output_pending(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq)

return the size of pending events on output buffer



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

the byte size of total of pending events



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`

.. index:: pair: function; snd_seq_extract_output
.. _doxid-group___seq_event_1ga8a75dbcc2b51d0ea81d2538c0ae131f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_extract_output(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_event_t<doxid-structsnd__seq__event__t>`** ev
	)

extract the first event in output buffer

Extracts the first event in output buffer. If ev_res is NULL, just remove the event.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- ev_res

		- event pointer to be extracted



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`

.. index:: pair: function; snd_seq_drop_output
.. _doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_drop_output(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

remove all events on output buffer

Removes all events on both user-space output buffer and output memory pool on kernel.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: See also:

:ref:`snd_seq_drain_output() <doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>`, :ref:`snd_seq_drop_output_buffer() <doxid-group___seq_event_1ga12bcd6b29f0d5f13b00f2c55a2ca4556>`, :ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_drop_output_buffer
.. _doxid-group___seq_event_1ga12bcd6b29f0d5f13b00f2c55a2ca4556:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_drop_output_buffer(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

remove all events on user-space output buffer

Removes all events on user-space output buffer. Unlike :ref:`snd_seq_drain_output() <doxid-group___seq_event_1ga64a0ed5488504ef91b5b6b92172bc0aa>`, this function doesn't remove events on output memory pool of sequencer.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: See also:

:ref:`snd_seq_drop_output() <doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef>`

.. index:: pair: function; snd_seq_drop_input
.. _doxid-group___seq_event_1ga6f8a93aaa55cdbff67e264fd5357de0e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_drop_input(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

clear input buffer and and remove events in sequencer queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: See also:

:ref:`snd_seq_drop_input_buffer() <doxid-group___seq_event_1ga7b1182e2df033f7813a28bded948cd5e>`, :ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_drop_input_buffer
.. _doxid-group___seq_event_1ga7b1182e2df033f7813a28bded948cd5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_drop_input_buffer(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

remove all events on user-space input FIFO



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: See also:

:ref:`snd_seq_drop_input() <doxid-group___seq_event_1ga6f8a93aaa55cdbff67e264fd5357de0e>`

.. index:: pair: function; snd_seq_remove_events_sizeof
.. _doxid-group___seq_event_1gaa5a0541a3f5e9b0536c8bc022c64dc04:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_remove_events_sizeof(void)

get size of :ref:`snd_seq_remove_events_t <doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_remove_events_malloc
.. _doxid-group___seq_event_1ga280e1b40b1cb608176d9f561038afb74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events_malloc(:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`** ptr)

allocate an empty :ref:`snd_seq_remove_events_t <doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_remove_events_free
.. _doxid-group___seq_event_1ga14849dfc4b6f46c58aa8567a7ee5860e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_free(:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* ptr)

frees a previously allocated :ref:`snd_seq_remove_events_t <doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_remove_events_copy
.. _doxid-group___seq_event_1ga03bce50b05a4a7ae7236875a3e9d2949:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_copy(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* dst,
		const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* src
	)

copy one :ref:`snd_seq_remove_events_t <doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_remove_events_get_condition
.. _doxid-group___seq_event_1ga448bdde3612be594f3651d591678770e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_remove_events_get_condition(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the removal condition bits.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

removal condition bits



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_queue
.. _doxid-group___seq_event_1gaf1c86405bfc4ad14bfa7d6234545e4ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events_get_queue(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the queue as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

queue id



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_time
.. _doxid-group___seq_event_1ga781d9bfba05346779a4d89b8720111f5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`snd_seq_timestamp_t<doxid-unionsnd__seq__timestamp__t>`*
	snd_seq_remove_events_get_time(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the event timestamp as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

time stamp



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_dest
.. _doxid-group___seq_event_1ga2b26aa9977be1f96e42cc71a9075909a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`*
	snd_seq_remove_events_get_dest(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the event destination address as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

destination address



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_channel
.. _doxid-group___seq_event_1ga474f7d65b54164c7b4066b2341680b69:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events_get_channel(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the event channel as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

channel number



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_event_type
.. _doxid-group___seq_event_1ga2bac6d50ae68c432441b6f86f8e51ec5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events_get_event_type(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the event type as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

event type



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_get_tag
.. _doxid-group___seq_event_1gaefe8772759971b008123512b5294fecb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events_get_tag(const :ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info)

Get the event tag id as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container



.. rubric:: Returns:

tag id



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_condition
.. _doxid-group___seq_event_1ga4efc426e73bd8ed2398ee8911c1a1fea:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_condition(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		unsigned int flags
	)

Set the removal condition bits.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- flags

		- removal condition bits



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_queue
.. _doxid-group___seq_event_1ga79e4eea77bf7639b314d0c6a2b858897:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_queue(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int queue
	)

Set the queue as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- queue

		- queue id



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_time
.. _doxid-group___seq_event_1ga34502d7f197063e7e404039c06cd49f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_time(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		const :ref:`snd_seq_timestamp_t<doxid-unionsnd__seq__timestamp__t>`* time
	)

Set the timestamp as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- time

		- timestamp pointer



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_dest
.. _doxid-group___seq_event_1gaaae3ddaad59def2395a9c3391ad3ea3c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_dest(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		const :ref:`snd_seq_addr_t<doxid-structsnd__seq__addr__t>`* addr
	)

Set the destination address as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- addr

		- destination address



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_channel
.. _doxid-group___seq_event_1ga0611da2732cef4d8943489736e838cb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_channel(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int channel
	)

Set the channel as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- channel

		- channel number



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_event_type
.. _doxid-group___seq_event_1ga4b3ac3780f5368118422b08a08ed8d43:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_event_type(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int type
	)

Set the event type as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- type

		- event type



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events_set_tag
.. _doxid-group___seq_event_1ga4847f69287addc86dddf61a2ffca5089:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_remove_events_set_tag(
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info,
		int tag
	)

Set the event tag as removal condition.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- remove_events container

	*
		- tag

		- tag id



.. rubric:: See also:

:ref:`snd_seq_remove_events() <doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362>`

.. index:: pair: function; snd_seq_remove_events
.. _doxid-group___seq_event_1ga7ed1109642fdb8dbd9f8a20564e40362:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_remove_events(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_remove_events_t<doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>`* info
	)

remove events on input/output buffers and pools

Removes matching events with the given condition from input/output buffers and pools. The removal condition is specified in *rmp* argument.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- rmp

		- remove event container



.. rubric:: See also:

:ref:`snd_seq_event_output() <doxid-group___seq_event_1ga0360e41b946c9948ad717beef7c5ab61>`, :ref:`snd_seq_drop_output() <doxid-group___seq_event_1gae42e855dcb4745bdc78efe313d49a0ef>`, :ref:`snd_seq_reset_pool_output() <doxid-group___seq_middle_1ga49d2acf57c4493a95eaaa19d8199f6f2>`

Macros
------

.. index:: pair: define; SND_SEQ_REMOVE_DEST
.. _doxid-group___seq_event_1ga2662f8f42259f5d61be4bfb66fc6f248:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_DEST

Restrict by destination q:client:port

.. index:: pair: define; SND_SEQ_REMOVE_DEST_CHANNEL
.. _doxid-group___seq_event_1ga639b7c33bf27b65ca14857bf5f1cee4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_DEST_CHANNEL

Restrict by channel

.. index:: pair: define; SND_SEQ_REMOVE_EVENT_TYPE
.. _doxid-group___seq_event_1gada13f98960143c3d24e6965c954d0fc4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_EVENT_TYPE

Restrict to event type

.. index:: pair: define; SND_SEQ_REMOVE_IGNORE_OFF
.. _doxid-group___seq_event_1ga43008e518e356084dbcea01b3e7d1909:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_IGNORE_OFF

Do not flush off events

.. index:: pair: define; SND_SEQ_REMOVE_INPUT
.. _doxid-group___seq_event_1gac6a1b26c4551664f1647bc71001b5f88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_INPUT

Remove conditional flags Flush input queues

.. index:: pair: define; SND_SEQ_REMOVE_OUTPUT
.. _doxid-group___seq_event_1ga21236ad0af7c1f3d549c1b3e008b0c73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_OUTPUT

Flush output queues

.. index:: pair: define; SND_SEQ_REMOVE_TAG_MATCH
.. _doxid-group___seq_event_1ga19bc5ec1e09ad34af5cf5ae3b28ee434:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_TAG_MATCH

Restrict to events with given tag

.. index:: pair: define; SND_SEQ_REMOVE_TIME_AFTER
.. _doxid-group___seq_event_1ga8213dbaeb33df14ec7a1e7fd501f8c5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_TIME_AFTER

Restrict to time or after

.. index:: pair: define; SND_SEQ_REMOVE_TIME_BEFORE
.. _doxid-group___seq_event_1ga69279405cabd0127222b936dd6e45e49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_TIME_BEFORE

Restrict to before time

.. index:: pair: define; SND_SEQ_REMOVE_TIME_TICK
.. _doxid-group___seq_event_1gac4169f30c9c8c5dc462245f3a2dc5d76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_REMOVE_TIME_TICK

Time is in ticks

.. index:: pair: define; snd_seq_remove_events_alloca
.. _doxid-group___seq_event_1gaa961c5d6e931bb50c75d828c8470ab02:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_remove_events_alloca(ptr)

allocate a :ref:`snd_seq_remove_events_t <doxid-group___seq_event_1gaff65b0e9c173d96af7f21bfceeca249c>` container on stack

