.. index:: pair: group; Sequencer Queue Interface
.. _doxid-group___seq_queue:

Sequencer Queue Interface
=========================

.. toctree::
	:hidden:

	enum_snd_seq_queue_timer_type_t.rst

Overview
~~~~~~~~

Sequencer Queue Interface :ref:`More...<details-group___seq_queue>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct _snd_seq_queue_info :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`;
	typedef struct _snd_seq_queue_status :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`;
	typedef struct _snd_seq_queue_tempo :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`;
	typedef struct _snd_seq_queue_timer :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`;

	// enums

	enum :ref:`snd_seq_queue_timer_type_t<doxid-group___seq_queue_1gaaa4b5ef5120e6c49b799d8a7aa08427b>`;

	// global functions

	size_t
	:ref:`snd_seq_queue_info_sizeof<doxid-group___seq_queue_1ga55ef5e5a6defb4644756cd74c2979e31>`(void);

	int
	:ref:`snd_seq_queue_info_malloc<doxid-group___seq_queue_1gad78dec2ee096469359b25935d7097870>`(:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`** ptr);

	void
	:ref:`snd_seq_queue_info_free<doxid-group___seq_queue_1ga505d9b6f484307d65699c06ce8f441c5>`(:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* ptr);

	void
	:ref:`snd_seq_queue_info_copy<doxid-group___seq_queue_1ga29a887460bfe9267cb52762c92fb223f>`(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* dst,
		const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* src
	);

	int
	:ref:`snd_seq_queue_info_get_queue<doxid-group___seq_queue_1ga457f2e8325b450d2438f51dfffc0f1ac>`(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info);

	const char*
	:ref:`snd_seq_queue_info_get_name<doxid-group___seq_queue_1gabcfc3ffd825a8815cbf4eb33e475de02>`(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info);

	int
	:ref:`snd_seq_queue_info_get_owner<doxid-group___seq_queue_1ga96157a2ca9d489b44643e45ff2f59dbe>`(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info);

	int
	:ref:`snd_seq_queue_info_get_locked<doxid-group___seq_queue_1ga1030896da01cf5db2d1f4f0708f70df4>`(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info);

	unsigned int
	:ref:`snd_seq_queue_info_get_flags<doxid-group___seq_queue_1ga5f0bec17e5659f97e4e1120bdce17f89>`(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info);

	void
	:ref:`snd_seq_queue_info_set_name<doxid-group___seq_queue_1gaa62c379286b52d3ca60b28a895cce88e>`(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		const char* name
	);

	void
	:ref:`snd_seq_queue_info_set_owner<doxid-group___seq_queue_1ga034321c7457283655d905b628ddf5be5>`(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		int owner
	);

	void
	:ref:`snd_seq_queue_info_set_locked<doxid-group___seq_queue_1gadb0872c315b7aad61efb1fbe0a5c9a47>`(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		int locked
	);

	void
	:ref:`snd_seq_queue_info_set_flags<doxid-group___seq_queue_1gad28b514ecfab5d4446ed2699d2aeed7f>`(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		unsigned int flags
	);

	int
	:ref:`snd_seq_create_queue<doxid-group___seq_queue_1ga05fc43229e94aecbb4379909200aeeae>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	);

	int
	:ref:`snd_seq_alloc_named_queue<doxid-group___seq_queue_1ga8efa821e0fc96fd05460306808e8fb7d>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	);

	int
	:ref:`snd_seq_alloc_queue<doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle);

	int
	:ref:`snd_seq_free_queue<doxid-group___seq_queue_1ga5b2cf5082861776ac9f7f986459cbccf>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q
	);

	int
	:ref:`snd_seq_get_queue_info<doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	);

	int
	:ref:`snd_seq_set_queue_info<doxid-group___seq_queue_1ga1b55c8f96590fc916aa55090c4ba42f1>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	);

	int
	:ref:`snd_seq_query_named_queue<doxid-group___seq_queue_1gaad396a0a6257df968e5ad0c7ee1222ae>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	);

	int
	:ref:`snd_seq_get_queue_usage<doxid-group___seq_queue_1ga5ae5f595791c1fb83b21d8ffbf493ae6>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q
	);

	int
	:ref:`snd_seq_set_queue_usage<doxid-group___seq_queue_1gae9663bbdc879358019ba35b317a9278a>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		int used
	);

	size_t
	:ref:`snd_seq_queue_status_sizeof<doxid-group___seq_queue_1ga410d7b24d89be10501ee18c1b2673a72>`(void);

	int
	:ref:`snd_seq_queue_status_malloc<doxid-group___seq_queue_1ga97a3fa054a6c7778bf3b098bde16c71e>`(:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`** ptr);

	void
	:ref:`snd_seq_queue_status_free<doxid-group___seq_queue_1gaab4d1480fceb6773993d615fec82716b>`(:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* ptr);

	void
	:ref:`snd_seq_queue_status_copy<doxid-group___seq_queue_1ga1869ff7afa1c4369b7f55b00d3918bec>`(
		:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* dst,
		const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* src
	);

	int
	:ref:`snd_seq_queue_status_get_queue<doxid-group___seq_queue_1gab62a82ccd8e49520bdc5c6c3c74a73e7>`(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info);

	int
	:ref:`snd_seq_queue_status_get_events<doxid-group___seq_queue_1gad132bcb774aacbf89cd43f810980cf17>`(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info);

	:ref:`snd_seq_tick_time_t<doxid-group___seq_events_1gaa6a1e0c4394f9b26cc55e0181a5e2cb8>`
	:ref:`snd_seq_queue_status_get_tick_time<doxid-group___seq_queue_1ga45f380b20367b1ccce3e8f26b3ce35d4>`(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info);

	const :ref:`snd_seq_real_time_t<doxid-structsnd__seq__real__time__t>`*
	:ref:`snd_seq_queue_status_get_real_time<doxid-group___seq_queue_1gab386a400f82a7b181e40646d2c58d786>`(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info);

	unsigned int
	:ref:`snd_seq_queue_status_get_status<doxid-group___seq_queue_1ga2f497177636b228f8ce75f853d380428>`(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info);

	int
	:ref:`snd_seq_get_queue_status<doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* status
	);

	size_t
	:ref:`snd_seq_queue_tempo_sizeof<doxid-group___seq_queue_1ga9da76e175bbb5672d456888a1c6563ae>`(void);

	int
	:ref:`snd_seq_queue_tempo_malloc<doxid-group___seq_queue_1ga725a4ba4e5b9860468a8904a64dcf20c>`(:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`** ptr);

	void
	:ref:`snd_seq_queue_tempo_free<doxid-group___seq_queue_1gabcefe4a38566fbbfaea2ba72dd7d020b>`(:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* ptr);

	void
	:ref:`snd_seq_queue_tempo_copy<doxid-group___seq_queue_1ga6d6b5e1c110e1fa86f73a6dc9ae30669>`(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* dst,
		const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* src
	);

	int
	:ref:`snd_seq_queue_tempo_get_queue<doxid-group___seq_queue_1gabe8d63b929c886cd0a0c30ff29dde687>`(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info);

	unsigned int
	:ref:`snd_seq_queue_tempo_get_tempo<doxid-group___seq_queue_1ga0ae17b5abc2d0967eb486f09186c78a2>`(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info);

	int
	:ref:`snd_seq_queue_tempo_get_ppq<doxid-group___seq_queue_1ga65741e506fe8b4e508948276c28369a5>`(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info);

	unsigned int
	:ref:`snd_seq_queue_tempo_get_skew<doxid-group___seq_queue_1ga58bd46f3157166238aedf69d0d1488e1>`(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info);

	unsigned int
	:ref:`snd_seq_queue_tempo_get_skew_base<doxid-group___seq_queue_1gab69067f2e5f84592004709c5a02dc980>`(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info);

	void
	:ref:`snd_seq_queue_tempo_set_tempo<doxid-group___seq_queue_1ga4b0488b65a0ca46460c92d80afa53681>`(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int tempo
	);

	void
	:ref:`snd_seq_queue_tempo_set_ppq<doxid-group___seq_queue_1ga69e4bf372ce3fb49b8fa60130472ba47>`(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		int ppq
	);

	void
	:ref:`snd_seq_queue_tempo_set_skew<doxid-group___seq_queue_1ga1fe4c287eb922f986d70d97e8b189b2a>`(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int skew
	);

	void
	:ref:`snd_seq_queue_tempo_set_skew_base<doxid-group___seq_queue_1gaf3d139c12fa36fa8c582d966bcedde29>`(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int base
	);

	int
	:ref:`snd_seq_get_queue_tempo<doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* tempo
	);

	int
	:ref:`snd_seq_set_queue_tempo<doxid-group___seq_queue_1ga84793898d689520441a4c1164a8c0c77>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* tempo
	);

	size_t
	:ref:`snd_seq_queue_timer_sizeof<doxid-group___seq_queue_1ga60d0cf3e001553f476f9e42f36fbc4c2>`(void);

	int
	:ref:`snd_seq_queue_timer_malloc<doxid-group___seq_queue_1gaf92d9d17a12095b2d79fda8c9a55c165>`(:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`** ptr);

	void
	:ref:`snd_seq_queue_timer_free<doxid-group___seq_queue_1ga0b0b25bcdc1ed4d77fb652af640b1a85>`(:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* ptr);

	void
	:ref:`snd_seq_queue_timer_copy<doxid-group___seq_queue_1gad51004af9337c59da5863167dc7a79a1>`(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* dst,
		const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* src
	);

	int
	:ref:`snd_seq_queue_timer_get_queue<doxid-group___seq_queue_1ga2255dc028c3143237de8a4440a81699b>`(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info);

	:ref:`snd_seq_queue_timer_type_t<doxid-group___seq_queue_1gaaa4b5ef5120e6c49b799d8a7aa08427b>`
	:ref:`snd_seq_queue_timer_get_type<doxid-group___seq_queue_1ga635fba8ca3b26972a318c1ee788be52a>`(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info);

	const :ref:`snd_timer_id_t<doxid-group___timer_1ga87c7e9656e171a76dada7e7e2da37136>`*
	:ref:`snd_seq_queue_timer_get_id<doxid-group___seq_queue_1ga6b83a4e6cb579c1d1ed99b24e258fdf7>`(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info);

	unsigned int
	:ref:`snd_seq_queue_timer_get_resolution<doxid-group___seq_queue_1ga3981cf76e6447dfcccfa429a3f7cb94e>`(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info);

	void
	:ref:`snd_seq_queue_timer_set_type<doxid-group___seq_queue_1gad10886abb8001755915a29ee450fa3a5>`(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		:ref:`snd_seq_queue_timer_type_t<doxid-group___seq_queue_1gaaa4b5ef5120e6c49b799d8a7aa08427b>` type
	);

	void
	:ref:`snd_seq_queue_timer_set_id<doxid-group___seq_queue_1ga5525b8e9d1efbad4718e3dbbaa9e4462>`(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		const :ref:`snd_timer_id_t<doxid-group___timer_1ga87c7e9656e171a76dada7e7e2da37136>`* id
	);

	void
	:ref:`snd_seq_queue_timer_set_resolution<doxid-group___seq_queue_1ga6e6fbe81b0fff646e046ac81b32fd44f>`(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		unsigned int resolution
	);

	int
	:ref:`snd_seq_get_queue_timer<doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* timer
	);

	int
	:ref:`snd_seq_set_queue_timer<doxid-group___seq_queue_1ga607d9437a074adea11f2112e26eac6ac>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* timer
	);

	// macros

	#define :ref:`SND_SEQ_QUEUE_DIRECT<doxid-group___seq_queue_1ga2a5be7ea9ad68adc9a7288ba25850245>`
	#define :ref:`snd_seq_queue_info_alloca<doxid-group___seq_queue_1ga5f28c5167a09d62b6d4ef0338561ab82>`(ptr)
	#define :ref:`snd_seq_queue_status_alloca<doxid-group___seq_queue_1ga38ba4506ad5f5d63387d3d1fb3d630e7>`(ptr)
	#define :ref:`snd_seq_queue_tempo_alloca<doxid-group___seq_queue_1ga8b8349b2bce37cde49359bbbcd47f765>`(ptr)
	#define :ref:`snd_seq_queue_timer_alloca<doxid-group___seq_queue_1gab9d04097fd82162e5511564248c55114>`(ptr)

.. _details-group___seq_queue:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Sequencer Queue Interface

Typedefs
--------

.. index:: pair: typedef; snd_seq_queue_info_t
.. _doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_queue_info snd_seq_queue_info_t

queue information container

.. index:: pair: typedef; snd_seq_queue_status_t
.. _doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_queue_status snd_seq_queue_status_t

queue status container

.. index:: pair: typedef; snd_seq_queue_tempo_t
.. _doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_queue_tempo snd_seq_queue_tempo_t

queue tempo container

.. index:: pair: typedef; snd_seq_queue_timer_t
.. _doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_queue_timer snd_seq_queue_timer_t

queue timer information container

Global Functions
----------------

.. index:: pair: function; snd_seq_queue_info_sizeof
.. _doxid-group___seq_queue_1ga55ef5e5a6defb4644756cd74c2979e31:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_queue_info_sizeof(void)

get size of :ref:`snd_seq_queue_info_t <doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_queue_info_malloc
.. _doxid-group___seq_queue_1gad78dec2ee096469359b25935d7097870:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_info_malloc(:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`** ptr)

allocate an empty :ref:`snd_seq_queue_info_t <doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_queue_info_free
.. _doxid-group___seq_queue_1ga505d9b6f484307d65699c06ce8f441c5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_free(:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* ptr)

frees a previously allocated :ref:`snd_seq_queue_info_t <doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_queue_info_copy
.. _doxid-group___seq_queue_1ga29a887460bfe9267cb52762c92fb223f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_copy(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* dst,
		const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* src
	)

copy one :ref:`snd_seq_queue_info_t <doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_queue_info_get_queue
.. _doxid-group___seq_queue_1ga457f2e8325b450d2438f51dfffc0f1ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_info_get_queue(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info)

Get the queue id of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container



.. rubric:: Returns:

queue id



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, snd_seq_queue_info_set_queue()

.. index:: pair: function; snd_seq_queue_info_get_name
.. _doxid-group___seq_queue_1gabcfc3ffd825a8815cbf4eb33e475de02:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const char*
	snd_seq_queue_info_get_name(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info)

Get the name of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container



.. rubric:: Returns:

name string



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_set_name() <doxid-group___seq_queue_1gaa62c379286b52d3ca60b28a895cce88e>`

.. index:: pair: function; snd_seq_queue_info_get_owner
.. _doxid-group___seq_queue_1ga96157a2ca9d489b44643e45ff2f59dbe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_info_get_owner(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info)

Get the owner client id of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container



.. rubric:: Returns:

owner client id



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_set_owner() <doxid-group___seq_queue_1ga034321c7457283655d905b628ddf5be5>`

.. index:: pair: function; snd_seq_queue_info_get_locked
.. _doxid-group___seq_queue_1ga1030896da01cf5db2d1f4f0708f70df4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_info_get_locked(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info)

Get the lock status of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container



.. rubric:: Returns:

lock status non-zero = locked



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_set_locked() <doxid-group___seq_queue_1gadb0872c315b7aad61efb1fbe0a5c9a47>`

.. index:: pair: function; snd_seq_queue_info_get_flags
.. _doxid-group___seq_queue_1ga5f0bec17e5659f97e4e1120bdce17f89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_info_get_flags(const :ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info)

Get the conditional bit flags of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container



.. rubric:: Returns:

conditional bit flags



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_set_flags() <doxid-group___seq_queue_1gad28b514ecfab5d4446ed2699d2aeed7f>`

.. index:: pair: function; snd_seq_queue_info_set_name
.. _doxid-group___seq_queue_1gaa62c379286b52d3ca60b28a895cce88e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_set_name(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		const char* name
	)

Set the name of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container

	*
		- name

		- name string



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_get_name() <doxid-group___seq_queue_1gabcfc3ffd825a8815cbf4eb33e475de02>`

.. index:: pair: function; snd_seq_queue_info_set_owner
.. _doxid-group___seq_queue_1ga034321c7457283655d905b628ddf5be5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_set_owner(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		int owner
	)

Set the owner client id of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container

	*
		- owner

		- client id



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_get_owner() <doxid-group___seq_queue_1ga96157a2ca9d489b44643e45ff2f59dbe>`

.. index:: pair: function; snd_seq_queue_info_set_locked
.. _doxid-group___seq_queue_1gadb0872c315b7aad61efb1fbe0a5c9a47:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_set_locked(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		int locked
	)

Set the lock status of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container

	*
		- locked

		- lock status



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_get_locked() <doxid-group___seq_queue_1ga1030896da01cf5db2d1f4f0708f70df4>`

.. index:: pair: function; snd_seq_queue_info_set_flags
.. _doxid-group___seq_queue_1gad28b514ecfab5d4446ed2699d2aeed7f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_info_set_flags(
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info,
		unsigned int flags
	)

Set the conditional bit flags of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_info container

	*
		- flags

		- conditional bit flags



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_queue_info_get_flags() <doxid-group___seq_queue_1ga5f0bec17e5659f97e4e1120bdce17f89>`

.. index:: pair: function; snd_seq_create_queue
.. _doxid-group___seq_queue_1ga05fc43229e94aecbb4379909200aeeae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_create_queue(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	)

create a queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- queue information to initialize



.. rubric:: Returns:

the queue id (zero or positive) on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_alloc_queue() <doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`

.. index:: pair: function; snd_seq_alloc_named_queue
.. _doxid-group___seq_queue_1ga8efa821e0fc96fd05460306808e8fb7d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_alloc_named_queue(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	)

allocate a queue with the specified name



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- name

		- the name of the new queue



.. rubric:: Returns:

the queue id (zero or positive) on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_alloc_queue() <doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`

.. index:: pair: function; snd_seq_alloc_queue
.. _doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_alloc_queue(:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle)

allocate a queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle



.. rubric:: Returns:

the queue id (zero or positive) on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_alloc_named_queue() <doxid-group___seq_queue_1ga8efa821e0fc96fd05460306808e8fb7d>`, :ref:`snd_seq_create_queue() <doxid-group___seq_queue_1ga05fc43229e94aecbb4379909200aeeae>`, :ref:`snd_seq_free_queue() <doxid-group___seq_queue_1ga5b2cf5082861776ac9f7f986459cbccf>`, :ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`

.. index:: pair: function; snd_seq_free_queue
.. _doxid-group___seq_queue_1ga5b2cf5082861776ac9f7f986459cbccf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_free_queue(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q
	)

delete the specified queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to delete



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_alloc_queue() <doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`

.. index:: pair: function; snd_seq_get_queue_info
.. _doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_queue_info(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	)

obtain queue attributes



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to query

	*
		- info

		- information returned



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_alloc_queue() <doxid-group___seq_queue_1ga036e62b321b56bee2e8d2e8280a6416a>`, :ref:`snd_seq_set_queue_info() <doxid-group___seq_queue_1ga1b55c8f96590fc916aa55090c4ba42f1>`, :ref:`snd_seq_query_named_queue() <doxid-group___seq_queue_1gaad396a0a6257df968e5ad0c7ee1222ae>`

.. index:: pair: function; snd_seq_set_queue_info
.. _doxid-group___seq_queue_1ga1b55c8f96590fc916aa55090c4ba42f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_queue_info(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		int q,
		:ref:`snd_seq_queue_info_t<doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>`* info
	)

change the queue attributes



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to change

	*
		- info

		- information changed



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`

.. index:: pair: function; snd_seq_query_named_queue
.. _doxid-group___seq_queue_1gaad396a0a6257df968e5ad0c7ee1222ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_query_named_queue(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* seq,
		const char* name
	)

query the matching queue with the specified name

Searches the matching queue with the specified name string.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- name

		- the name string to query



.. rubric:: Returns:

the queue id if found or negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`

.. index:: pair: function; snd_seq_get_queue_usage
.. _doxid-group___seq_queue_1ga5ae5f595791c1fb83b21d8ffbf493ae6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_queue_usage(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q
	)

Get the queue usage flag to the client.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id



.. rubric:: Returns:

1 = client is allowed to access the queue, 0 = not allowed, otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_set_queue_usage() <doxid-group___seq_queue_1gae9663bbdc879358019ba35b317a9278a>`

.. index:: pair: function; snd_seq_set_queue_usage
.. _doxid-group___seq_queue_1gae9663bbdc879358019ba35b317a9278a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_queue_usage(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		int used
	)

Set the queue usage flag to the client.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id

	*
		- used

		- non-zero if the client is allowed



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_info() <doxid-group___seq_queue_1ga55c027a8a487f9c9000674a0e5ef4ab0>`, :ref:`snd_seq_set_queue_usage() <doxid-group___seq_queue_1gae9663bbdc879358019ba35b317a9278a>`

.. index:: pair: function; snd_seq_queue_status_sizeof
.. _doxid-group___seq_queue_1ga410d7b24d89be10501ee18c1b2673a72:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_queue_status_sizeof(void)

get size of :ref:`snd_seq_queue_status_t <doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_queue_status_malloc
.. _doxid-group___seq_queue_1ga97a3fa054a6c7778bf3b098bde16c71e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_status_malloc(:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`** ptr)

allocate an empty :ref:`snd_seq_queue_status_t <doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_queue_status_free
.. _doxid-group___seq_queue_1gaab4d1480fceb6773993d615fec82716b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_status_free(:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* ptr)

frees a previously allocated :ref:`snd_seq_queue_status_t <doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_queue_status_copy
.. _doxid-group___seq_queue_1ga1869ff7afa1c4369b7f55b00d3918bec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_status_copy(
		:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* dst,
		const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* src
	)

copy one :ref:`snd_seq_queue_status_t <doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_queue_status_get_queue
.. _doxid-group___seq_queue_1gab62a82ccd8e49520bdc5c6c3c74a73e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_status_get_queue(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info)

Get the queue id of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

queue id



.. rubric:: See also:

:ref:`snd_seq_get_queue_status() <doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`

.. index:: pair: function; snd_seq_queue_status_get_events
.. _doxid-group___seq_queue_1gad132bcb774aacbf89cd43f810980cf17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_status_get_events(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info)

Get the number of events of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

number of events



.. rubric:: See also:

:ref:`snd_seq_get_queue_status() <doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`

.. index:: pair: function; snd_seq_queue_status_get_tick_time
.. _doxid-group___seq_queue_1ga45f380b20367b1ccce3e8f26b3ce35d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`snd_seq_tick_time_t<doxid-group___seq_events_1gaa6a1e0c4394f9b26cc55e0181a5e2cb8>`
	snd_seq_queue_status_get_tick_time(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info)

Get the tick time of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

tick time



.. rubric:: See also:

:ref:`snd_seq_get_queue_status() <doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`

.. index:: pair: function; snd_seq_queue_status_get_real_time
.. _doxid-group___seq_queue_1gab386a400f82a7b181e40646d2c58d786:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`snd_seq_real_time_t<doxid-structsnd__seq__real__time__t>`*
	snd_seq_queue_status_get_real_time(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info)

Get the real time of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: See also:

:ref:`snd_seq_get_queue_status() <doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`

.. index:: pair: function; snd_seq_queue_status_get_status
.. _doxid-group___seq_queue_1ga2f497177636b228f8ce75f853d380428:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_status_get_status(const :ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* info)

Get the running status bits of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

running status bits



.. rubric:: See also:

:ref:`snd_seq_get_queue_status() <doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661>`

.. index:: pair: function; snd_seq_get_queue_status
.. _doxid-group___seq_queue_1ga594dfc6fa6708674238275821c759661:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_queue_status(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_status_t<doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>`* status
	)

obtain the running state of the queue

Obtains the running state of the specified queue q.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to query

	*
		- status

		- pointer to store the current status



.. rubric:: Returns:

0 on success otherwise a negative error code

.. index:: pair: function; snd_seq_queue_tempo_sizeof
.. _doxid-group___seq_queue_1ga9da76e175bbb5672d456888a1c6563ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_queue_tempo_sizeof(void)

get size of :ref:`snd_seq_queue_tempo_t <doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_queue_tempo_malloc
.. _doxid-group___seq_queue_1ga725a4ba4e5b9860468a8904a64dcf20c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_tempo_malloc(:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`** ptr)

allocate an empty :ref:`snd_seq_queue_tempo_t <doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_queue_tempo_free
.. _doxid-group___seq_queue_1gabcefe4a38566fbbfaea2ba72dd7d020b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_free(:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* ptr)

frees a previously allocated :ref:`snd_seq_queue_tempo_t <doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_queue_tempo_copy
.. _doxid-group___seq_queue_1ga6d6b5e1c110e1fa86f73a6dc9ae30669:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_copy(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* dst,
		const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* src
	)

copy one :ref:`snd_seq_queue_tempo_t <doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_queue_tempo_get_queue
.. _doxid-group___seq_queue_1gabe8d63b929c886cd0a0c30ff29dde687:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_tempo_get_queue(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info)

Get the queue id of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

queue id



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_get_tempo
.. _doxid-group___seq_queue_1ga0ae17b5abc2d0967eb486f09186c78a2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_tempo_get_tempo(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info)

Get the tempo of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

tempo value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_get_ppq
.. _doxid-group___seq_queue_1ga65741e506fe8b4e508948276c28369a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_tempo_get_ppq(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info)

Get the ppq of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

ppq value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_get_skew
.. _doxid-group___seq_queue_1ga58bd46f3157166238aedf69d0d1488e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_tempo_get_skew(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info)

Get the timer skew value of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

timer skew value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_get_skew_base
.. _doxid-group___seq_queue_1gab69067f2e5f84592004709c5a02dc980:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_tempo_get_skew_base(const :ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info)

Get the timer skew base value of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container



.. rubric:: Returns:

timer skew base value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_set_tempo
.. _doxid-group___seq_queue_1ga4b0488b65a0ca46460c92d80afa53681:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_set_tempo(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int tempo
	)

Set the tempo of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container

	*
		- tempo

		- tempo value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_set_ppq
.. _doxid-group___seq_queue_1ga69e4bf372ce3fb49b8fa60130472ba47:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_set_ppq(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		int ppq
	)

Set the ppq of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container

	*
		- ppq

		- ppq value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_set_skew
.. _doxid-group___seq_queue_1ga1fe4c287eb922f986d70d97e8b189b2a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_set_skew(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int skew
	)

Set the timer skew value of a queue_status container.

The skew of timer is calculated as skew / base. For example, to play with double speed, pass base \* 2 as the skew value.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container

	*
		- skew

		- timer skew value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_tempo_set_skew_base
.. _doxid-group___seq_queue_1gaf3d139c12fa36fa8c582d966bcedde29:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_tempo_set_skew_base(
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* info,
		unsigned int base
	)

Set the timer skew base value of a queue_status container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_status container

	*
		- base

		- timer skew base value



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_get_queue_tempo
.. _doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_queue_tempo(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* tempo
	)

obtain the current tempo of the queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to be queried

	*
		- tempo

		- pointer to store the current tempo



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_set_queue_tempo() <doxid-group___seq_queue_1ga84793898d689520441a4c1164a8c0c77>`

.. index:: pair: function; snd_seq_set_queue_tempo
.. _doxid-group___seq_queue_1ga84793898d689520441a4c1164a8c0c77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_queue_tempo(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_tempo_t<doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>`* tempo
	)

set the tempo of the queue



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to change the tempo

	*
		- tempo

		- tempo information



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_tempo() <doxid-group___seq_queue_1gaf1fab24ee86f45c7eb2b0c3d1b2574b4>`

.. index:: pair: function; snd_seq_queue_timer_sizeof
.. _doxid-group___seq_queue_1ga60d0cf3e001553f476f9e42f36fbc4c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_queue_timer_sizeof(void)

get size of :ref:`snd_seq_queue_timer_t <doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_queue_timer_malloc
.. _doxid-group___seq_queue_1gaf92d9d17a12095b2d79fda8c9a55c165:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_timer_malloc(:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`** ptr)

allocate an empty :ref:`snd_seq_queue_timer_t <doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_queue_timer_free
.. _doxid-group___seq_queue_1ga0b0b25bcdc1ed4d77fb652af640b1a85:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_timer_free(:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* ptr)

frees a previously allocated :ref:`snd_seq_queue_timer_t <doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_queue_timer_copy
.. _doxid-group___seq_queue_1gad51004af9337c59da5863167dc7a79a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_timer_copy(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* dst,
		const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* src
	)

copy one :ref:`snd_seq_queue_timer_t <doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_queue_timer_get_queue
.. _doxid-group___seq_queue_1ga2255dc028c3143237de8a4440a81699b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_queue_timer_get_queue(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info)

Get the queue id of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container



.. rubric:: Returns:

queue id



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_get_type
.. _doxid-group___seq_queue_1ga635fba8ca3b26972a318c1ee788be52a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`snd_seq_queue_timer_type_t<doxid-group___seq_queue_1gaaa4b5ef5120e6c49b799d8a7aa08427b>`
	snd_seq_queue_timer_get_type(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info)

Get the timer type of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container



.. rubric:: Returns:

timer type



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_get_id
.. _doxid-group___seq_queue_1ga6b83a4e6cb579c1d1ed99b24e258fdf7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`snd_timer_id_t<doxid-group___timer_1ga87c7e9656e171a76dada7e7e2da37136>`*
	snd_seq_queue_timer_get_id(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info)

Get the timer id of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container



.. rubric:: Returns:

timer id pointer



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_get_resolution
.. _doxid-group___seq_queue_1ga3981cf76e6447dfcccfa429a3f7cb94e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned int
	snd_seq_queue_timer_get_resolution(const :ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info)

Get the timer resolution of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container



.. rubric:: Returns:

timer resolution



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_set_type
.. _doxid-group___seq_queue_1gad10886abb8001755915a29ee450fa3a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_timer_set_type(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		:ref:`snd_seq_queue_timer_type_t<doxid-group___seq_queue_1gaaa4b5ef5120e6c49b799d8a7aa08427b>` type
	)

Set the timer type of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container

	*
		- type

		- timer type



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_set_id
.. _doxid-group___seq_queue_1ga5525b8e9d1efbad4718e3dbbaa9e4462:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_timer_set_id(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		const :ref:`snd_timer_id_t<doxid-group___timer_1ga87c7e9656e171a76dada7e7e2da37136>`* id
	)

Set the timer id of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container

	*
		- id

		- timer id pointer



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_queue_timer_set_resolution
.. _doxid-group___seq_queue_1ga6e6fbe81b0fff646e046ac81b32fd44f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_queue_timer_set_resolution(
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* info,
		unsigned int resolution
	)

Set the timer resolution of a queue_timer container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- queue_timer container

	*
		- resolution

		- timer resolution



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

.. index:: pair: function; snd_seq_get_queue_timer
.. _doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_queue_timer(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* timer
	)

obtain the queue timer information



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to query

	*
		- timer

		- pointer to store the timer information



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_set_queue_timer() <doxid-group___seq_queue_1ga607d9437a074adea11f2112e26eac6ac>`

.. index:: pair: function; snd_seq_set_queue_timer
.. _doxid-group___seq_queue_1ga607d9437a074adea11f2112e26eac6ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_queue_timer(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int q,
		:ref:`snd_seq_queue_timer_t<doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>`* timer
	)

set the queue timer information



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- q

		- queue id to change the timer

	*
		- timer

		- timer information



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_queue_timer() <doxid-group___seq_queue_1ga545fa858434c91dba0de7bd9585bcc08>`

Macros
------

.. index:: pair: define; SND_SEQ_QUEUE_DIRECT
.. _doxid-group___seq_queue_1ga2a5be7ea9ad68adc9a7288ba25850245:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_SEQ_QUEUE_DIRECT

special queue ids direct dispatch

.. index:: pair: define; snd_seq_queue_info_alloca
.. _doxid-group___seq_queue_1ga5f28c5167a09d62b6d4ef0338561ab82:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_queue_info_alloca(ptr)

allocate a :ref:`snd_seq_queue_info_t <doxid-group___seq_queue_1gad6fa414eb8273839c2e8ab4418ce1cf6>` container on stack

.. index:: pair: define; snd_seq_queue_status_alloca
.. _doxid-group___seq_queue_1ga38ba4506ad5f5d63387d3d1fb3d630e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_queue_status_alloca(ptr)

allocate a :ref:`snd_seq_queue_status_t <doxid-group___seq_queue_1ga6f72d6b360291ad44ebe45cd64ca38d1>` container on stack

.. index:: pair: define; snd_seq_queue_tempo_alloca
.. _doxid-group___seq_queue_1ga8b8349b2bce37cde49359bbbcd47f765:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_queue_tempo_alloca(ptr)

allocate a :ref:`snd_seq_queue_tempo_t <doxid-group___seq_queue_1ga8cef04796cda140f86f8e6298f26b4da>` container on stack

.. index:: pair: define; snd_seq_queue_timer_alloca
.. _doxid-group___seq_queue_1gab9d04097fd82162e5511564248c55114:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_queue_timer_alloca(ptr)

allocate a :ref:`snd_seq_queue_timer_t <doxid-group___seq_queue_1gaff3d3167d37b04dfeb5cf834e35b0729>` container on stack

