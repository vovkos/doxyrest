.. index:: pair: group; Use Case Interface
.. _doxid-group__ucm:

Use Case Interface
==================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The ALSA Use Case manager interface. :ref:`More...<details-group__ucm>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct snd_use_case_mgr :ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`;

	// global functions

	char*
	:ref:`snd_use_case_identifier<doxid-group__ucm_1ga530159363360c3cae3c9816c034fbcc5>`(
		const char* fmt,
		...
	);

	int
	:ref:`snd_use_case_free_list<doxid-group__ucm_1ga003553ee6fd13119fc9e08ffcdd959f9>`(
		const char* list[],
		int items
	);

	int
	:ref:`snd_use_case_get_list<doxid-group__ucm_1gaa128bcb412f42247e561b81ec342c2e1>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char** list[]
	);

	int
	:ref:`snd_use_case_get<doxid-group__ucm_1ga9c13ae514eeebf918adcec0e4534aca5>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char** value
	);

	int
	:ref:`snd_use_case_geti<doxid-group__ucm_1ga66311429dfd62743089be3eb79f1d1f5>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		long* value
	);

	int
	:ref:`snd_use_case_set<doxid-group__ucm_1gae9ff2a06c955d40ad0204f21f8352831>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char* value
	);

	int
	:ref:`snd_use_case_mgr_open<doxid-group__ucm_1ga74f0ef0116590fe8eec1edeaf1d88847>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`** uc_mgr,
		const char* card_name
	);

	int
	:ref:`snd_use_case_mgr_reload<doxid-group__ucm_1gafedd1fc74ce9086033f6f668348321b4>`(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr);

	int
	:ref:`snd_use_case_mgr_close<doxid-group__ucm_1gaac2bf25d233230d2d6a9e422795d716c>`(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr);

	int
	:ref:`snd_use_case_mgr_reset<doxid-group__ucm_1ga1364dba503c216b2e46085a3f4abd20a>`(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr);

	static
	__inline__ int
	:ref:`snd_use_case_card_list<doxid-group__ucm_1ga68b86cfb1ad188a691feaafe0cae65b8>`(const char** list[]);

	static
	__inline__ int
	:ref:`snd_use_case_verb_list<doxid-group__ucm_1gab3ba95168d68096f7dfdd0919dc4b3bc>`(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char** list[]
	);

	// macros

	#define :ref:`SND_USE_CASE_DEV_BLUETOOTH<doxid-group__ucm_1ga4992d89d4ec8be51f19bec0a69ba1984>`
	#define :ref:`SND_USE_CASE_DEV_EARPIECE<doxid-group__ucm_1ga6ca86620d080360f6e2a240efb334dec>`
	#define :ref:`SND_USE_CASE_DEV_HANDSET<doxid-group__ucm_1ga315d29bfbdf84cff8b7a593c34f6393b>`
	#define :ref:`SND_USE_CASE_DEV_HDMI<doxid-group__ucm_1gab4e4a2b3d44883b1ffb5406529746faf>`
	#define :ref:`SND_USE_CASE_DEV_HEADPHONES<doxid-group__ucm_1gaf2c22989c5315abcee46713cde8693d2>`
	#define :ref:`SND_USE_CASE_DEV_HEADSET<doxid-group__ucm_1ga72c3300fac357a2e22b52afc13547ce0>`
	#define :ref:`SND_USE_CASE_DEV_LINE<doxid-group__ucm_1gaa5d03312d1990c0bd5c162f61fbfa4a0>`
	#define :ref:`SND_USE_CASE_DEV_NONE<doxid-group__ucm_1gaa7abb8ce3d21b584c621869f7ebed3e6>`
	#define :ref:`SND_USE_CASE_DEV_SPDIF<doxid-group__ucm_1ga7f7f45feb440a49be3be9e52da98b242>`
	#define :ref:`SND_USE_CASE_DEV_SPEAKER<doxid-group__ucm_1ga515b2956d58485b27fb982965d067c55>`
	#define :ref:`SND_USE_CASE_MOD_CAPTURE_MUSIC<doxid-group__ucm_1gad685f6b4dcb9e37f0b5a1160425aec23>`
	#define :ref:`SND_USE_CASE_MOD_CAPTURE_VOICE<doxid-group__ucm_1gaec6b78d147824af1474fc914770a834c>`
	#define :ref:`SND_USE_CASE_MOD_ECHO_REF<doxid-group__ucm_1gae2a230a913142c17f30d7dc2ae416866>`
	#define :ref:`SND_USE_CASE_MOD_PLAY_MUSIC<doxid-group__ucm_1gadee4d4dce15624e282ab1960113caf8b>`
	#define :ref:`SND_USE_CASE_MOD_PLAY_TONE<doxid-group__ucm_1gaacc8e06e0c8fc0de5e26df6f20462484>`
	#define :ref:`SND_USE_CASE_MOD_PLAY_VOICE<doxid-group__ucm_1ga61c217f060e616d61a294ac5d5d2fac0>`
	#define :ref:`SND_USE_CASE_TQ_MUSIC<doxid-group__ucm_1ga64dd2e9f8e4e800effc02d895e1bfdbb>`
	#define :ref:`SND_USE_CASE_TQ_TONES<doxid-group__ucm_1ga022328b4bb0b0b14d358cb2155e5d184>`
	#define :ref:`SND_USE_CASE_TQ_VOICE<doxid-group__ucm_1gaa822e565021887e26c0eaec2cee97bbd>`
	#define :ref:`SND_USE_CASE_VERB_ANALOG_RADIO<doxid-group__ucm_1gab08fad02c1e8641016be957fc5ce3705>`
	#define :ref:`SND_USE_CASE_VERB_DIGITAL_RADIO<doxid-group__ucm_1gac1fc6fc3c4f08b4de9e622d05b591cb2>`
	#define :ref:`SND_USE_CASE_VERB_HIFI<doxid-group__ucm_1ga71b24a1fcc4ce2cee555520ca546b348>`
	#define :ref:`SND_USE_CASE_VERB_HIFI_LOW_POWER<doxid-group__ucm_1ga9a0739ade4ac574b31b4728c22280861>`
	#define :ref:`SND_USE_CASE_VERB_INACTIVE<doxid-group__ucm_1gaedcdfd09f499b753d8652772ef1a248f>`
	#define :ref:`SND_USE_CASE_VERB_IP_VOICECALL<doxid-group__ucm_1ga938754af309628dfc8bafe28018b8aab>`
	#define :ref:`SND_USE_CASE_VERB_VOICE<doxid-group__ucm_1gae496d33ac019caffae8dca584b04d09f>`
	#define :ref:`SND_USE_CASE_VERB_VOICECALL<doxid-group__ucm_1gaaa4aed51667887d194caae91362e8428>`
	#define :ref:`SND_USE_CASE_VERB_VOICE_LOW_POWER<doxid-group__ucm_1ga64b61825903d5ce88d3f4cfb12c7bd00>`

.. _details-group__ucm:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The ALSA Use Case manager interface. See :ref:`ALSA Use Case Interface <doxid-group__ucm>` page for more details.

Typedefs
--------

.. index:: pair: typedef; snd_use_case_mgr_t
.. _doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct snd_use_case_mgr snd_use_case_mgr_t

use case container

Global Functions
----------------

.. index:: pair: function; snd_use_case_identifier
.. _doxid-group__ucm_1ga530159363360c3cae3c9816c034fbcc5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char*
	snd_use_case_identifier(
		const char* fmt,
		...
	)

Create an identifier.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- fmt

		- Format (sprintf like)

	*
		- ...

		- Optional arguments for sprintf like format



.. rubric:: Returns:

Allocated string identifier or NULL on error

.. index:: pair: function; snd_use_case_free_list
.. _doxid-group__ucm_1ga003553ee6fd13119fc9e08ffcdd959f9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_free_list(
		const char* list[],
		int items
	)

Free a string list.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- list

		- The string list to free

	*
		- items

		- Count of strings



.. rubric:: Returns:

Zero if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_get_list
.. _doxid-group__ucm_1gaa128bcb412f42247e561b81ec342c2e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_get_list(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char** list[]
	)

Obtain a list of entries.

Defined identifiers:

* NULL - get card list (in pair cardname+comment)

* _verbs - get verb list (in pair verb+comment)

* _devices[/{verb}] - get list of supported devices (in pair device+comment)

* _modifiers[/{verb}] - get list of supported modifiers (in pair modifier+comment)

* TQ[/{verb}] - get list of TQ identifiers

* _enadevs - get list of enabled devices

* _enamods - get list of enabled modifiers

* _supporteddevs/{modifier}|{device}[/{verb}] - list of supported devices

* _conflictingdevs/{modifier}|{device}[/{verb}] - list of conflicting devices

Note that at most one of the supported/conflicting devs lists has any entries, and when neither is present, all devices are supported.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager (may be NULL - card list)

	*
		- identifier

		- (may be NULL - card list)

	*
		- list

		- Returned allocated list

	*
		- uc_mgr

		- Use case manager (may be NULL - card list)

	*
		- identifier

		- (may be NULL - card list)

	*
		- list

		- Returned allocated list



.. rubric:: Returns:

Number of list entries if success, otherwise a negative error code

Number of list entries if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_get
.. _doxid-group__ucm_1ga9c13ae514eeebf918adcec0e4534aca5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_get(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char** value
	)

Get current - string.

Note: The returned string is dynamically allocated, use free() to deallocate this string. (Yes, the value parameter shouldn't be marked as "const", but it's too late to fix it, sorry about that.)

Known identifiers:

* NULL - return current card

* _verb - return current verb

* [=]{NAME}[/[{modifier}|{/device}][/{verb}]]
  
  * value identifier {NAME}
  
  * Search starts at given modifier or device if any, else at a verb
  
  * Search starts at given verb if any, else current verb
  
  * Searches modifier/device, then verb, then defaults
  
  * Specify a leading "=" to search only the exact device/modifier/verb specified, and not search through each object in turn.
  
  * Examples:
    
    * "PlaybackPCM/Play Music"
    
    * "CapturePCM/SPDIF"
    
    * From ValueDefaults only: "=Variable"
    
    * From current active verb: "=Variable//"
    
    * From verb "Verb": "=Variable//Verb"
    
    * From "Modifier" in current active verb: "=Variable/Modifier/"
    
    * From "Modifier" in "Verb": "=Variable/Modifier/Verb"

Recommended names for values:

* TQ
  
  * Tone Quality

* PlaybackPCM
  
  * full PCM playback device name

* PlaybackPCMIsDummy
  
  * Valid values: "yes" and "no". If set to "yes", the PCM named by the PlaybackPCM value is a dummy device, meaning that opening it enables an audio path in the hardware, but writing to the PCM device has no effect.

* CapturePCM
  
  * full PCM capture device name

* CapturePCMIsDummy
  
  * Valid values: "yes" and "no". If set to "yes", the PCM named by the CapturePCM value is a dummy device, meaning that opening it enables an audio path in the hardware, but reading from the PCM device has no effect.

* PlaybackRate
  
  * playback device sample rate

* PlaybackChannels
  
  * playback device channel count

* PlaybackCTL
  
  * playback control device name

* PlaybackVolume
  
  * playback control volume ID string

* PlaybackSwitch
  
  * playback control switch ID string

* CaptureRate
  
  * capture device sample rate

* CaptureChannels
  
  * capture device channel count

* CaptureCTL
  
  * capture control device name

* CaptureVolume
  
  * capture control volume ID string

* CaptureSwitch
  
  * capture control switch ID string

* PlaybackMixer
  
  * name of playback mixer

* PlaybackMixerID
  
  * mixer playback ID

* CaptureMixer
  
  * name of capture mixer

* CaptureMixerID
  
  * mixer capture ID

* JackControl, JackDev, JackHWMute
  
  * Jack information for a device. The jack status can be reported via a kcontrol and/or via an input device. **JackControl** is the kcontrol name of the jack, and **JackDev** is the input device id of the jack (if the full input device path is /dev/input/by-id/foo, the JackDev value should be "foo"). UCM configuration files should contain both JackControl and JackDev when possible, because applications are likely to support only one or the other.
    
    If **JackHWMute** is set, it indicates that when the jack is plugged in, the hardware automatically mutes some other device(s). The JackHWMute value is a space-separated list of device names (this isn't compatible with device names with spaces in them, so don't use such device names!). Note that JackHWMute should be used only when the hardware enforces the automatic muting. If the hardware doesn't enforce any muting, it may still be tempting to set JackHWMute to trick upper software layers to e.g. automatically mute speakers when headphones are plugged in, but that's application policy configuration that doesn't belong to UCM configuration files.

Note: String is dynamically allocated, use free() to deallocate this string.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 

	*
		- value

		- Value pointer

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 

	*
		- value

		- Value pointer



.. rubric:: Returns:

Zero if success, otherwise a negative error code

Zero if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_geti
.. _doxid-group__ucm_1ga66311429dfd62743089be3eb79f1d1f5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_geti(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		long* value
	)

Get current - integer.

Known identifiers:

* _devstatus/{device} - return status for given device

* _modstatus/{modifier} - return status for given modifier



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 

	*
		- value

		- result

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 



.. rubric:: Returns:

Zero if success, otherwise a negative error code

Value if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_set
.. _doxid-group__ucm_1gae9ff2a06c955d40ad0204f21f8352831:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_set(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char* identifier,
		const char* value
	)

Set new.

Known identifiers:

* _verb - set current verb = value

* _enadev - enable given device = value

* _disdev - disable given device = value

* _swdev/{old_device} - new_device = value
  
  * disable old_device and then enable new_device
  
  * if old_device is not enabled just return
  
  * check transmit sequence firstly

* _enamod - enable given modifier = value

* _dismod - disable given modifier = value

* _swmod/{old_modifier} - new_modifier = value
  
  * disable old_modifier and then enable new_modifier
  
  * if old_modifier is not enabled just return
  
  * check transmit sequence firstly



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 

	*
		- value

		- Value

	*
		- uc_mgr

		- Use case manager

	*
		- identifier

		- 

	*
		- value

		- Value



.. rubric:: Returns:

Zero if success, otherwise a negative error code

Zero if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_mgr_open
.. _doxid-group__ucm_1ga74f0ef0116590fe8eec1edeaf1d88847:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_mgr_open(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`** uc_mgr,
		const char* card_name
	)

Open and initialise use case core for sound card.

Open and initialise use case core for sound card.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Returned use case manager pointer

	*
		- card_name

		- Sound card name.

	*
		- uc_mgr

		- Returned use case manager pointer

	*
		- card_name

		- name of card to open



.. rubric:: Returns:

zero if success, otherwise a negative error code

zero on success, otherwise a negative error code

.. index:: pair: function; snd_use_case_mgr_reload
.. _doxid-group__ucm_1gafedd1fc74ce9086033f6f668348321b4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_mgr_reload(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr)

Reload and re-parse use case configuration files for sound card.

Reload and re-parse use case configuration files for sound card.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- uc_mgr

		- Use case manager



.. rubric:: Returns:

zero if success, otherwise a negative error code

zero on success, otherwise a negative error code

.. index:: pair: function; snd_use_case_mgr_close
.. _doxid-group__ucm_1gaac2bf25d233230d2d6a9e422795d716c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_mgr_close(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr)

Close use case manager.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- uc_mgr

		- Use case manager



.. rubric:: Returns:

zero if success, otherwise a negative error code

zero on success, otherwise a negative error code

.. index:: pair: function; snd_use_case_mgr_reset
.. _doxid-group__ucm_1ga1364dba503c216b2e46085a3f4abd20a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_use_case_mgr_reset(:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr)

Reset use case manager verb, device, modifier to deafult settings.

Reset use case manager verb, device, modifier to deafult settings.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- uc_mgr

		- Use case manager



.. rubric:: Returns:

zero if success, otherwise a negative error code

zero on success, otherwise a negative error code

.. index:: pair: function; snd_use_case_card_list
.. _doxid-group__ucm_1ga68b86cfb1ad188a691feaafe0cae65b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	__inline__ int
	snd_use_case_card_list(const char** list[])

Obtain a list of cards.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- list

		- Returned allocated list



.. rubric:: Returns:

Number of list entries if success, otherwise a negative error code

.. index:: pair: function; snd_use_case_verb_list
.. _doxid-group__ucm_1gab3ba95168d68096f7dfdd0919dc4b3bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	__inline__ int
	snd_use_case_verb_list(
		:ref:`snd_use_case_mgr_t<doxid-group__ucm_1gace35ebd33e632cba9441762f6633a20e>`* uc_mgr,
		const char** list[]
	)

Obtain a list of verbs.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- uc_mgr

		- Use case manager

	*
		- list

		- Returned list of verbs



.. rubric:: Returns:

Number of list entries if success, otherwise a negative error code

Macros
------

.. index:: pair: define; SND_USE_CASE_DEV_BLUETOOTH
.. _doxid-group__ucm_1ga4992d89d4ec8be51f19bec0a69ba1984:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_BLUETOOTH

Bluetooth Device

.. index:: pair: define; SND_USE_CASE_DEV_EARPIECE
.. _doxid-group__ucm_1ga6ca86620d080360f6e2a240efb334dec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_EARPIECE

Earpiece Device

.. index:: pair: define; SND_USE_CASE_DEV_HANDSET
.. _doxid-group__ucm_1ga315d29bfbdf84cff8b7a593c34f6393b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_HANDSET

Handset Device

.. index:: pair: define; SND_USE_CASE_DEV_HDMI
.. _doxid-group__ucm_1gab4e4a2b3d44883b1ffb5406529746faf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_HDMI

HDMI Device

.. index:: pair: define; SND_USE_CASE_DEV_HEADPHONES
.. _doxid-group__ucm_1gaf2c22989c5315abcee46713cde8693d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_HEADPHONES

Headphones Device

.. index:: pair: define; SND_USE_CASE_DEV_HEADSET
.. _doxid-group__ucm_1ga72c3300fac357a2e22b52afc13547ce0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_HEADSET

Headset Device

.. index:: pair: define; SND_USE_CASE_DEV_LINE
.. _doxid-group__ucm_1gaa5d03312d1990c0bd5c162f61fbfa4a0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_LINE

Line Device

.. index:: pair: define; SND_USE_CASE_DEV_NONE
.. _doxid-group__ucm_1gaa7abb8ce3d21b584c621869f7ebed3e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_NONE

None Device

.. index:: pair: define; SND_USE_CASE_DEV_SPDIF
.. _doxid-group__ucm_1ga7f7f45feb440a49be3be9e52da98b242:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_SPDIF

SPDIF Device

.. index:: pair: define; SND_USE_CASE_DEV_SPEAKER
.. _doxid-group__ucm_1ga515b2956d58485b27fb982965d067c55:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_DEV_SPEAKER

Speaker Device

.. index:: pair: define; SND_USE_CASE_MOD_CAPTURE_MUSIC
.. _doxid-group__ucm_1gad685f6b4dcb9e37f0b5a1160425aec23:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_CAPTURE_MUSIC

Capture Music Modifier

.. index:: pair: define; SND_USE_CASE_MOD_CAPTURE_VOICE
.. _doxid-group__ucm_1gaec6b78d147824af1474fc914770a834c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_CAPTURE_VOICE

Capture Voice Modifier

.. index:: pair: define; SND_USE_CASE_MOD_ECHO_REF
.. _doxid-group__ucm_1gae2a230a913142c17f30d7dc2ae416866:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_ECHO_REF

Echo Reference Modifier

.. index:: pair: define; SND_USE_CASE_MOD_PLAY_MUSIC
.. _doxid-group__ucm_1gadee4d4dce15624e282ab1960113caf8b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_PLAY_MUSIC

Play Music Modifier

.. index:: pair: define; SND_USE_CASE_MOD_PLAY_TONE
.. _doxid-group__ucm_1gaacc8e06e0c8fc0de5e26df6f20462484:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_PLAY_TONE

Play Tone Modifier

.. index:: pair: define; SND_USE_CASE_MOD_PLAY_VOICE
.. _doxid-group__ucm_1ga61c217f060e616d61a294ac5d5d2fac0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_MOD_PLAY_VOICE

Play Voice Modifier

.. index:: pair: define; SND_USE_CASE_TQ_MUSIC
.. _doxid-group__ucm_1ga64dd2e9f8e4e800effc02d895e1bfdbb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_TQ_MUSIC

TQ - Tone Quality

The interface allows clients to determine the audio TQ required for each use case verb and modifier. It's intended as an optional hint to the audio driver in order to lower power consumption.Music Tone Quality

.. index:: pair: define; SND_USE_CASE_TQ_TONES
.. _doxid-group__ucm_1ga022328b4bb0b0b14d358cb2155e5d184:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_TQ_TONES

Tones Tone Quality

.. index:: pair: define; SND_USE_CASE_TQ_VOICE
.. _doxid-group__ucm_1gaa822e565021887e26c0eaec2cee97bbd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_TQ_VOICE

Voice Tone Quality

.. index:: pair: define; SND_USE_CASE_VERB_ANALOG_RADIO
.. _doxid-group__ucm_1gab08fad02c1e8641016be957fc5ce3705:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_ANALOG_RADIO

FM Analog Radio Verb

.. index:: pair: define; SND_USE_CASE_VERB_DIGITAL_RADIO
.. _doxid-group__ucm_1gac1fc6fc3c4f08b4de9e622d05b591cb2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_DIGITAL_RADIO

FM Digital Radio Verb

.. index:: pair: define; SND_USE_CASE_VERB_HIFI
.. _doxid-group__ucm_1ga71b24a1fcc4ce2cee555520ca546b348:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_HIFI

HiFi Verb

.. index:: pair: define; SND_USE_CASE_VERB_HIFI_LOW_POWER
.. _doxid-group__ucm_1ga9a0739ade4ac574b31b4728c22280861:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_HIFI_LOW_POWER

HiFi Low Power Verb

.. index:: pair: define; SND_USE_CASE_VERB_INACTIVE
.. _doxid-group__ucm_1gaedcdfd09f499b753d8652772ef1a248f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_INACTIVE

Inactive Verb

.. index:: pair: define; SND_USE_CASE_VERB_IP_VOICECALL
.. _doxid-group__ucm_1ga938754af309628dfc8bafe28018b8aab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_IP_VOICECALL

Voice Call IP Verb

.. index:: pair: define; SND_USE_CASE_VERB_VOICE
.. _doxid-group__ucm_1gae496d33ac019caffae8dca584b04d09f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_VOICE

Voice Verb

.. index:: pair: define; SND_USE_CASE_VERB_VOICECALL
.. _doxid-group__ucm_1gaaa4aed51667887d194caae91362e8428:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_VOICECALL

Voice Call Verb

.. index:: pair: define; SND_USE_CASE_VERB_VOICE_LOW_POWER
.. _doxid-group__ucm_1ga64b61825903d5ce88d3f4cfb12c7bd00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define SND_USE_CASE_VERB_VOICE_LOW_POWER

Voice Low Power Verb

