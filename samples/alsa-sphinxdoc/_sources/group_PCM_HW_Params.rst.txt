.. index:: pair: group; Hardware Parameters
.. _doxid-group___p_c_m___h_w___params:

Hardware Parameters
===================

.. toctree::
	:hidden:

Overview
~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details. :ref:`More...<details-group___p_c_m___h_w___params>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	int
	:ref:`snd_pcm_hw_params_any<doxid-group___p_c_m___h_w___params_1ga6e2dd8efbb7a4084bd05e6cc458d84f7>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	);

	int
	:ref:`snd_pcm_hw_params_can_mmap_sample_resolution<doxid-group___p_c_m___h_w___params_1ga53b3b351bc5db48da18d5f36b98f79a9>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_double<doxid-group___p_c_m___h_w___params_1ga3bfe71142e72dffb274f8ba9ef7edeee>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_batch<doxid-group___p_c_m___h_w___params_1ga366395c87f811d8ab8df83dc8a8a8124>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_block_transfer<doxid-group___p_c_m___h_w___params_1gac511eb0d4db6f1e8303161486061fe14>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_monotonic<doxid-group___p_c_m___h_w___params_1ga7a129f7671fee8c0ced42d64a6c2379d>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_can_overrange<doxid-group___p_c_m___h_w___params_1gacb214bcb2af7462195da73b060206800>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_can_pause<doxid-group___p_c_m___h_w___params_1gaad4ba98b2f66baa5360b9a85f064a3e9>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_can_resume<doxid-group___p_c_m___h_w___params_1ga6b79539a34e6f51972f4c32b3296585a>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_half_duplex<doxid-group___p_c_m___h_w___params_1gabaf7b36cfb700973fe8d89971f0f967b>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_is_joint_duplex<doxid-group___p_c_m___h_w___params_1gae8768da025e34e3c3c6b5a5dfdcd2ad4>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_can_sync_start<doxid-group___p_c_m___h_w___params_1gafcea258e7d9b6094350699367f2ef9b5>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_can_disable_period_wakeup<doxid-group___p_c_m___h_w___params_1gad0f8922537619c70e41bf07eb740e54f>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_supports_audio_wallclock_ts<doxid-group___p_c_m___h_w___params_1gafd935dde74ea0da6824b204eb78eb620>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_supports_audio_ts_type<doxid-group___p_c_m___h_w___params_1gaa2071d14dbb09232ecddf2e236bdfdf7>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		int type
	);

	int
	:ref:`snd_pcm_hw_params_get_rate_numden<doxid-group___p_c_m___h_w___params_1ga556ddf9731e184cb635994f739a6efe3>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* rate_num,
		unsigned int* rate_den
	);

	int
	:ref:`snd_pcm_hw_params_get_sbits<doxid-group___p_c_m___h_w___params_1ga8bb1180b62a4225f0e094b95ac5d3674>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	int
	:ref:`snd_pcm_hw_params_get_fifo_size<doxid-group___p_c_m___h_w___params_1ga12fe3e1ca110fd61cff685890366c743>`(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params);

	size_t
	:ref:`snd_pcm_hw_params_sizeof<doxid-group___p_c_m___h_w___params_1ga092e6c110ad7b4e52855b9522e437ed9>`(void);

	int
	:ref:`snd_pcm_hw_params_malloc<doxid-group___p_c_m___h_w___params_1ga6e53d09a9c7cc3f2a692c0af99886237>`(:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`** ptr);

	void
	:ref:`snd_pcm_hw_params_free<doxid-group___p_c_m___h_w___params_1ga8c094063e7a13be0b9a043be8616a181>`(:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* obj);

	void
	:ref:`snd_pcm_hw_params_copy<doxid-group___p_c_m___h_w___params_1ga9bcedf4bb4b21527a584846a5986a1f4>`(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* dst,
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* src
	);

	int
	:ref:`snd_pcm_hw_params_get_access<doxid-group___p_c_m___h_w___params_1ga752e62bb419c7ebe151f8023f5eed1f9>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	);

	int
	:ref:`snd_pcm_hw_params_test_access<doxid-group___p_c_m___h_w___params_1gab56553ff541e6e9ddae397f6faba840f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` _access
	);

	int
	:ref:`snd_pcm_hw_params_set_access<doxid-group___p_c_m___h_w___params_1ga4c8f1c632931923531ca68ee048a8de8>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` _access
	);

	int
	:ref:`snd_pcm_hw_params_set_access_first<doxid-group___p_c_m___h_w___params_1ga2fd545bdf469d54cff6a038e31ce56ce>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	);

	int
	:ref:`snd_pcm_hw_params_set_access_last<doxid-group___p_c_m___h_w___params_1ga172b949e37f28da5a102e56b04f69be3>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	);

	int
	:ref:`snd_pcm_hw_params_set_access_mask<doxid-group___p_c_m___h_w___params_1gad54808a277db646cbc21be07efc31000>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask
	);

	int
	:ref:`snd_pcm_hw_params_get_access_mask<doxid-group___p_c_m___h_w___params_1ga20079e218c9307e4e683f0743f3af38c>`(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask
	);

	int
	:ref:`snd_pcm_hw_params_get_format<doxid-group___p_c_m___h_w___params_1ga66b28dd4f26d603e923a3577d1a2e98f>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* val
	);

	int
	:ref:`snd_pcm_hw_params_test_format<doxid-group___p_c_m___h_w___params_1ga64e1a5143bbd72c8f5cffca828d506ef>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>` val
	);

	int
	:ref:`snd_pcm_hw_params_set_format<doxid-group___p_c_m___h_w___params_1ga6014e0e1ec7934f8c745290e83e59199>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>` val
	);

	int
	:ref:`snd_pcm_hw_params_set_format_first<doxid-group___p_c_m___h_w___params_1ga762ee356cc687c81c206df3c18245e4a>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* format
	);

	int
	:ref:`snd_pcm_hw_params_set_format_last<doxid-group___p_c_m___h_w___params_1ga4a643db96742a3da0287eda6cc3eafa2>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* format
	);

	int
	:ref:`snd_pcm_hw_params_set_format_mask<doxid-group___p_c_m___h_w___params_1ga33261bd41636eb28fd42493e4ea4efba>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_mask_t<doxid-group___p_c_m_1ga0936aa9ac0051a3611583a2740915545>`* mask
	);

	void
	:ref:`snd_pcm_hw_params_get_format_mask<doxid-group___p_c_m___h_w___params_1ga43bdf7596f8722fb6b8edbeaf1aebd90>`(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_mask_t<doxid-group___p_c_m_1ga0936aa9ac0051a3611583a2740915545>`* mask
	);

	int
	:ref:`snd_pcm_hw_params_get_subformat<doxid-group___p_c_m___h_w___params_1ga77a934515c24e17cfb0af21a8b2e0690>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	);

	int
	:ref:`snd_pcm_hw_params_test_subformat<doxid-group___p_c_m___h_w___params_1gaf5062e723956551092db201f34c99495>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>` subformat
	);

	int
	:ref:`snd_pcm_hw_params_set_subformat<doxid-group___p_c_m___h_w___params_1ga08dfde7d1fc6a0a56609f3ec40ed26e2>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>` subformat
	);

	int
	:ref:`snd_pcm_hw_params_set_subformat_first<doxid-group___p_c_m___h_w___params_1ga12b745bdf119127f2216d61a2bd28688>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	);

	int
	:ref:`snd_pcm_hw_params_set_subformat_last<doxid-group___p_c_m___h_w___params_1gab1a02fff3ef394da274d2b2652df856d>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	);

	int
	:ref:`snd_pcm_hw_params_set_subformat_mask<doxid-group___p_c_m___h_w___params_1ga3ebc4625b258df82164dc9220a9f9117>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_mask_t<doxid-group___p_c_m_1ga891b054202089747199bc3348b9d9630>`* mask
	);

	void
	:ref:`snd_pcm_hw_params_get_subformat_mask<doxid-group___p_c_m___h_w___params_1gaafee81722f5bcba41e16e4c7a77059c2>`(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_mask_t<doxid-group___p_c_m_1ga891b054202089747199bc3348b9d9630>`* mask
	);

	int
	:ref:`snd_pcm_hw_params_get_channels<doxid-group___p_c_m___h_w___params_1gae27e04757272070197e00c0dfec5dc97>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_get_channels_min<doxid-group___p_c_m___h_w___params_1ga93326349bbb91840a3e0bafef0390cb1>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_get_channels_max<doxid-group___p_c_m___h_w___params_1gac6c37a5da7dc8cb19fdd8e9cf1bd673d>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_test_channels<doxid-group___p_c_m___h_w___params_1ga8fabc38d770ad922e5b4e0338e7fb242>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels<doxid-group___p_c_m___h_w___params_1ga3a5b2a05c5d9869cc743dac71c0d270a>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_min<doxid-group___p_c_m___h_w___params_1ga155b8ac646b90560cd00f195086ff464>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_max<doxid-group___p_c_m___h_w___params_1ga739d51d0822f182a6583a5436f410b34>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_minmax<doxid-group___p_c_m___h_w___params_1ga24e507c965aff4984aa4969cc896e830>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		unsigned int* max
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_near<doxid-group___p_c_m___h_w___params_1ga59aa9e1a02f4ce616fe92c605a833f8f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_first<doxid-group___p_c_m___h_w___params_1gae08e3371d3d2e8e512537630a59f9a55>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_channels_last<doxid-group___p_c_m___h_w___params_1ga54846380c1dc99ee9124d45232931ebd>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_get_rate<doxid-group___p_c_m___h_w___params_1ga4279c4b45a15f7e282e436e75d6ba13a>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_rate_min<doxid-group___p_c_m___h_w___params_1gaf7801fdf88fa51ca96fe97d3211db3f7>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_rate_max<doxid-group___p_c_m___h_w___params_1ga6770c2b988c8dc91eb51893cc145aa2c>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_test_rate<doxid-group___p_c_m___h_w___params_1ga5f09b37dd6f4c213029f8f39e00137a3>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate<doxid-group___p_c_m___h_w___params_1ga29cd2571738847813af1489043d1af5a>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_min<doxid-group___p_c_m___h_w___params_1ga89374ae29dd924915ada6f26cd9a3292>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_max<doxid-group___p_c_m___h_w___params_1ga8701776750b18b2dad19a4115791c2f0>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_minmax<doxid-group___p_c_m___h_w___params_1ga03795a2ee03be25a30185b26a1bc3e21>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_near<doxid-group___p_c_m___h_w___params_1ga39124280d06ce63092a77e3f25ddd6ee>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_first<doxid-group___p_c_m___h_w___params_1gac0ded856c76459608fdd5ea0f254349e>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_last<doxid-group___p_c_m___h_w___params_1ga5d90a5204061482be45ac4e0d2b10e49>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_rate_resample<doxid-group___p_c_m___h_w___params_1ga82eecc0e27a94ce0caa195cc3765536c>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	);

	int
	:ref:`snd_pcm_hw_params_get_rate_resample<doxid-group___p_c_m___h_w___params_1gacaa53b05cd5e4f55eeb4d5ea64129c21>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_export_buffer<doxid-group___p_c_m___h_w___params_1ga2c0b6b22bbeed5da06293608f3be844d>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	);

	int
	:ref:`snd_pcm_hw_params_get_export_buffer<doxid-group___p_c_m___h_w___params_1gafec078cf053a87339ba91c0f605dca54>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_set_period_wakeup<doxid-group___p_c_m___h_w___params_1gac2761ded0a51cabc953beac44f65972b>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	);

	int
	:ref:`snd_pcm_hw_params_get_period_wakeup<doxid-group___p_c_m___h_w___params_1ga426a657640410a4c6a652ab15eb57acc>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	);

	int
	:ref:`snd_pcm_hw_params_get_period_time<doxid-group___p_c_m___h_w___params_1ga71f5d43bf63dc7292b8b58f17acccf89>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_period_time_min<doxid-group___p_c_m___h_w___params_1gae68d4b168ef5d40f644a1a4ed854689f>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_period_time_max<doxid-group___p_c_m___h_w___params_1ga74b510f4958e90a83a631a1eeedf13e0>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_test_period_time<doxid-group___p_c_m___h_w___params_1gaf1f6452ad189be5c4e1ab3bd86f2f6d2>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time<doxid-group___p_c_m___h_w___params_1gaa2bc2a32d3971521064741a30e10c92f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_min<doxid-group___p_c_m___h_w___params_1ga2dc9fcdb1b30126a20d96a65c7826d9b>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_max<doxid-group___p_c_m___h_w___params_1gaad53e3af1f1fe522c3d902f5403954d1>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_minmax<doxid-group___p_c_m___h_w___params_1ga993e05e43a31a6151427ba1f793c0b3a>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_near<doxid-group___p_c_m___h_w___params_1gaa22d4f917c300b0c1f47b348c23705a4>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_first<doxid-group___p_c_m___h_w___params_1ga478e50e1fa7395af70100b906c31cb67>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_time_last<doxid-group___p_c_m___h_w___params_1ga2d48b4bee369912b0fc9b245d6c7a52d>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_period_size<doxid-group___p_c_m___h_w___params_1gaba48ea189171536f9793e0d99e6db5e0>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_period_size_min<doxid-group___p_c_m___h_w___params_1ga3f6fe37605b54d0a25e8bf1d10f71ae4>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_period_size_max<doxid-group___p_c_m___h_w___params_1gab5c16621ae697e5ee6f442ec7b7062c5>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_test_period_size<doxid-group___p_c_m___h_w___params_1gabc8712dab6cb135176de77f374d7ee17>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size<doxid-group___p_c_m___h_w___params_1ga874c977dd9aac275c87a7b1c33a0dec0>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_min<doxid-group___p_c_m___h_w___params_1ga58e0468994d935f08080d9654f1b48b8>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_max<doxid-group___p_c_m___h_w___params_1ga909f442c3d8c20b79de2edf6cc5ded41>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_minmax<doxid-group___p_c_m___h_w___params_1ga33c901f8364cb2533d6cdeba732e0e4e>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* min,
		int* mindir,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* max,
		int* maxdir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_near<doxid-group___p_c_m___h_w___params_1ga9162045265f283c532634506456cab09>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_first<doxid-group___p_c_m___h_w___params_1gaf74bbb66a71ece8260be20502822335b>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_last<doxid-group___p_c_m___h_w___params_1gad0bce0ad23b3b708858bb20df81e09a2>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_period_size_integer<doxid-group___p_c_m___h_w___params_1ga13bc85ca5fe34b19112579a7e27cf41a>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	);

	int
	:ref:`snd_pcm_hw_params_get_periods<doxid-group___p_c_m___h_w___params_1ga7242d7045ae23a9ae736c191030c25e8>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_periods_min<doxid-group___p_c_m___h_w___params_1ga17f3826360b0fe1f47c696388d25ac93>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_periods_max<doxid-group___p_c_m___h_w___params_1ga60417687267cd6ddc56a9c15179fe275>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_test_periods<doxid-group___p_c_m___h_w___params_1ga0de7350f433935a995d439fe38f55088>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods<doxid-group___p_c_m___h_w___params_1ga472aa3f2d8ce4040caa874fe60aba961>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_min<doxid-group___p_c_m___h_w___params_1gaa2642b54ed1c2e26e595ecf3d5b29edc>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_max<doxid-group___p_c_m___h_w___params_1ga636d1d9a6333fb2acc8a6e84391ea0a6>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_minmax<doxid-group___p_c_m___h_w___params_1gaf638d94e53872415d3bb6d9169104891>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_near<doxid-group___p_c_m___h_w___params_1ga2fadb73803f58b900ac34846c14894ca>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_first<doxid-group___p_c_m___h_w___params_1gaa8fbd81ce54fac30f60768fb36210a6f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_last<doxid-group___p_c_m___h_w___params_1ga1366dd00b920ef459d2dbf8a64408725>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_periods_integer<doxid-group___p_c_m___h_w___params_1gab7356d30758dfcf11ff5874fd033913b>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_time<doxid-group___p_c_m___h_w___params_1gabdea994550dbf7ab176e3c90baa3a30b>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_time_min<doxid-group___p_c_m___h_w___params_1gaa18c9999c27632f6c47e163b6af17fa9>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_time_max<doxid-group___p_c_m___h_w___params_1ga67a33176f4f05231863b37b09527c0e3>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_test_buffer_time<doxid-group___p_c_m___h_w___params_1ga9b6bf73e2a0b7f887f3d7d85a988eb7e>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time<doxid-group___p_c_m___h_w___params_1gacad42b93e31bca4c9b4074d6ec236d99>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_min<doxid-group___p_c_m___h_w___params_1ga2a7cb8c29b2fb75b615366dd40a7dc13>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_max<doxid-group___p_c_m___h_w___params_1gab80680ff70b72435addde58e88fc1d7b>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_minmax<doxid-group___p_c_m___h_w___params_1ga84964e55717a7db70b55f320b56f343f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_near<doxid-group___p_c_m___h_w___params_1ga3bc1b188576d6d2daae9c56024813d10>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_first<doxid-group___p_c_m___h_w___params_1ga6a29e5f80671ca89d0c185416b5a6c2c>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_time_last<doxid-group___p_c_m___h_w___params_1gaec8788f14a0c5452dada23a49cdd4b71>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_size<doxid-group___p_c_m___h_w___params_1gab6556fcaaf926360d2064044a6f6cfb4>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_size_min<doxid-group___p_c_m___h_w___params_1ga182adecca0ad204a34b27cdaa9d4f672>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_get_buffer_size_max<doxid-group___p_c_m___h_w___params_1ga3caf61ab086028067b602d48182df708>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_test_buffer_size<doxid-group___p_c_m___h_w___params_1ga3ce81a7fe9f677849881f1cfd3b5cb7e>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size<doxid-group___p_c_m___h_w___params_1ga828cf9e11fe84137c2c8d4938a6fca7f>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_min<doxid-group___p_c_m___h_w___params_1gacc0d26a23389470eae502a3c9f4a2980>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_max<doxid-group___p_c_m___h_w___params_1gac36099175c6a85db4a1e51053d5708af>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_minmax<doxid-group___p_c_m___h_w___params_1gaec830be678524b0a6a173896bc9d2c67>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* min,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* max
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_near<doxid-group___p_c_m___h_w___params_1ga2c00cb635d374030595dbc27b7a983a7>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_first<doxid-group___p_c_m___h_w___params_1gaca09ba489988fe957fde43cb9dca56a2>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_set_buffer_size_last<doxid-group___p_c_m___h_w___params_1gade5604a3fe1de55c76942ee4f4e41219>`(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	int
	:ref:`snd_pcm_hw_params_get_min_align<doxid-group___p_c_m___h_w___params_1ga254712953cb8abe8b1d8478233863217>`(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	);

	// macros

	#define :ref:`snd_pcm_hw_params_alloca<doxid-group___p_c_m___h_w___params_1ga06b83cb9a788f99b7b09b570b4355cee>`(ptr)

.. _details-group___p_c_m___h_w___params:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details.

Global Functions
----------------

.. index:: pair: function; snd_pcm_hw_params_any
.. _doxid-group___p_c_m___h_w___params_1ga6e2dd8efbb7a4084bd05e6cc458d84f7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_any(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	)

Fill params with a full configuration space for a PCM.

The configuration space will be filled with all possible ranges for the PCM device.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

.. index:: pair: function; snd_pcm_hw_params_can_mmap_sample_resolution
.. _doxid-group___p_c_m___h_w___params_1ga53b3b351bc5db48da18d5f36b98f79a9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_mmap_sample_resolution(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports sample-resolution mmap for given configuration.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support sample-resolution mmap

	*
		- 1

		- Hardware supports sample-resolution mmap

.. index:: pair: function; snd_pcm_hw_params_is_double
.. _doxid-group___p_c_m___h_w___params_1ga3bfe71142e72dffb274f8ba9ef7edeee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_double(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware does double buffering for start/stop for given configuration.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't do double buffering for start/stop

	*
		- 1

		- Hardware does double buffering for start/stop

.. index:: pair: function; snd_pcm_hw_params_is_batch
.. _doxid-group___p_c_m___h_w___params_1ga366395c87f811d8ab8df83dc8a8a8124:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_batch(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware does double buffering for data transfers for given configuration.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't do double buffering for data transfers

	*
		- 1

		- Hardware does double buffering for data transfers

.. index:: pair: function; snd_pcm_hw_params_is_block_transfer
.. _doxid-group___p_c_m___h_w___params_1gac511eb0d4db6f1e8303161486061fe14:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_block_transfer(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware does block transfers for samples for given configuration.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't block transfers

	*
		- 1

		- Hardware does block transfers

.. index:: pair: function; snd_pcm_hw_params_is_monotonic
.. _doxid-group___p_c_m___h_w___params_1ga7a129f7671fee8c0ced42d64a6c2379d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_monotonic(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if timestamps are monotonic for given configuration.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Device doesn't do monotomic timestamps

	*
		- 1

		- Device does monotonic timestamps

.. index:: pair: function; snd_pcm_hw_params_can_overrange
.. _doxid-group___p_c_m___h_w___params_1gacb214bcb2af7462195da73b060206800:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_overrange(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports overrange detection.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support overrange detection

	*
		- 1

		- Hardware supports overrange detection

.. index:: pair: function; snd_pcm_hw_params_can_pause
.. _doxid-group___p_c_m___h_w___params_1gaad4ba98b2f66baa5360b9a85f064a3e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_pause(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports pause.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support pause

	*
		- 1

		- Hardware supports pause

.. index:: pair: function; snd_pcm_hw_params_can_resume
.. _doxid-group___p_c_m___h_w___params_1ga6b79539a34e6f51972f4c32b3296585a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_resume(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports resume.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support resume

	*
		- 1

		- Hardware supports resume

.. index:: pair: function; snd_pcm_hw_params_is_half_duplex
.. _doxid-group___p_c_m___h_w___params_1gabaf7b36cfb700973fe8d89971f0f967b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_half_duplex(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware does half-duplex only.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't do half-duplex

	*
		- 1

		- Hardware does half-duplex

.. index:: pair: function; snd_pcm_hw_params_is_joint_duplex
.. _doxid-group___p_c_m___h_w___params_1gae8768da025e34e3c3c6b5a5dfdcd2ad4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_is_joint_duplex(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware does joint-duplex (playback and capture are somewhat correlated)

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't do joint-duplex

	*
		- 1

		- Hardware does joint-duplex

.. index:: pair: function; snd_pcm_hw_params_can_sync_start
.. _doxid-group___p_c_m___h_w___params_1gafcea258e7d9b6094350699367f2ef9b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_sync_start(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports synchronized start with sample resolution.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support synchronized start

	*
		- 1

		- Hardware supports synchronized start

.. index:: pair: function; snd_pcm_hw_params_can_disable_period_wakeup
.. _doxid-group___p_c_m___h_w___params_1gad0f8922537619c70e41bf07eb740e54f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_can_disable_period_wakeup(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware can disable period wakeups.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware cannot disable period wakeups

	*
		- 1

		- Hardware can disable period wakeups

.. index:: pair: function; snd_pcm_hw_params_supports_audio_wallclock_ts
.. _doxid-group___p_c_m___h_w___params_1gafd935dde74ea0da6824b204eb78eb620:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_supports_audio_wallclock_ts(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Check if hardware supports audio wallclock timestamps.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- 0

		- Hardware doesn't support audio wallclock timestamps

	*
		- 1

		- Hardware supports audio wallclock timestamps

.. index:: pair: function; snd_pcm_hw_params_supports_audio_ts_type
.. _doxid-group___p_c_m___h_w___params_1gaa2071d14dbb09232ecddf2e236bdfdf7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_supports_audio_ts_type(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		int type
	)

Check if hardware supports type of audio timestamps.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- type

		- Audio timestamp type

	*
		- 0

		- Hardware doesn't support type of audio timestamps

	*
		- 1

		- Hardware supports type of audio timestamps

.. index:: pair: function; snd_pcm_hw_params_get_rate_numden
.. _doxid-group___p_c_m___h_w___params_1ga556ddf9731e184cb635994f739a6efe3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_rate_numden(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* rate_num,
		unsigned int* rate_den
	)

Get rate exact info from a configuration space.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- rate_num

		- Pointer to returned rate numerator

	*
		- rate_den

		- Pointer to returned rate denominator



.. rubric:: Returns:

0 otherwise a negative error code if the info is not available

.. index:: pair: function; snd_pcm_hw_params_get_sbits
.. _doxid-group___p_c_m___h_w___params_1ga8bb1180b62a4225f0e094b95ac5d3674:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_sbits(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Get sample resolution info from a configuration space.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space



.. rubric:: Returns:

signification bits in sample otherwise a negative error code if the info is not available

.. index:: pair: function; snd_pcm_hw_params_get_fifo_size
.. _doxid-group___p_c_m___h_w___params_1ga12fe3e1ca110fd61cff685890366c743:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_fifo_size(const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params)

Get hardware FIFO size info from a configuration space.

This function should only be called when the configuration space contains a single configuration. Call :ref:`snd_pcm_hw_params <doxid-group___p_c_m_1ga1ca0dc120a484965e26cabf966502330>` to choose a single configuration from the configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space



.. rubric:: Returns:

FIFO size in frames otherwise a negative error code if the info is not available

.. index:: pair: function; snd_pcm_hw_params_sizeof
.. _doxid-group___p_c_m___h_w___params_1ga092e6c110ad7b4e52855b9522e437ed9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_pcm_hw_params_sizeof(void)

get size of :ref:`snd_pcm_hw_params_t <doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_pcm_hw_params_malloc
.. _doxid-group___p_c_m___h_w___params_1ga6e53d09a9c7cc3f2a692c0af99886237:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_malloc(:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`** ptr)

allocate an invalid :ref:`snd_pcm_hw_params_t <doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_pcm_hw_params_free
.. _doxid-group___p_c_m___h_w___params_1ga8c094063e7a13be0b9a043be8616a181:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_hw_params_free(:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* obj)

frees a previously allocated :ref:`snd_pcm_hw_params_t <doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_pcm_hw_params_copy
.. _doxid-group___p_c_m___h_w___params_1ga9bcedf4bb4b21527a584846a5986a1f4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_hw_params_copy(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* dst,
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* src
	)

copy one :ref:`snd_pcm_hw_params_t <doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_pcm_hw_params_get_access
.. _doxid-group___p_c_m___h_w___params_1ga752e62bb419c7ebe151f8023f5eed1f9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_access(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	)

Extract access type from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- access

		- Returned value



.. rubric:: Returns:

access type otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_test_access
.. _doxid-group___p_c_m___h_w___params_1gab56553ff541e6e9ddae397f6faba840f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_access(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` _access
	)

Verify if an access type is available inside a configuration space for a PCM.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- access

		- access type



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_access
.. _doxid-group___p_c_m___h_w___params_1ga4c8f1c632931923531ca68ee048a8de8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_access(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` _access
	)

Restrict a configuration space to contain only one access type.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- access

		- access type



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_access_first
.. _doxid-group___p_c_m___h_w___params_1ga2fd545bdf469d54cff6a038e31ce56ce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_access_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	)

Restrict a configuration space to contain only its first access type.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- access

		- Returned first access type



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_access_last
.. _doxid-group___p_c_m___h_w___params_1ga172b949e37f28da5a102e56b04f69be3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_access_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>`* _access
	)

Restrict a configuration space to contain only its last access type.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- access

		- Returned last access type



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_access_mask
.. _doxid-group___p_c_m___h_w___params_1gad54808a277db646cbc21be07efc31000:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_access_mask(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask
	)

Restrict a configuration space to contain only a set of access types.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- mask

		- Access mask



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_access_mask
.. _doxid-group___p_c_m___h_w___params_1ga20079e218c9307e4e683f0743f3af38c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_access_mask(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask
	)

Get access mask from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- mask

		- Returned Access mask

.. index:: pair: function; snd_pcm_hw_params_get_format
.. _doxid-group___p_c_m___h_w___params_1ga66b28dd4f26d603e923a3577d1a2e98f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_format(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* val
	)

Extract format from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- format

		- returned format



.. rubric:: Returns:

format otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_test_format
.. _doxid-group___p_c_m___h_w___params_1ga64e1a5143bbd72c8f5cffca828d506ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_format(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>` val
	)

Verify if a format is available inside a configuration space for a PCM.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- format

		- format



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_format
.. _doxid-group___p_c_m___h_w___params_1ga6014e0e1ec7934f8c745290e83e59199:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_format(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>` val
	)

Restrict a configuration space to contain only one format.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- format

		- format



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_format_first
.. _doxid-group___p_c_m___h_w___params_1ga762ee356cc687c81c206df3c18245e4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_format_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* format
	)

Restrict a configuration space to contain only its first format.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- format

		- Returned first format



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_format_last
.. _doxid-group___p_c_m___h_w___params_1ga4a643db96742a3da0287eda6cc3eafa2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_format_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_t<doxid-group___p_c_m_1gaa14b7f26877a812acbb39811364177f8>`* format
	)

Restrict a configuration space to contain only its last format.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- format

		- Returned last format



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_format_mask
.. _doxid-group___p_c_m___h_w___params_1ga33261bd41636eb28fd42493e4ea4efba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_format_mask(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_mask_t<doxid-group___p_c_m_1ga0936aa9ac0051a3611583a2740915545>`* mask
	)

Restrict a configuration space to contain only a set of formats.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- mask

		- Format mask



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_format_mask
.. _doxid-group___p_c_m___h_w___params_1ga43bdf7596f8722fb6b8edbeaf1aebd90:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_hw_params_get_format_mask(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_format_mask_t<doxid-group___p_c_m_1ga0936aa9ac0051a3611583a2740915545>`* mask
	)

Get format mask from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- mask

		- Returned Format mask

.. index:: pair: function; snd_pcm_hw_params_get_subformat
.. _doxid-group___p_c_m___h_w___params_1ga77a934515c24e17cfb0af21a8b2e0690:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_subformat(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	)

Extract subformat from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- subformat

		- Returned subformat value



.. rubric:: Returns:

subformat otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_test_subformat
.. _doxid-group___p_c_m___h_w___params_1gaf5062e723956551092db201f34c99495:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_subformat(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>` subformat
	)

Verify if a subformat is available inside a configuration space for a PCM.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- subformat

		- subformat value



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_subformat
.. _doxid-group___p_c_m___h_w___params_1ga08dfde7d1fc6a0a56609f3ec40ed26e2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_subformat(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>` subformat
	)

Restrict a configuration space to contain only one subformat.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- subformat

		- subformat value



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_subformat_first
.. _doxid-group___p_c_m___h_w___params_1ga12b745bdf119127f2216d61a2bd28688:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_subformat_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	)

Restrict a configuration space to contain only its first subformat.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- subformat

		- Returned subformat



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_subformat_last
.. _doxid-group___p_c_m___h_w___params_1gab1a02fff3ef394da274d2b2652df856d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_subformat_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_t<doxid-group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7>`* subformat
	)

Restrict a configuration space to contain only its last subformat.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- subformat

		- Returned subformat



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_subformat_mask
.. _doxid-group___p_c_m___h_w___params_1ga3ebc4625b258df82164dc9220a9f9117:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_subformat_mask(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_mask_t<doxid-group___p_c_m_1ga891b054202089747199bc3348b9d9630>`* mask
	)

Restrict a configuration space to contain only a set of subformats.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- mask

		- Subformat mask



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_subformat_mask
.. _doxid-group___p_c_m___h_w___params_1gaafee81722f5bcba41e16e4c7a77059c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_hw_params_get_subformat_mask(
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_subformat_mask_t<doxid-group___p_c_m_1ga891b054202089747199bc3348b9d9630>`* mask
	)

Get subformat mask from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- mask

		- Returned Subformat mask

.. index:: pair: function; snd_pcm_hw_params_get_channels
.. _doxid-group___p_c_m___h_w___params_1gae27e04757272070197e00c0dfec5dc97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_channels(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract channels from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned channels count



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_channels_min
.. _doxid-group___p_c_m___h_w___params_1ga93326349bbb91840a3e0bafef0390cb1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_channels_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract minimum channels count from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- minimum channels count



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_channels_max
.. _doxid-group___p_c_m___h_w___params_1gac6c37a5da7dc8cb19fdd8e9cf1bd673d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_channels_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract maximum channels count from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- maximum channels count



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_channels
.. _doxid-group___p_c_m___h_w___params_1ga8fabc38d770ad922e5b4e0338e7fb242:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_channels(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	)

Verify if a channels count is available inside a configuration space for a PCM.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- channels count



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_channels
.. _doxid-group___p_c_m___h_w___params_1ga3a5b2a05c5d9869cc743dac71c0d270a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	)

Restrict a configuration space to contain only one channels count.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- channels count



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_channels_min
.. _doxid-group___p_c_m___h_w___params_1ga155b8ac646b90560cd00f195086ff464:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Restrict a configuration space with a minimum channels count.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- minimum channels count (on return filled with actual minimum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_channels_max
.. _doxid-group___p_c_m___h_w___params_1ga739d51d0822f182a6583a5436f410b34:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Restrict a configuration space with a maximum channels count.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- maximum channels count (on return filled with actual maximum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_channels_minmax
.. _doxid-group___p_c_m___h_w___params_1ga24e507c965aff4984aa4969cc896e830:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		unsigned int* max
	)

Restrict a configuration space to have channels counts in a given range.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- minimum channels count (on return filled with actual minimum)

	*
		- max

		- maximum channels count (on return filled with actual maximum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_channels_near
.. _doxid-group___p_c_m___h_w___params_1ga59aa9e1a02f4ce616fe92c605a833f8f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Restrict a configuration space to have channels count nearest to a target.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- target channels count, returned chosen channels count



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_channels_first
.. _doxid-group___p_c_m___h_w___params_1gae08e3371d3d2e8e512537630a59f9a55:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Restrict a configuration space to contain only its minimum channels count.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- minimum channels count



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_channels_last
.. _doxid-group___p_c_m___h_w___params_1ga54846380c1dc99ee9124d45232931ebd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_channels_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Restrict a configuration space to contain only its maximum channels count.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- maximum channels count



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_rate
.. _doxid-group___p_c_m___h_w___params_1ga4279c4b45a15f7e282e436e75d6ba13a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_rate(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract rate from a configuration space.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_rate_min
.. _doxid-group___p_c_m___h_w___params_1gaf7801fdf88fa51ca96fe97d3211db3f7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_rate_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract minimum rate from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate minimum rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_rate_max
.. _doxid-group___p_c_m___h_w___params_1ga6770c2b988c8dc91eb51893cc145aa2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_rate_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract maximum rate from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate maximum rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_rate
.. _doxid-group___p_c_m___h_w___params_1ga5f09b37dd6f4c213029f8f39e00137a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_rate(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Verify if a rate is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_rate
.. _doxid-group___p_c_m___h_w___params_1ga29cd2571738847813af1489043d1af5a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Restrict a configuration space to contain only one rate.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_rate_min
.. _doxid-group___p_c_m___h_w___params_1ga89374ae29dd924915ada6f26cd9a3292:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a minimum rate.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum rate (on return filled with actual minimum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_rate_max
.. _doxid-group___p_c_m___h_w___params_1ga8701776750b18b2dad19a4115791c2f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a maximum rate.

Wanted/actual exact maximum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum rate (on return filled with actual maximum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_rate_minmax
.. _doxid-group___p_c_m___h_w___params_1ga03795a2ee03be25a30185b26a1bc3e21:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	)

Restrict a configuration space to have rates in a given range.

Wanted/actual exact min/max is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum rate (on return filled with actual minimum)

	*
		- mindir

		- Sub unit direction for minimum (on return filled with actual direction)

	*
		- max

		- approximate maximum rate (on return filled with actual maximum)

	*
		- maxdir

		- Sub unit direction for maximum (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_rate_near
.. _doxid-group___p_c_m___h_w___params_1ga39124280d06ce63092a77e3f25ddd6ee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to have rate nearest to a target.

target/chosen exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target rate / returned approximate set rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_rate_first
.. _doxid-group___p_c_m___h_w___params_1gac0ded856c76459608fdd5ea0f254349e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its minimum rate.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned minimum approximate rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_rate_last
.. _doxid-group___p_c_m___h_w___params_1ga5d90a5204061482be45ac4e0d2b10e49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its maximum rate.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned maximum approximate rate

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_rate_resample
.. _doxid-group___p_c_m___h_w___params_1ga82eecc0e27a94ce0caa195cc3765536c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_rate_resample(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	)

Restrict a configuration space to contain only real hardware rates.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disable, 1 = enable (default) rate resampling



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_rate_resample
.. _doxid-group___p_c_m___h_w___params_1gacaa53b05cd5e4f55eeb4d5ea64129c21:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_rate_resample(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract resample state from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disable, 1 = enable rate resampling



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_export_buffer
.. _doxid-group___p_c_m___h_w___params_1ga2c0b6b22bbeed5da06293608f3be844d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_export_buffer(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	)

Restrict a configuration space to allow the buffer to be accessible from outside.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disable, 1 = enable (default) exporting buffer



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_export_buffer
.. _doxid-group___p_c_m___h_w___params_1gafec078cf053a87339ba91c0f605dca54:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_export_buffer(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract buffer accessibility from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disable, 1 = enable exporting buffer



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_period_wakeup
.. _doxid-group___p_c_m___h_w___params_1gac2761ded0a51cabc953beac44f65972b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_wakeup(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val
	)

Restrict a configuration space to settings without period wakeups.

This function must be called only on devices where non-blocking mode is enabled.

To check whether the hardware does support disabling period wakeups, call :ref:`snd_pcm_hw_params_can_disable_period_wakeup() <doxid-group___p_c_m___h_w___params_1gad0f8922537619c70e41bf07eb740e54f>`. If the hardware does not support this mode, standard period wakeups will be generated.

Even with disabled period wakeups, the period size/time/count parameters are valid; it is suggested to use :ref:`snd_pcm_hw_params_set_period_size_last() <doxid-group___p_c_m___h_w___params_1gad0bce0ad23b3b708858bb20df81e09a2>`.

When period wakeups are disabled, the application must not use any functions that could block on this device. The use of poll should be limited to error cases. The application needs to use an external event or a timer to check the state of the ring buffer and refill it apropriately.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disable, 1 = enable (default) period wakeup



.. rubric:: Returns:

Zero on success, otherwise a negative error code.

.. index:: pair: function; snd_pcm_hw_params_get_period_wakeup
.. _doxid-group___p_c_m___h_w___params_1ga426a657640410a4c6a652ab15eb57acc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_wakeup(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val
	)

Extract period wakeup flag from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- 0 = disabled, 1 = enabled period wakeups



.. rubric:: Returns:

Zero on success, otherwise a negative error code.

.. index:: pair: function; snd_pcm_hw_params_get_period_time
.. _doxid-group___p_c_m___h_w___params_1ga71f5d43bf63dc7292b8b58f17acccf89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_time(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract period time from a configuration space.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_period_time_min
.. _doxid-group___p_c_m___h_w___params_1gae68d4b168ef5d40f644a1a4ed854689f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_time_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract minimum period time from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_period_time_max
.. _doxid-group___p_c_m___h_w___params_1ga74b510f4958e90a83a631a1eeedf13e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_time_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract maximum period time from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_period_time
.. _doxid-group___p_c_m___h_w___params_1gaf1f6452ad189be5c4e1ab3bd86f2f6d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_period_time(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Verify if a period time is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_period_time
.. _doxid-group___p_c_m___h_w___params_1gaa2bc2a32d3971521064741a30e10c92f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Restrict a configuration space to contain only one period time.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_time_min
.. _doxid-group___p_c_m___h_w___params_1ga2dc9fcdb1b30126a20d96a65c7826d9b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a minimum period time.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum period duration in us (on return filled with actual minimum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_time_max
.. _doxid-group___p_c_m___h_w___params_1gaad53e3af1f1fe522c3d902f5403954d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a maximum period time.

Wanted/actual exact maximum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum period duration in us (on return filled with actual maximum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_time_minmax
.. _doxid-group___p_c_m___h_w___params_1ga993e05e43a31a6151427ba1f793c0b3a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	)

Restrict a configuration space to have period times in a given range.

Wanted/actual exact min/max is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum period duration in us (on return filled with actual minimum)

	*
		- mindir

		- Sub unit direction for minimum (on return filled with actual direction)

	*
		- max

		- approximate maximum period duration in us (on return filled with actual maximum)

	*
		- maxdir

		- Sub unit direction for maximum (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_time_near
.. _doxid-group___p_c_m___h_w___params_1gaa22d4f917c300b0c1f47b348c23705a4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to have period time nearest to a target.

target/chosen exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target period duration in us / returned chosen approximate target period duration

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_period_time_first
.. _doxid-group___p_c_m___h_w___params_1ga478e50e1fa7395af70100b906c31cb67:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its minimum period time.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate period duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_period_time_last
.. _doxid-group___p_c_m___h_w___params_1ga2d48b4bee369912b0fc9b245d6c7a52d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_time_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its maximum period time.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned maximum approximate period time

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

approximate period duration in us

.. index:: pair: function; snd_pcm_hw_params_get_period_size
.. _doxid-group___p_c_m___h_w___params_1gaba48ea189171536f9793e0d99e6db5e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_size(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	)

Extract period size from a configuration space.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_period_size_min
.. _doxid-group___p_c_m___h_w___params_1ga3f6fe37605b54d0a25e8bf1d10f71ae4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_size_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	)

Extract minimum period size from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_period_size_max
.. _doxid-group___p_c_m___h_w___params_1gab5c16621ae697e5ee6f442ec7b7062c5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_period_size_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* frames,
		int* dir
	)

Extract maximum period size from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_period_size
.. _doxid-group___p_c_m___h_w___params_1gabc8712dab6cb135176de77f374d7ee17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_period_size(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val,
		int dir
	)

Verify if a period size is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_period_size
.. _doxid-group___p_c_m___h_w___params_1ga874c977dd9aac275c87a7b1c33a0dec0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val,
		int dir
	)

Restrict a configuration space to contain only one period size.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_size_min
.. _doxid-group___p_c_m___h_w___params_1ga58e0468994d935f08080d9654f1b48b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	)

Restrict a configuration space with a minimum period size.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum period size in frames (on return filled with actual minimum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_size_max
.. _doxid-group___p_c_m___h_w___params_1ga909f442c3d8c20b79de2edf6cc5ded41:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	)

Restrict a configuration space with a maximum period size.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum period size in frames (on return filled with actual maximum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_size_minmax
.. _doxid-group___p_c_m___h_w___params_1ga33c901f8364cb2533d6cdeba732e0e4e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* min,
		int* mindir,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* max,
		int* maxdir
	)

Restrict a configuration space to have period sizes in a given range.

Wanted/actual exact min/max is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum period size in frames (on return filled with actual minimum)

	*
		- mindir

		- Sub unit direction for minimum (on return filled with actual direction)

	*
		- max

		- approximate maximum period size in frames (on return filled with actual maximum)

	*
		- maxdir

		- Sub unit direction for maximum (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_period_size_near
.. _doxid-group___p_c_m___h_w___params_1ga9162045265f283c532634506456cab09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	)

Restrict a configuration space to have period size nearest to a target.

target/chosen exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target period size in frames / returned chosen approximate target period size

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_period_size_first
.. _doxid-group___p_c_m___h_w___params_1gaf74bbb66a71ece8260be20502822335b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	)

Restrict a configuration space to contain only its minimum period size.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned maximum approximate period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_period_size_last
.. _doxid-group___p_c_m___h_w___params_1gad0bce0ad23b3b708858bb20df81e09a2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val,
		int* dir
	)

Restrict a configuration space to contain only its maximum period size.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned maximum approximate period size in frames

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_period_size_integer
.. _doxid-group___p_c_m___h_w___params_1ga13bc85ca5fe34b19112579a7e27cf41a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_period_size_integer(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	)

Restrict a configuration space to contain only integer period sizes.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_get_periods
.. _doxid-group___p_c_m___h_w___params_1ga7242d7045ae23a9ae736c191030c25e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_periods(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract periods from a configuration space.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_periods_min
.. _doxid-group___p_c_m___h_w___params_1ga17f3826360b0fe1f47c696388d25ac93:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_periods_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract minimum periods count from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_periods_max
.. _doxid-group___p_c_m___h_w___params_1ga60417687267cd6ddc56a9c15179fe275:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_periods_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract maximum periods count from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_periods
.. _doxid-group___p_c_m___h_w___params_1ga0de7350f433935a995d439fe38f55088:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_periods(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Verify if a periods count is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_periods
.. _doxid-group___p_c_m___h_w___params_1ga472aa3f2d8ce4040caa874fe60aba961:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Restrict a configuration space to contain only one periods count.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_periods_min
.. _doxid-group___p_c_m___h_w___params_1gaa2642b54ed1c2e26e595ecf3d5b29edc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a minimum periods count.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum periods per buffer (on return filled with actual minimum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_periods_max
.. _doxid-group___p_c_m___h_w___params_1ga636d1d9a6333fb2acc8a6e84391ea0a6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a maximum periods count.

Wanted/actual exact maximum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum periods per buffer (on return filled with actual maximum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_periods_minmax
.. _doxid-group___p_c_m___h_w___params_1gaf638d94e53872415d3bb6d9169104891:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	)

Restrict a configuration space to have periods counts in a given range.

Wanted/actual exact min/max is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum periods per buffer (on return filled with actual minimum)

	*
		- mindir

		- Sub unit direction for minimum (on return filled with actual direction)

	*
		- max

		- approximate maximum periods per buffer (on return filled with actual maximum)

	*
		- maxdir

		- Sub unit direction for maximum (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_periods_near
.. _doxid-group___p_c_m___h_w___params_1ga2fadb73803f58b900ac34846c14894ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to have periods count nearest to a target.

target/chosen exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target periods per buffer / returned chosen approximate target periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_periods_first
.. _doxid-group___p_c_m___h_w___params_1gaa8fbd81ce54fac30f60768fb36210a6f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its minimum periods count.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate minimum periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_periods_last
.. _doxid-group___p_c_m___h_w___params_1ga1366dd00b920ef459d2dbf8a64408725:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its maximum periods count.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate maximum periods per buffer

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_periods_integer
.. _doxid-group___p_c_m___h_w___params_1gab7356d30758dfcf11ff5874fd033913b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_periods_integer(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params
	)

Restrict a configuration space to contain only integer periods counts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_get_buffer_time
.. _doxid-group___p_c_m___h_w___params_1gabdea994550dbf7ab176e3c90baa3a30b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_time(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract buffer time from a configuration space.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned buffer time in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_buffer_time_min
.. _doxid-group___p_c_m___h_w___params_1gaa18c9999c27632f6c47e163b6af17fa9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_time_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract minimum buffer time from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_buffer_time_max
.. _doxid-group___p_c_m___h_w___params_1ga67a33176f4f05231863b37b09527c0e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_time_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Extract maximum buffer time from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_buffer_time
.. _doxid-group___p_c_m___h_w___params_1ga9b6bf73e2a0b7f887f3d7d85a988eb7e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_buffer_time(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Verify if a buffer time is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time
.. _doxid-group___p_c_m___h_w___params_1gacad42b93e31bca4c9b4074d6ec236d99:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int val,
		int dir
	)

Restrict a configuration space to contain only one buffer time.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_min
.. _doxid-group___p_c_m___h_w___params_1ga2a7cb8c29b2fb75b615366dd40a7dc13:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a minimum buffer time.

Wanted/actual exact minimum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum buffer duration in us (on return filled with actual minimum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_max
.. _doxid-group___p_c_m___h_w___params_1gab80680ff70b72435addde58e88fc1d7b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space with a maximum buffer time.

Wanted/actual exact maximum is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum buffer duration in us (on return filled with actual maximum)

	*
		- dir

		- Sub unit direction (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_minmax
.. _doxid-group___p_c_m___h_w___params_1ga84964e55717a7db70b55f320b56f343f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* min,
		int* mindir,
		unsigned int* max,
		int* maxdir
	)

Restrict a configuration space to have buffer times in a given range.

Wanted/actual exact min/max is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum buffer duration in us (on return filled with actual minimum)

	*
		- mindir

		- Sub unit direction for minimum (on return filled with actual direction)

	*
		- max

		- approximate maximum buffer duration in us (on return filled with actual maximum)

	*
		- maxdir

		- Sub unit direction for maximum (on return filled with actual direction)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_near
.. _doxid-group___p_c_m___h_w___params_1ga3bc1b188576d6d2daae9c56024813d10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to have buffer time nearest to a target.

target/chosen exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target buffer duration in us / returned chosen approximate target buffer duration

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_first
.. _doxid-group___p_c_m___h_w___params_1ga6a29e5f80671ca89d0c185416b5a6c2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its minimum buffer time.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate minimum buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_set_buffer_time_last
.. _doxid-group___p_c_m___h_w___params_1gaec8788f14a0c5452dada23a49cdd4b71:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_time_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		unsigned int* val,
		int* dir
	)

Restrict a configuration space to contain only its maximum buffered time.

Actual exact value is <,=,> the approximate one following dir (-1, 0, 1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate maximum buffer duration in us

	*
		- dir

		- Sub unit direction



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_buffer_size
.. _doxid-group___p_c_m___h_w___params_1gab6556fcaaf926360d2064044a6f6cfb4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_size(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Extract buffer size from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

.. index:: pair: function; snd_pcm_hw_params_get_buffer_size_min
.. _doxid-group___p_c_m___h_w___params_1ga182adecca0ad204a34b27cdaa9d4f672:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_size_min(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Extract minimum buffer size from a configuration space.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate minimum buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_buffer_size_max
.. _doxid-group___p_c_m___h_w___params_1ga3caf61ab086028067b602d48182df708:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_buffer_size_max(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Extract maximum buffer size from a configuration space.

Exact value is <,=,> the returned one following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned approximate maximum buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_test_buffer_size
.. _doxid-group___p_c_m___h_w___params_1ga3ce81a7fe9f677849881f1cfd3b5cb7e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_test_buffer_size(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val
	)

Verify if a buffer size is available inside a configuration space for a PCM.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- buffer size in frames



.. rubric:: Returns:

0 if available a negative error code otherwise

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size
.. _doxid-group___p_c_m___h_w___params_1ga828cf9e11fe84137c2c8d4938a6fca7f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>` val
	)

Restrict a configuration space to contain only one buffer size.

Wanted exact value is <,=,> val following dir (-1,0,1)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_min
.. _doxid-group___p_c_m___h_w___params_1gacc0d26a23389470eae502a3c9f4a2980:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_min(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Restrict a configuration space with a minimum buffer size.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate minimum buffer size in frames (on return filled with actual minimum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_max
.. _doxid-group___p_c_m___h_w___params_1gac36099175c6a85db4a1e51053d5708af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_max(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Restrict a configuration space with a maximum buffer size.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate maximum buffer size in frames (on return filled with actual maximum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_minmax
.. _doxid-group___p_c_m___h_w___params_1gaec830be678524b0a6a173896bc9d2c67:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_minmax(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* min,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* max
	)

Restrict a configuration space to have buffer sizes in a given range.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- min

		- approximate minimum buffer size in frames (on return filled with actual minimum)

	*
		- max

		- approximate maximum buffer size in frames (on return filled with actual maximum)



.. rubric:: Returns:

0 otherwise a negative error code if configuration space would become empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_near
.. _doxid-group___p_c_m___h_w___params_1ga2c00cb635d374030595dbc27b7a983a7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_near(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Restrict a configuration space to have buffer size nearest to a target.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- approximate target buffer size in frames / returned chosen approximate target buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code if configuration space is empty

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_first
.. _doxid-group___p_c_m___h_w___params_1gaca09ba489988fe957fde43cb9dca56a2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_first(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Restrict a configuration space to contain only its minimum buffer size.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned minimum buffer size in frames



.. rubric:: Returns:

buffer size in frames

.. index:: pair: function; snd_pcm_hw_params_set_buffer_size_last
.. _doxid-group___p_c_m___h_w___params_1gade5604a3fe1de55c76942ee4f4e41219:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_set_buffer_size_last(
		:ref:`snd_pcm_t<doxid-group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea>`* pcm,
		:ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Restrict a configuration space to contain only its maximum buffer size.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pcm

		- PCM handle

	*
		- params

		- Configuration space

	*
		- val

		- Returned maximum buffer size in frames



.. rubric:: Returns:

0 otherwise a negative error code

.. index:: pair: function; snd_pcm_hw_params_get_min_align
.. _doxid-group___p_c_m___h_w___params_1ga254712953cb8abe8b1d8478233863217:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_hw_params_get_min_align(
		const :ref:`snd_pcm_hw_params_t<doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>`* params,
		:ref:`snd_pcm_uframes_t<doxid-group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a>`* val
	)

Get the minimum transfer align value in samples.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- params

		- Configuration space

	*
		- val

		- Returned minimum align value



.. rubric:: Returns:

0 otherwise a negative error code if the configuration space does not contain a single value

Macros
------

.. index:: pair: define; snd_pcm_hw_params_alloca
.. _doxid-group___p_c_m___h_w___params_1ga06b83cb9a788f99b7b09b570b4355cee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_pcm_hw_params_alloca(ptr)

allocate an invalid :ref:`snd_pcm_hw_params_t <doxid-group___p_c_m_1ga65c737127994f0a980edad744e36dc40>` using standard alloca



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer

