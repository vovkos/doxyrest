.. index:: pair: group; Sequencer Client Interface
.. _doxid-group___seq_client:

Sequencer Client Interface
==========================

.. toctree::
	:hidden:

	enum_snd_seq_client_type_t.rst

Overview
~~~~~~~~

Sequencer Client Interface :ref:`More...<details-group___seq_client>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct _snd_seq_client_info :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`;
	typedef struct _snd_seq_client_pool :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`;

	// enums

	enum :ref:`snd_seq_client_type_t<doxid-group___seq_client_1gab56446870a0d358e3c4d9b0640fbaeed>`;

	// global functions

	size_t
	:ref:`snd_seq_client_info_sizeof<doxid-group___seq_client_1ga307d71507e4bd63602cd9686840e68ca>`(void);

	int
	:ref:`snd_seq_client_info_malloc<doxid-group___seq_client_1ga632a84797c8b3a96cd188dae681a4c97>`(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`** ptr);

	void
	:ref:`snd_seq_client_info_free<doxid-group___seq_client_1gac6da8138f5ab2966ac7cde41a2218965>`(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* ptr);

	void
	:ref:`snd_seq_client_info_copy<doxid-group___seq_client_1gae45c6df3ba2bfccd72bab8bf0fad4791>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* dst,
		const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* src
	);

	int
	:ref:`snd_seq_client_info_get_client<doxid-group___seq_client_1ga5eccc990c80935a7cc7dc8f9fecc44eb>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	:ref:`snd_seq_client_type_t<doxid-group___seq_client_1gab56446870a0d358e3c4d9b0640fbaeed>`
	:ref:`snd_seq_client_info_get_type<doxid-group___seq_client_1gadf8d7a9e3884ccaccc0fa8f3008a1922>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	const char*
	:ref:`snd_seq_client_info_get_name<doxid-group___seq_client_1ga72c935b373607fea06a2c3ad996d1722>`(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_broadcast_filter<doxid-group___seq_client_1ga68795cb06ceb82f8b02cfcb272024936>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_error_bounce<doxid-group___seq_client_1gaa5788a36d5d5e3ad710114b355957323>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_card<doxid-group___seq_client_1gaf6f134c1ca63142a5d61ea7e44a24eda>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_pid<doxid-group___seq_client_1gab1cc1f3bf148d0510facf7ba194285d2>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	const unsigned char*
	:ref:`snd_seq_client_info_get_event_filter<doxid-group___seq_client_1gac9298146a03d2680fa9bd00bb912fdb9>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_num_ports<doxid-group___seq_client_1gacc60e8ca52278c2ab78bcf317591309b>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	int
	:ref:`snd_seq_client_info_get_event_lost<doxid-group___seq_client_1ga10db9e262a007b34010a1112afca2f73>`(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	void
	:ref:`snd_seq_client_info_set_client<doxid-group___seq_client_1ga202a4ed9a8dcb521b1b7468fd2ea9560>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int client
	);

	void
	:ref:`snd_seq_client_info_set_name<doxid-group___seq_client_1ga17a196d1cba06f3d96f79882884b5cc3>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		const char* name
	);

	void
	:ref:`snd_seq_client_info_set_broadcast_filter<doxid-group___seq_client_1ga69acaad376ff2645afe6dbd46fd74b15>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int val
	);

	void
	:ref:`snd_seq_client_info_set_error_bounce<doxid-group___seq_client_1ga11ffeb226dc9f79a18069d8c3c26d12b>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int val
	);

	void
	:ref:`snd_seq_client_info_set_event_filter<doxid-group___seq_client_1gad130c3a85ea614450905149339419794>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		unsigned char* filter
	);

	void
	:ref:`snd_seq_client_info_event_filter_clear<doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info);

	void
	:ref:`snd_seq_client_info_event_filter_add<doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	);

	void
	:ref:`snd_seq_client_info_event_filter_del<doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	);

	int
	:ref:`snd_seq_client_info_event_filter_check<doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	);

	int
	:ref:`snd_seq_get_client_info<doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	);

	int
	:ref:`snd_seq_get_any_client_info<doxid-group___seq_client_1gaa6c062d0423dbd735c0f97f3e0aad6ee>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int client,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	);

	int
	:ref:`snd_seq_set_client_info<doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	);

	int
	:ref:`snd_seq_query_next_client<doxid-group___seq_client_1ga71ed00b1bf9265563a5377e720511cae>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	);

	size_t
	:ref:`snd_seq_client_pool_sizeof<doxid-group___seq_client_1ga64dd385218ec42e3b29a3fbbea4f16ae>`(void);

	int
	:ref:`snd_seq_client_pool_malloc<doxid-group___seq_client_1ga9e7694a46464eef735baa6fe707772e5>`(:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`** ptr);

	void
	:ref:`snd_seq_client_pool_free<doxid-group___seq_client_1gadf2b20b02752e3986a04191e8f978114>`(:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* ptr);

	void
	:ref:`snd_seq_client_pool_copy<doxid-group___seq_client_1ga2800f799c3d2f91dad38ac4507fbf5a2>`(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* dst,
		const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* src
	);

	int
	:ref:`snd_seq_client_pool_get_client<doxid-group___seq_client_1ga0fe8815acdcea59b64f6c8309fd3976f>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	size_t
	:ref:`snd_seq_client_pool_get_output_pool<doxid-group___seq_client_1ga97029b162c526b18a06b989b0ceb0ba0>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	size_t
	:ref:`snd_seq_client_pool_get_input_pool<doxid-group___seq_client_1ga2a30c5144b83b16742dc58a43c3285d8>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	size_t
	:ref:`snd_seq_client_pool_get_output_room<doxid-group___seq_client_1ga08f0213028e27cc005d2ae9deab054ff>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	size_t
	:ref:`snd_seq_client_pool_get_output_free<doxid-group___seq_client_1ga2ed48ca260bbeae082d7ff9e92d29e03>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	size_t
	:ref:`snd_seq_client_pool_get_input_free<doxid-group___seq_client_1gaee2a604809f284e9de22cf36aaa4326b>`(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info);

	void
	:ref:`snd_seq_client_pool_set_output_pool<doxid-group___seq_client_1gac32365b27518a67e72231f835f3eb054>`(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	);

	void
	:ref:`snd_seq_client_pool_set_input_pool<doxid-group___seq_client_1ga197e31b28dedbe68946704c38e6805d0>`(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	);

	void
	:ref:`snd_seq_client_pool_set_output_room<doxid-group___seq_client_1ga1bedc9459e1ec6e4dfa34904105dc215>`(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	);

	int
	:ref:`snd_seq_get_client_pool<doxid-group___seq_client_1ga896dd0d346d66cc7deac06eaf7ce056a>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info
	);

	int
	:ref:`snd_seq_set_client_pool<doxid-group___seq_client_1ga076635492cecbf740302c97a4a84ea07>`(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info
	);

	// macros

	#define :ref:`snd_seq_client_info_alloca<doxid-group___seq_client_1ga894207ef8acec9da5fffe597749deca4>`(ptr)
	#define :ref:`snd_seq_client_pool_alloca<doxid-group___seq_client_1ga662f3c4e0f6d83fbaa6737c028a67ddb>`(ptr)

.. _details-group___seq_client:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Sequencer Client Interface

Typedefs
--------

.. index:: pair: typedef; snd_seq_client_info_t
.. _doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_client_info snd_seq_client_info_t

client information container

.. index:: pair: typedef; snd_seq_client_pool_t
.. _doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct _snd_seq_client_pool snd_seq_client_pool_t

client pool information container

Global Functions
----------------

.. index:: pair: function; snd_seq_client_info_sizeof
.. _doxid-group___seq_client_1ga307d71507e4bd63602cd9686840e68ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_info_sizeof(void)

get size of :ref:`snd_seq_client_info_t <doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_client_info_malloc
.. _doxid-group___seq_client_1ga632a84797c8b3a96cd188dae681a4c97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_malloc(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`** ptr)

allocate an empty :ref:`snd_seq_client_info_t <doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_client_info_free
.. _doxid-group___seq_client_1gac6da8138f5ab2966ac7cde41a2218965:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_free(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* ptr)

frees a previously allocated :ref:`snd_seq_client_info_t <doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_client_info_copy
.. _doxid-group___seq_client_1gae45c6df3ba2bfccd72bab8bf0fad4791:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_copy(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* dst,
		const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* src
	)

copy one :ref:`snd_seq_client_info_t <doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_client_info_get_client
.. _doxid-group___seq_client_1ga5eccc990c80935a7cc7dc8f9fecc44eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_client(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get client id of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

client id



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_set_client() <doxid-group___seq_client_1ga202a4ed9a8dcb521b1b7468fd2ea9560>`, :ref:`snd_seq_client_id() <doxid-group___sequencer_1ga2cdaded101f041b9a0930b665ac44b93>`

.. index:: pair: function; snd_seq_client_info_get_type
.. _doxid-group___seq_client_1gadf8d7a9e3884ccaccc0fa8f3008a1922:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`snd_seq_client_type_t<doxid-group___seq_client_1gab56446870a0d358e3c4d9b0640fbaeed>`
	snd_seq_client_info_get_type(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get client type of a client_info container.

The client type is either :ref:`SND_SEQ_KERNEL_CLIENT <doxid-group___seq_client_1ggab56446870a0d358e3c4d9b0640fbaeeda72126c32d00cabdf8e6c6d555791e4e0>` or :ref:`SND_SEQ_USER_CLIENT <doxid-group___seq_client_1ggab56446870a0d358e3c4d9b0640fbaeedad496718243f7aac36d8e7f0ff4bd5cf7>` for kernel or user client respectively.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

client type



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_client_info_get_name
.. _doxid-group___seq_client_1ga72c935b373607fea06a2c3ad996d1722:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const char*
	snd_seq_client_info_get_name(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the name of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

name string



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_set_name() <doxid-group___seq_client_1ga17a196d1cba06f3d96f79882884b5cc3>`

.. index:: pair: function; snd_seq_client_info_get_broadcast_filter
.. _doxid-group___seq_client_1ga68795cb06ceb82f8b02cfcb272024936:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_broadcast_filter(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the broadcast filter usage of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

1 if broadcast is accepted



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_set_broadcast_filter() <doxid-group___seq_client_1ga69acaad376ff2645afe6dbd46fd74b15>`

.. index:: pair: function; snd_seq_client_info_get_error_bounce
.. _doxid-group___seq_client_1gaa5788a36d5d5e3ad710114b355957323:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_error_bounce(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the error-bounce usage of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

1 if error-bounce is enabled



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_set_error_bounce() <doxid-group___seq_client_1ga11ffeb226dc9f79a18069d8c3c26d12b>`

.. index:: pair: function; snd_seq_client_info_get_card
.. _doxid-group___seq_client_1gaf6f134c1ca63142a5d61ea7e44a24eda:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_card(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the sound card number.

Only available for SND_SEQ_KERNEL_CLIENT clients.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

card number or -1 if value is not available.

.. index:: pair: function; snd_seq_client_info_get_pid
.. _doxid-group___seq_client_1gab1cc1f3bf148d0510facf7ba194285d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_pid(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the owning PID.

Only available for SND_SEQ_USER_CLIENT clients.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

pid or -1 if value is not available.

.. index:: pair: function; snd_seq_client_info_get_event_filter
.. _doxid-group___seq_client_1gac9298146a03d2680fa9bd00bb912fdb9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const unsigned char*
	snd_seq_client_info_get_event_filter(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

(DEPRECATED) Get the event filter bitmap of a client_info container

Use :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>` instead.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

NULL if no event filter, or pointer to event filter bitmap



.. rubric:: See also:

:ref:`snd_seq_client_info_event_filter_add() <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`, :ref:`snd_seq_client_info_event_filter_del() <doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`, :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`, :ref:`snd_seq_client_info_event_filter_clear() <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`, :ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_client_info_get_num_ports
.. _doxid-group___seq_client_1gacc60e8ca52278c2ab78bcf317591309b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_num_ports(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the number of opened ports of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

number of opened ports



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_client_info_get_event_lost
.. _doxid-group___seq_client_1ga10db9e262a007b34010a1112afca2f73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_get_event_lost(const :ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Get the number of lost events of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: Returns:

number of lost events



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_client_info_set_client
.. _doxid-group___seq_client_1ga202a4ed9a8dcb521b1b7468fd2ea9560:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_set_client(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int client
	)

Set the client id of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- client

		- client id



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_get_client() <doxid-group___seq_client_1ga5eccc990c80935a7cc7dc8f9fecc44eb>`

.. index:: pair: function; snd_seq_client_info_set_name
.. _doxid-group___seq_client_1ga17a196d1cba06f3d96f79882884b5cc3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_set_name(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		const char* name
	)

Set the name of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- name

		- name string



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_get_name() <doxid-group___seq_client_1ga72c935b373607fea06a2c3ad996d1722>`, :ref:`snd_seq_set_client_name() <doxid-group___seq_middle_1gaec3acab3bfb3df3f0c9ccc4903570b9d>`

.. index:: pair: function; snd_seq_client_info_set_broadcast_filter
.. _doxid-group___seq_client_1ga69acaad376ff2645afe6dbd46fd74b15:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_set_broadcast_filter(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int val
	)

Set the broadcast filter usage of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- val

		- non-zero if broadcast is accepted



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_get_broadcast_filter() <doxid-group___seq_client_1ga68795cb06ceb82f8b02cfcb272024936>`

.. index:: pair: function; snd_seq_client_info_set_error_bounce
.. _doxid-group___seq_client_1ga11ffeb226dc9f79a18069d8c3c26d12b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_set_error_bounce(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int val
	)

Set the error-bounce usage of a client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- val

		- non-zero if error is bounced



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_client_info_get_error_bounce() <doxid-group___seq_client_1gaa5788a36d5d5e3ad710114b355957323>`

.. index:: pair: function; snd_seq_client_info_set_event_filter
.. _doxid-group___seq_client_1gad130c3a85ea614450905149339419794:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_set_event_filter(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		unsigned char* filter
	)

(DEPRECATED) Set the event filter bitmap of a client_info container

Use :ref:`snd_seq_client_info_event_filter_add <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>` instead.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- filter

		- event filter bitmap, pass NULL for no event filtering



.. rubric:: See also:

:ref:`snd_seq_client_info_event_filter_add() <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`, :ref:`snd_seq_client_info_event_filter_del() <doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`, :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`, :ref:`snd_seq_client_info_event_filter_clear() <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`

.. index:: pair: function; snd_seq_client_info_event_filter_clear
.. _doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_event_filter_clear(:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info)

Disable event filtering of a client_info container.

Remove all event types added with :ref:`snd_seq_client_info_event_filter_add <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>` and clear the event filtering flag of this client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container



.. rubric:: See also:

:ref:`snd_seq_client_info_event_filter_add() <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`, :ref:`snd_seq_client_info_event_filter_del() <doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`, :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`, :ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`

.. index:: pair: function; snd_seq_client_info_event_filter_add
.. _doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_event_filter_add(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	)

Add an event type to the event filtering of a client_info container.

Set the event filtering flag of this client_info and add the specified event type to the filter bitmap of this client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- event_type

		- event type to be added



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`, :ref:`snd_seq_client_info_event_filter_del() <doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`, :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`, :ref:`snd_seq_client_info_event_filter_clear() <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`

.. index:: pair: function; snd_seq_client_info_event_filter_del
.. _doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_info_event_filter_del(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	)

Remove an event type from the event filtering of a client_info container.

Removes the specified event from the filter bitmap of this client_info container. It will not clear the event filtering flag, use :ref:`snd_seq_client_info_event_filter_clear <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>` instead.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- event_type

		- event type to be removed



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`, :ref:`snd_seq_client_info_event_filter_add() <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`, :ref:`snd_seq_client_info_event_filter_check() <doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff>`, :ref:`snd_seq_client_info_event_filter_clear() <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`

.. index:: pair: function; snd_seq_client_info_event_filter_check
.. _doxid-group___seq_client_1ga252e1390151d892c190f4e1744046bff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_info_event_filter_check(
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info,
		int event_type
	)

Check if an event type is present in the event filtering of a client_info container.

Test if the event type is in the filter bitmap of this client_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_info container

	*
		- event_type

		- event type to be checked



.. rubric:: Returns:

1 if the event type is present, 0 otherwise



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`, :ref:`snd_seq_client_info_event_filter_add() <doxid-group___seq_client_1ga90f86c0c27e8f279c887728ed59d2ec5>`, :ref:`snd_seq_client_info_event_filter_del() <doxid-group___seq_client_1ga379ef80c5c54ad11188ed0256068f83a>`, :ref:`snd_seq_client_info_event_filter_clear() <doxid-group___seq_client_1ga70d31a588c75cc7e8407974942f8f974>`

.. index:: pair: function; snd_seq_get_client_info
.. _doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_client_info(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	)

obtain the current client information

Obtains the information of the current client stored on info. client and type fields are ignored.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- the pointer to be stored



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_any_client_info() <doxid-group___seq_client_1gaa6c062d0423dbd735c0f97f3e0aad6ee>`, :ref:`snd_seq_set_client_info() <doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587>`, :ref:`snd_seq_query_next_client() <doxid-group___seq_client_1ga71ed00b1bf9265563a5377e720511cae>`

.. index:: pair: function; snd_seq_get_any_client_info
.. _doxid-group___seq_client_1gaa6c062d0423dbd735c0f97f3e0aad6ee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_any_client_info(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		int client,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	)

obtain the information of the given client

Obtains the information of the client with a client id specified by info argument. The obtained information is written on info parameter.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- client

		- client id

	*
		- info

		- the pointer to be stored



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_set_client_info
.. _doxid-group___seq_client_1ga109f62fb356c322533ddde4a6ce2c587:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_info(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	)

set the current client information

Obtains the information of the current client stored on info. client and type fields are ignored.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- the client info data to set



.. rubric:: Returns:

0 on success otherwise a negative error code



.. rubric:: See also:

:ref:`snd_seq_get_client_info() <doxid-group___seq_client_1gad4e3dd20d087a3ac4b709b4fbb525ad7>`

.. index:: pair: function; snd_seq_query_next_client
.. _doxid-group___seq_client_1ga71ed00b1bf9265563a5377e720511cae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_query_next_client(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_info_t<doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>`* info
	)

query the next client

Queries the next client. The search begins at the client with an id one greater than client field in info. If a client is found, its attributes are stored in info, and zero is returned. Otherwise returns a negative error code.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- query pattern and result



.. rubric:: See also:

:ref:`snd_seq_get_any_client_info() <doxid-group___seq_client_1gaa6c062d0423dbd735c0f97f3e0aad6ee>`

.. index:: pair: function; snd_seq_client_pool_sizeof
.. _doxid-group___seq_client_1ga64dd385218ec42e3b29a3fbbea4f16ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_sizeof(void)

get size of :ref:`snd_seq_client_pool_t <doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_seq_client_pool_malloc
.. _doxid-group___seq_client_1ga9e7694a46464eef735baa6fe707772e5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_pool_malloc(:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`** ptr)

allocate an empty :ref:`snd_seq_client_pool_t <doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_seq_client_pool_free
.. _doxid-group___seq_client_1gadf2b20b02752e3986a04191e8f978114:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_pool_free(:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* ptr)

frees a previously allocated :ref:`snd_seq_client_pool_t <doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_seq_client_pool_copy
.. _doxid-group___seq_client_1ga2800f799c3d2f91dad38ac4507fbf5a2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_pool_copy(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* dst,
		const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* src
	)

copy one :ref:`snd_seq_client_pool_t <doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_seq_client_pool_get_client
.. _doxid-group___seq_client_1ga0fe8815acdcea59b64f6c8309fd3976f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_client_pool_get_client(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the client id of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

client id

.. index:: pair: function; snd_seq_client_pool_get_output_pool
.. _doxid-group___seq_client_1ga97029b162c526b18a06b989b0ceb0ba0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_get_output_pool(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the output pool size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

output pool size

.. index:: pair: function; snd_seq_client_pool_get_input_pool
.. _doxid-group___seq_client_1ga2a30c5144b83b16742dc58a43c3285d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_get_input_pool(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the input pool size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

input pool size

.. index:: pair: function; snd_seq_client_pool_get_output_room
.. _doxid-group___seq_client_1ga08f0213028e27cc005d2ae9deab054ff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_get_output_room(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the output room size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

output room size

.. index:: pair: function; snd_seq_client_pool_get_output_free
.. _doxid-group___seq_client_1ga2ed48ca260bbeae082d7ff9e92d29e03:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_get_output_free(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the available size on output pool of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

available output size

.. index:: pair: function; snd_seq_client_pool_get_input_free
.. _doxid-group___seq_client_1gaee2a604809f284e9de22cf36aaa4326b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_seq_client_pool_get_input_free(const :ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info)

Get the available size on input pool of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container



.. rubric:: Returns:

available input size

.. index:: pair: function; snd_seq_client_pool_set_output_pool
.. _doxid-group___seq_client_1gac32365b27518a67e72231f835f3eb054:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_pool_set_output_pool(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	)

Set the output pool size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container

	*
		- size

		- output pool size

.. index:: pair: function; snd_seq_client_pool_set_input_pool
.. _doxid-group___seq_client_1ga197e31b28dedbe68946704c38e6805d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_pool_set_input_pool(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	)

Set the input pool size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container

	*
		- size

		- input pool size

.. index:: pair: function; snd_seq_client_pool_set_output_room
.. _doxid-group___seq_client_1ga1bedc9459e1ec6e4dfa34904105dc215:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_seq_client_pool_set_output_room(
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info,
		size_t size
	)

Set the output room size of a queue_info container.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- info

		- client_pool container

	*
		- size

		- output room size

.. index:: pair: function; snd_seq_get_client_pool
.. _doxid-group___seq_client_1ga896dd0d346d66cc7deac06eaf7ce056a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_get_client_pool(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info
	)

obtain the pool information of the current client



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- information to be stored

.. index:: pair: function; snd_seq_set_client_pool
.. _doxid-group___seq_client_1ga076635492cecbf740302c97a4a84ea07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_seq_set_client_pool(
		:ref:`snd_seq_t<doxid-group___sequencer_1gae141149958a7458806152ed5942a1acd>`* handle,
		:ref:`snd_seq_client_pool_t<doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>`* info
	)

set the pool information

Sets the pool information of the current client. The client field in *info* is replaced automatically with the current id.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- seq

		- sequencer handle

	*
		- info

		- information to update

Macros
------

.. index:: pair: define; snd_seq_client_info_alloca
.. _doxid-group___seq_client_1ga894207ef8acec9da5fffe597749deca4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_client_info_alloca(ptr)

allocate a :ref:`snd_seq_client_info_t <doxid-group___seq_client_1gaab203ba82e80c859c8d577fb733e3ed7>` container on stack

.. index:: pair: define; snd_seq_client_pool_alloca
.. _doxid-group___seq_client_1ga662f3c4e0f6d83fbaa6737c028a67ddb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_seq_client_pool_alloca(ptr)

allocate a :ref:`snd_seq_client_pool_t <doxid-group___seq_client_1gadc7ce8adaec84d42695492f0ba2515af>` container on stack

