.. index:: pair: group; Access Mask Functions
.. _doxid-group___p_c_m___access:

Access Mask Functions
=====================

.. toctree::
	:hidden:

Overview
~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details. :ref:`More...<details-group___p_c_m___access>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	size_t
	:ref:`snd_pcm_access_mask_sizeof<doxid-group___p_c_m___access_1ga963ead3f1169f4b5e03a2968adc9cb0a>`(void);

	int
	:ref:`snd_pcm_access_mask_malloc<doxid-group___p_c_m___access_1gafedd1f9c96aa8a93ab7f2c0135de3780>`(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`** ptr);

	void
	:ref:`snd_pcm_access_mask_free<doxid-group___p_c_m___access_1ga965129493161fae3ab534209b7e6b2bc>`(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* obj);

	void
	:ref:`snd_pcm_access_mask_copy<doxid-group___p_c_m___access_1ga4fc7338c7c0cd715ea384d4e308d5925>`(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* dst,
		const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* src
	);

	void
	:ref:`snd_pcm_access_mask_none<doxid-group___p_c_m___access_1gaa8202ce90275d6dfe2623cbacbc93708>`(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask);

	void
	:ref:`snd_pcm_access_mask_any<doxid-group___p_c_m___access_1ga76b2575826977951a862c5e78e81993c>`(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask);

	int
	:ref:`snd_pcm_access_mask_test<doxid-group___p_c_m___access_1ga381ade7f78d8614b38dde36ba0393f74>`(
		const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	);

	int
	:ref:`snd_pcm_access_mask_empty<doxid-group___p_c_m___access_1ga224e84b7b1362aea503b0595512bac77>`(const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask);

	void
	:ref:`snd_pcm_access_mask_set<doxid-group___p_c_m___access_1gadc0a0f989a9faca8b25b2c35d4b14e14>`(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	);

	void
	:ref:`snd_pcm_access_mask_reset<doxid-group___p_c_m___access_1ga35c6aaf5b55ef8dd1c4939467869db86>`(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	);

	// macros

	#define :ref:`snd_pcm_access_mask_alloca<doxid-group___p_c_m___access_1ga8097b3ae42fa4a2e5bece2ca95b515b7>`(ptr)

.. _details-group___p_c_m___access:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

See the :ref:`PCM (digital audio) interface <doxid-pcm>` page for more details.

Global Functions
----------------

.. index:: pair: function; snd_pcm_access_mask_sizeof
.. _doxid-group___p_c_m___access_1ga963ead3f1169f4b5e03a2968adc9cb0a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t
	snd_pcm_access_mask_sizeof(void)

get size of :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Returns:

size in bytes

.. index:: pair: function; snd_pcm_access_mask_malloc
.. _doxid-group___p_c_m___access_1gafedd1f9c96aa8a93ab7f2c0135de3780:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_access_mask_malloc(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`** ptr)

allocate an empty :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>` using standard malloc



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer



.. rubric:: Returns:

0 on success otherwise negative error code

.. index:: pair: function; snd_pcm_access_mask_free
.. _doxid-group___p_c_m___access_1ga965129493161fae3ab534209b7e6b2bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_free(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* obj)

frees a previously allocated :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- obj

		- pointer to object to free

.. index:: pair: function; snd_pcm_access_mask_copy
.. _doxid-group___p_c_m___access_1ga4fc7338c7c0cd715ea384d4e308d5925:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_copy(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* dst,
		const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* src
	)

copy one :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>` to another



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dst

		- pointer to destination

	*
		- src

		- pointer to source

.. index:: pair: function; snd_pcm_access_mask_none
.. _doxid-group___p_c_m___access_1gaa8202ce90275d6dfe2623cbacbc93708:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_none(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask)

reset all bits in a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

.. index:: pair: function; snd_pcm_access_mask_any
.. _doxid-group___p_c_m___access_1ga76b2575826977951a862c5e78e81993c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_any(:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask)

set all bits in a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

.. index:: pair: function; snd_pcm_access_mask_test
.. _doxid-group___p_c_m___access_1ga381ade7f78d8614b38dde36ba0393f74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_access_mask_test(
		const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	)

test the presence of an access type in a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

	*
		- val

		- access type

.. index:: pair: function; snd_pcm_access_mask_empty
.. _doxid-group___p_c_m___access_1ga224e84b7b1362aea503b0595512bac77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	snd_pcm_access_mask_empty(const :ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask)

test, if given a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>` is empty



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

	*
		- 0

		- not empty

	*
		- 1

		- empty

.. index:: pair: function; snd_pcm_access_mask_set
.. _doxid-group___p_c_m___access_1gadc0a0f989a9faca8b25b2c35d4b14e14:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_set(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	)

make an access type present in a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

	*
		- val

		- access type

.. index:: pair: function; snd_pcm_access_mask_reset
.. _doxid-group___p_c_m___access_1ga35c6aaf5b55ef8dd1c4939467869db86:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	snd_pcm_access_mask_reset(
		:ref:`snd_pcm_access_mask_t<doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`* mask,
		:ref:`snd_pcm_access_t<doxid-group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a>` val
	)

make an access type missing from a :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mask

		- pointer to mask

	*
		- val

		- access type

Macros
------

.. index:: pair: define; snd_pcm_access_mask_alloca
.. _doxid-group___p_c_m___access_1ga8097b3ae42fa4a2e5bece2ca95b515b7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define snd_pcm_access_mask_alloca(ptr)

allocate an empty :ref:`snd_pcm_access_mask_t <doxid-group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba>` using standard alloca



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ptr

		- returned pointer

