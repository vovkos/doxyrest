.. index:: pair: group; The SSH helper functions.
.. _doxid-group__libssh__misc:

The SSH helper functions.
=========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Different helper functions used in the SSH Library. :ref:`More...<details-group__libssh__misc>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	char*
	:ref:`ssh_basename<doxid-group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b>`(const char* path);

	char*
	:ref:`ssh_dirname<doxid-group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa>`(const char* path);

	int
	:ref:`ssh_getpass<doxid-group__libssh__misc_1gad6effc9fcc3529ae5d7301fb096aa71c>`(
		const char* prompt,
		char* buf,
		size_t len,
		int echo,
		int verify
	);

	int
	:ref:`ssh_mkdir<doxid-group__libssh__misc_1ga5e15e93beecaef3af67d02b7ba55309f>`(
		const char* pathname,
		mode_t mode
	);

	const char*
	:ref:`ssh_version<doxid-group__libssh__misc_1gaeda71ed34a62fa332762f25b14dac6eb>`(int req_version);

	char*
	:ref:`ssh_path_expand_tilde<doxid-group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28>`(const char* d);

	int
	:ref:`ssh_timeout_update<doxid-group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976>`(
		struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* ts,
		int timeout
	);

	const void*
	:target:`_ssh_list_pop_head<doxid-group__libssh__misc_1ga7a36607f228dfde10db885d03b89c32e>`(struct :ref:`ssh_list<doxid-structssh__list>`* list);

	int
	:target:`ssh_analyze_banner<doxid-group__libssh__misc_1ga37f393d573c9692e87b5a838bef7ebe4>`(
		ssh_session session,
		int server,
		int* ssh1,
		int* ssh2
	);

	int
	:target:`ssh_file_readaccess_ok<doxid-group__libssh__misc_1ga8077c07f3f7ca5bc62ac7ba807f30476>`(const char* file);

	char*
	:target:`ssh_get_local_username<doxid-group__libssh__misc_1gaa9b6cc5a03233cde110bc394a9cc1a51>`(void);

	char*
	:target:`ssh_get_user_home_dir<doxid-group__libssh__misc_1ga894753441a2150b0599fdb283bf02c24>`(void);

	char*
	:target:`ssh_hostport<doxid-group__libssh__misc_1gaa8ec4fa8a47283d9a7fd8920e84f8fc1>`(
		const char* host,
		int port
	);

	int
	:target:`ssh_is_ipaddr<doxid-group__libssh__misc_1ga1c673445ca02a6f30ba5940682b5e7ba>`(const char* str);

	int
	:target:`ssh_is_ipaddr_v4<doxid-group__libssh__misc_1ga6b7c4da7c95d8122de1d4f9c12d1a809>`(const char* str);

	static
	struct :ref:`ssh_iterator<doxid-structssh__iterator>`*
	:target:`ssh_iterator_new<doxid-group__libssh__misc_1ga4c467539707d0cee932840c3134ef15d>`(const void* data);

	int
	:target:`ssh_list_append<doxid-group__libssh__misc_1ga4590c6ff62f0e6feb59e2e3152a6721f>`(
		struct :ref:`ssh_list<doxid-structssh__list>`* list,
		const void* data
	);

	struct :ref:`ssh_iterator<doxid-structssh__iterator>`*
	:target:`ssh_list_find<doxid-group__libssh__misc_1ga7a929a68f02650d474604a10252afd68>`(
		const struct :ref:`ssh_list<doxid-structssh__list>`* list,
		void* value
	);

	void
	:target:`ssh_list_free<doxid-group__libssh__misc_1ga069155e0b5924eb930022b8d566f6d28>`(struct :ref:`ssh_list<doxid-structssh__list>`* list);

	struct :ref:`ssh_iterator<doxid-structssh__iterator>`*
	:target:`ssh_list_get_iterator<doxid-group__libssh__misc_1gad36d247bfcae7965d6aca8245d061e0d>`(const struct :ref:`ssh_list<doxid-structssh__list>`* list);

	struct :ref:`ssh_list<doxid-structssh__list>`*
	:target:`ssh_list_new<doxid-group__libssh__misc_1ga4c696e6fd38257737962971fa0362435>`(void);

	int
	:target:`ssh_list_prepend<doxid-group__libssh__misc_1ga7f1c23a518f3ca0b63189763b64141c4>`(
		struct :ref:`ssh_list<doxid-structssh__list>`* list,
		const void* data
	);

	void
	:target:`ssh_list_remove<doxid-group__libssh__misc_1gac862429660a1f93dcf625d08f407b85e>`(
		struct :ref:`ssh_list<doxid-structssh__list>`* list,
		struct :ref:`ssh_iterator<doxid-structssh__iterator>`* iterator
	);

	char*
	:target:`ssh_lowercase<doxid-group__libssh__misc_1ga88c3547781e8d80983e1ad1fe3cb70ff>`(const char* str);

	int
	:target:`ssh_make_milliseconds<doxid-group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e>`(
		long sec,
		long usec
	);

	int
	:target:`ssh_match_group<doxid-group__libssh__misc_1gaf3cfcc97538c099a8f3d2a8b9ac8c258>`(
		const char* group,
		const char* object
	);

	char*
	:target:`ssh_path_expand_escape<doxid-group__libssh__misc_1gabee03cec7d5ba668885bd1a47e9650ea>`(
		ssh_session session,
		const char* s
	);

	int
	:target:`ssh_timeout_elapsed<doxid-group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086>`(
		struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* ts,
		int timeout
	);

	static
	int
	:target:`ssh_timestamp_difference<doxid-group__libssh__misc_1ga8252b2c061fd7e0f75a00696e4edf12d>`(
		struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* old,
		struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* new
	);

	void
	:target:`ssh_timestamp_init<doxid-group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff>`(struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* ts);

	// macros

	#define :target:`CLOCK<doxid-group__libssh__misc_1ga3be7ef61d339af381862a81d4b363efb>`
	#define :target:`NSS_BUFLEN_PASSWD<doxid-group__libssh__misc_1ga89cd34ceafacdb777878d4bf68da7a7e>`

.. _details-group__libssh__misc:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Different helper functions used in the SSH Library.

Global Functions
----------------

.. index:: pair: function; ssh_basename
.. _doxid-group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char*
	ssh_basename(const char* path)

basename - parse filename component.

basename breaks a null-terminated pathname string into a filename component. :ref:`ssh_basename() <doxid-group__libssh__misc_1ga83b053a8bdf80eea5ebc662e5098a52b>` returns the component following the final '/'. Trailing '/' characters are not counted as part of the pathname.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- path

		- The path to parse.



.. rubric:: Returns:

The filename of path or NULL if we can't allocate memory. If path is a the string "/", basename returns the string "/". If path is NULL or an empty string, "." is returned.

.. index:: pair: function; ssh_dirname
.. _doxid-group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char*
	ssh_dirname(const char* path)

Parse directory component.

dirname breaks a null-terminated pathname string into a directory component. In the usual case, :ref:`ssh_dirname() <doxid-group__libssh__misc_1gad36f0f8dbde59aefedd385dff76384fa>` returns the string up to, but not including, the final '/'. Trailing '/' characters are not counted as part of the pathname. The caller must free the memory.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- path

		- The path to parse.



.. rubric:: Returns:

The dirname of path or NULL if we can't allocate memory. If path does not contain a slash, c_dirname() returns the string ".". If path is the string "/", it returns the string "/". If path is NULL or an empty string, "." is returned.

.. index:: pair: function; ssh_getpass
.. _doxid-group__libssh__misc_1gad6effc9fcc3529ae5d7301fb096aa71c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	ssh_getpass(
		const char* prompt,
		char* buf,
		size_t len,
		int echo,
		int verify
	)

Get a password from the console.

You should make sure that the buffer is an empty string!

You can also use this function to ask for a username. Then you can fill the buffer with the username and it is shows to the users. If the users just presses enter the buffer will be untouched.

.. ref-code-block:: cpp

	char username[128];
	
	snprintf(username, sizeof(username), "john");
	
	ssh_getpass("Username:", username, sizeof(username), 1, 0);

The prompt will look like this:

Username: [john]

If you press enter then john is used as the username, or you can type it in to change it.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- prompt

		- The prompt to show to ask for the password.

	*
		- buf

		- The buffer the password should be stored. It NEEDS to be empty or filled out.

	*
		- len

		- The length of the buffer.

	*
		- echo

		- Should we echo what you type.

	*
		- verify

		- Should we ask for the password twice.



.. rubric:: Returns:

0 on success, -1 on error.

.. index:: pair: function; ssh_mkdir
.. _doxid-group__libssh__misc_1ga5e15e93beecaef3af67d02b7ba55309f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	ssh_mkdir(
		const char* pathname,
		mode_t mode
	)

Attempts to create a directory with the given pathname.

This is the portable version of mkdir, mode is ignored on Windows systems.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pathname

		- The path name to create the directory.

	*
		- mode

		- The permissions to use.



.. rubric:: Returns:

0 on success, < 0 on error with errno set.

.. index:: pair: function; ssh_version
.. _doxid-group__libssh__misc_1gaeda71ed34a62fa332762f25b14dac6eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const char*
	ssh_version(int req_version)

Check if libssh is the required version or get the version string.

Example:

.. ref-code-block:: cpp

	if (ssh_version(SSH_VERSION_INT(0,2,1)) == NULL) {
	  fprintf(stderr, "libssh version is too old!\n");
	  exit(1);
	}
	
	if (debug) {
	  printf("libssh %s\n", ssh_version(0));
	}



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- req_version

		- The version required.



.. rubric:: Returns:

If the version of libssh is newer than the version required it will return a version string. NULL if the version is older.

.. index:: pair: function; ssh_path_expand_tilde
.. _doxid-group__libssh__misc_1ga85622306848fd7e735d5843747f6eb28:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char*
	ssh_path_expand_tilde(const char* d)

Expand a directory starting with a tilde '~'.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- d

		- The directory to expand.



.. rubric:: Returns:

The expanded directory, NULL on error.

.. index:: pair: function; ssh_timeout_update
.. _doxid-group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	ssh_timeout_update(
		struct :ref:`ssh_timestamp<doxid-structssh__timestamp>`* ts,
		int timeout
	)

updates a timeout value so it reflects the remaining time



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- ts

		- pointer to an existing timestamp

	*
		- timeout

		- timeout in milliseconds. Negative values mean infinite timeout



.. rubric:: Returns:

remaining time in milliseconds, 0 if elapsed, -1 if never.

